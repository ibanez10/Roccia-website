{
  "version": 3,
  "sources": ["../../@cloudinary/url-gen/config/BaseConfig.js", "../../@cloudinary/url-gen/internal/internalConstants.js", "../../@cloudinary/url-gen/config/URLConfig.js", "../../@cloudinary/url-gen/config/CloudConfig.js", "../../@cloudinary/url-gen/config/CloudinaryConfig.js", "../../@cloudinary/transformation-builder-sdk/transformation/ImageTransformation.js", "../../@cloudinary/transformation-builder-sdk/transformation/VideoTransformation.js", "../../@cloudinary/transformation-builder-sdk/backwards/consts.js", "../../@cloudinary/transformation-builder-sdk/backwards/utils/snakeCase.js", "../../@cloudinary/transformation-builder-sdk/internal/utils/cloneDeep.js", "../../@cloudinary/transformation-builder-sdk/backwards/configuration.js", "../../@cloudinary/transformation-builder-sdk/backwards/utils/legacyBaseUtil.js", "../../@cloudinary/transformation-builder-sdk/backwards/transformation.js", "../../@cloudinary/url-gen/internal/url/urlUtils/isUrl.js", "../../@cloudinary/url-gen/internal/url/urlUtils/isFileName.js", "../../@cloudinary/url-gen/internal/url/urlUtils/publicIDContainsVersion.js", "../../@cloudinary/url-gen/internal/url/cloudinaryURL.js", "../../@cloudinary/url-gen/sdkAnalytics/stringPad.js", "../../@cloudinary/url-gen/sdkAnalytics/base64Map.js", "../../@cloudinary/url-gen/sdkAnalytics/reverseVersion.js", "../../@cloudinary/url-gen/sdkAnalytics/padVersion.js", "../../@cloudinary/url-gen/sdkAnalytics/encodeVersion.js", "../../@cloudinary/url-gen/sdkAnalytics/getAnalyticsOptions.js", "../../@cloudinary/url-gen/internal/utils/packageVersion.js", "../../@cloudinary/url-gen/sdkAnalytics/encodeOSVersion.js", "../../@cloudinary/url-gen/sdkAnalytics/getSDKAnalyticsSignature.js", "../../@cloudinary/url-gen/assets/CloudinaryFile.js", "../../@cloudinary/url-gen/assets/CloudinaryTransformable.js", "../../@cloudinary/url-gen/assets/CloudinaryImage.js", "../../@cloudinary/url-gen/assets/CloudinaryVideo.js", "../../@cloudinary/url-gen/internal/utils/cloneDeep.js", "../../@cloudinary/url-gen/assets/CloudinaryMedia.js", "../../@cloudinary/url-gen/instance/Cloudinary.js", "../../@cloudinary/url-gen/backwards/utils/isObject.js", "../../@cloudinary/url-gen/internal/utils/base64Encode.js", "../../@cloudinary/url-gen/backwards/consts.js", "../../@cloudinary/url-gen/backwards/utils/smartEscape.js", "../../@cloudinary/url-gen/backwards/utils/snakeCase.js", "../../@cloudinary/url-gen/backwards/legacyLayer/layer.js", "../../@cloudinary/url-gen/backwards/utils/isEmpty.js", "../../@cloudinary/url-gen/backwards/utils/isNumberLike.js", "../../@cloudinary/url-gen/backwards/legacyLayer/textlayer.js", "../../@cloudinary/url-gen/backwards/transformationProcessing/processLayer.js", "../../@cloudinary/url-gen/backwards/utils/legacyNormalizeExpression.js", "../../@cloudinary/url-gen/backwards/transformationProcessing/processIf.js", "../../@cloudinary/url-gen/backwards/utils/toArray.js", "../../@cloudinary/url-gen/backwards/transformationProcessing/processRadius.js", "../../@cloudinary/url-gen/backwards/transformationProcessing/processCustomFunction.js", "../../@cloudinary/url-gen/backwards/transformationProcessing/processCustomPreFunction.js", "../../@cloudinary/url-gen/backwards/utils/splitRange.js", "../../@cloudinary/url-gen/backwards/utils/norm_range_values.js", "../../@cloudinary/url-gen/backwards/transformationProcessing/processVideoParams.js", "../../@cloudinary/url-gen/backwards/expression.js", "../../@cloudinary/url-gen/backwards/condition.js", "../../@cloudinary/url-gen/backwards/configuration.js", "../../@cloudinary/url-gen/backwards/utils/legacyBaseUtil.js", "../../@cloudinary/url-gen/backwards/legacyLayer/subtitleslayer.js", "../../@cloudinary/url-gen/internal/utils/dataStructureUtils.js", "../../@cloudinary/url-gen/backwards/legacyLayer/fetchlayer.js", "../../@cloudinary/url-gen/backwards/utils/isFunction.js", "../../@cloudinary/url-gen/backwards/transformation.js", "../../@cloudinary/url-gen/backwards/transformationProcessing/processDpr.js", "../../@cloudinary/url-gen/backwards/generateTransformationString.js", "../../@cloudinary/url-gen/backwards/utils/finalizeResourceType.js", "../../@cloudinary/url-gen/backwards/utils/finalize_source.js", "../../@cloudinary/url-gen/backwards/utils/unsigned_url_prefix.js", "../../@cloudinary/url-gen/backwards/createCloudinaryLegacyURL.js", "../../@cloudinary/url-gen/actions.js", "../../@cloudinary/url-gen/qualifiers.js"],
  "sourcesContent": ["/**\r\n *\r\n * @private\r\n * @param {any} a\r\n */\r\nfunction isObject(a) {\r\n    if (typeof a !== 'object' || a instanceof Array) {\r\n        return false;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\nclass Config {\r\n    filterOutNonSupportedKeys(userProvidedConfig, validKeys) {\r\n        const obj = Object.create({});\r\n        if (isObject(userProvidedConfig)) {\r\n            Object.keys(userProvidedConfig).forEach((key) => {\r\n                if (validKeys.indexOf(key) >= 0) {\r\n                    obj[key] = userProvidedConfig[key];\r\n                }\r\n                else {\r\n                    console.warn('Warning - unsupported key provided to configuration: ', key);\r\n                }\r\n            });\r\n            return obj;\r\n        }\r\n        else {\r\n            return Object.create({});\r\n        }\r\n    }\r\n}\r\nexport default Config;\r\n", "/**\r\n * This file is for internal constants only.\r\n * It is not intended for public use and is not part of the public API\r\n */\r\n/**\r\n * @private\r\n */\r\nexport const ALLOWED_URL_CONFIG = [\r\n    'cname',\r\n    'secureDistribution',\r\n    'privateCdn',\r\n    'signUrl',\r\n    'longUrlSignature',\r\n    'shorten',\r\n    'useRootPath',\r\n    'secure',\r\n    'forceVersion',\r\n    'analytics',\r\n    'queryParams'\r\n];\r\n/**\r\n * @private\r\n */\r\nexport const ALLOWED_CLOUD_CONFIG = [\r\n    'cloudName',\r\n    'apiKey',\r\n    'apiSecret',\r\n    'authToken'\r\n];\r\n", "import Config from \"./BaseConfig.js\";\r\nimport { ALLOWED_URL_CONFIG } from \"../internal/internalConstants.js\";\r\nclass URLConfig extends Config {\r\n    /**\r\n     * @param {IURLConfig} userURLConfig\r\n     */\r\n    constructor(userURLConfig) {\r\n        super();\r\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\r\n        Object.assign(this, {\r\n            secure: true\r\n        }, urlConfig);\r\n    }\r\n    extend(userURLConfig) {\r\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\r\n        return new URLConfig(Object.assign({}, this, urlConfig));\r\n    }\r\n    /**\r\n     * @param {string} value Sets the cname\r\n     */\r\n    setCname(value) {\r\n        this.cname = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {string} value Sets the secureDistribution\r\n     */\r\n    setSecureDistribution(value) {\r\n        this.secureDistribution = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {boolean} value Sets whether to use a private CDN (Removes cloudName from URL)\r\n     */\r\n    setPrivateCdn(value) {\r\n        this.privateCdn = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether or not to sign the URL\r\n     */\r\n    setSignUrl(value) {\r\n        this.signUrl = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether or not to use a long signature\r\n     */\r\n    setLongUrlSignature(value) {\r\n        this.longUrlSignature = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether or not to shorten the URL\r\n     */\r\n    setShorten(value) {\r\n        this.shorten = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether or not to use a root path\r\n     */\r\n    setUseRootPath(value) {\r\n        this.useRootPath = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether or not to deliver the asset through https\r\n     */\r\n    setSecure(value) {\r\n        this.secure = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param value Sets whether to force a version in the URL\r\n     */\r\n    setForceVersion(value) {\r\n        this.forceVersion = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param params Sets additional params\r\n     */\r\n    setQueryParams(params) {\r\n        this.queryParams = params;\r\n        return this;\r\n    }\r\n}\r\nexport default URLConfig;\r\n", "import { ALLOWED_CLOUD_CONFIG } from \"../internal/internalConstants.js\";\r\nimport Config from \"./BaseConfig.js\";\r\nclass CloudConfig extends Config {\r\n    /**\r\n     * @param {ICloudConfig} userCloudConfig {@link ICloudConfig}\r\n     *\r\n     */\r\n    constructor(userCloudConfig) {\r\n        super();\r\n        const cloudConfig = this.filterOutNonSupportedKeys(userCloudConfig, ALLOWED_CLOUD_CONFIG);\r\n        Object.assign(this, cloudConfig);\r\n        if (!this.cloudName) {\r\n            throw 'Missing mandatory field cloudName';\r\n        }\r\n    }\r\n    extend(userCloudConfig) {\r\n        const cloudConfig = this.filterOutNonSupportedKeys(userCloudConfig, ALLOWED_CLOUD_CONFIG);\r\n        return new CloudConfig(Object.assign({}, this, cloudConfig));\r\n    }\r\n    /**\r\n     * @param {string} value Sets the CloudName\r\n     */\r\n    setCloudName(value) {\r\n        this.cloudName = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {string} value Sets the API Key\r\n     */\r\n    setApiKey(value) {\r\n        this.apiKey = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {string} value Sets the API Secret\r\n     */\r\n    setApiSecret(value) {\r\n        this.apiSecret = value;\r\n        return this;\r\n    }\r\n}\r\nexport default CloudConfig;\r\n", "import CloudConfig from \"./CloudConfig.js\";\r\nimport URLConfig from \"./URLConfig.js\";\r\nclass CloudinaryConfig {\r\n    constructor(configurations = {}) {\r\n        this.cloud = new CloudConfig(configurations.cloud);\r\n        this.url = new URLConfig(configurations.url || {});\r\n    }\r\n    /**\r\n     * @description Setter for the cloudConfig\r\n     * @param {ICloudConfig} cld\r\n     */\r\n    setCloudConfig(cld) {\r\n        this.cloud = new CloudConfig(cld);\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Setter for the urlConfig\r\n     * @param {IURLConfig} url\r\n     */\r\n    setURLConfig(url) {\r\n        this.url = new URLConfig(url);\r\n        return this;\r\n    }\r\n    extend(configurations) {\r\n        this.cloud = this.cloud.extend(configurations.cloud || {});\r\n        this.url = this.url.extend(configurations.url || {});\r\n        return this;\r\n    }\r\n}\r\nexport default CloudinaryConfig;\r\n", "import { Transformation } from \"./Transformation.js\";\r\n/**\r\n * @summary SDK\r\n * @extends {SDK.Transformation}\r\n * @memberOf SDK\r\n */\r\nclass ImageTransformation extends Transformation {\r\n}\r\nexport { ImageTransformation };\r\n", "import { Transformation } from \"./Transformation.js\";\r\n/**\r\n * @summary SDK\r\n * @extends {SDK.Transformation}\r\n * @memberOf SDK\r\n */\r\nclass VideoTransformation extends Transformation {\r\n}\r\nexport { VideoTransformation };\r\n", "export const LEGACY_CONDITIONAL_OPERATORS = {\r\n    \"=\": 'eq',\r\n    \"!=\": 'ne',\r\n    \"<\": 'lt',\r\n    \">\": 'gt',\r\n    \"<=\": 'lte',\r\n    \">=\": 'gte',\r\n    \"&&\": 'and',\r\n    \"||\": 'or',\r\n    \"*\": \"mul\",\r\n    \"/\": \"div\",\r\n    \"+\": \"add\",\r\n    \"-\": \"sub\",\r\n    \"^\": \"pow\"\r\n};\r\nexport const CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\r\nexport const OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\r\nexport const AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\r\nexport const SHARED_CDN = AKAMAI_SHARED_CDN;\r\nexport const LEGACY_PREDEFINED_VARS = {\r\n    \"aspect_ratio\": \"ar\",\r\n    \"aspectRatio\": \"ar\",\r\n    \"current_page\": \"cp\",\r\n    \"currentPage\": \"cp\",\r\n    \"duration\": \"du\",\r\n    \"face_count\": \"fc\",\r\n    \"faceCount\": \"fc\",\r\n    \"height\": \"h\",\r\n    \"initial_aspect_ratio\": \"iar\",\r\n    \"initial_height\": \"ih\",\r\n    \"initial_width\": \"iw\",\r\n    \"initialAspectRatio\": \"iar\",\r\n    \"initialHeight\": \"ih\",\r\n    \"initialWidth\": \"iw\",\r\n    \"initial_duration\": \"idu\",\r\n    \"initialDuration\": \"idu\",\r\n    \"page_count\": \"pc\",\r\n    \"page_x\": \"px\",\r\n    \"page_y\": \"py\",\r\n    \"pageCount\": \"pc\",\r\n    \"pageX\": \"px\",\r\n    \"pageY\": \"py\",\r\n    \"tags\": \"tags\",\r\n    \"width\": \"w\"\r\n};\r\nexport const NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\r\nexport const OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\r\nexport const RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\r\nexport const OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`);\r\nexport const LAYER_KEYWORD_PARAMS = {\r\n    font_weight: \"normal\",\r\n    font_style: \"normal\",\r\n    text_decoration: \"none\",\r\n    text_align: '',\r\n    stroke: \"none\"\r\n};\r\n", "/**\r\n * Converts string to snake case\r\n * @param {string} str\r\n */\r\nexport const snakeCase = (str) => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\r\n", "/* eslint-disable */\r\n// @ts-nocheck\r\n// This file is a direct copy from lodash.clonedeep\r\n// Lodash.clonedeep has problems with the module exports, thus a copy was the shortest and cleanest solution\r\n/**\r\n * lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modularize exports=\"npm\" -o ./`\r\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\n/** Used as the size to enable large array optimizations. */\r\nvar LARGE_ARRAY_SIZE = 200;\r\n/** Used to stand-in for `undefined` hash values. */\r\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\r\n/** Used as references for constious `Number` constants. */\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]', arrayTag = '[object Array]', boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]', mapTag = '[object Map]', numberTag = '[object Number]', objectTag = '[object Object]', promiseTag = '[object Promise]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', symbolTag = '[object Symbol]', weakMapTag = '[object WeakMap]';\r\nvar arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';\r\n/**\r\n * Used to match `RegExp`\r\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\r\n */\r\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\r\n/** Used to match `RegExp` flags from their coerced string values. */\r\nvar reFlags = /\\w*$/;\r\n/** Used to detect host constructors (Safari). */\r\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\r\n/** Used to detect unsigned integer values. */\r\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n/** Used to identify `toStringTag` values supported by `_.clone`. */\r\nvar cloneableTags = {};\r\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\r\n    cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\r\n        cloneableTags[boolTag] = cloneableTags[dateTag] =\r\n            cloneableTags[float32Tag] = cloneableTags[float64Tag] =\r\n                cloneableTags[int8Tag] = cloneableTags[int16Tag] =\r\n                    cloneableTags[int32Tag] = cloneableTags[mapTag] =\r\n                        cloneableTags[numberTag] = cloneableTags[objectTag] =\r\n                            cloneableTags[regexpTag] = cloneableTags[setTag] =\r\n                                cloneableTags[stringTag] = cloneableTags[symbolTag] =\r\n                                    cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\r\n                                        cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\r\ncloneableTags[errorTag] = cloneableTags[funcTag] =\r\n    cloneableTags[weakMapTag] = false;\r\n/** Detect free constiable `global` from Node.js. */\r\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\r\n/** Detect free constiable `self`. */\r\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\r\n/** Used as a reference to the global object. */\r\nvar root = freeGlobal || freeSelf || Function('return this')();\r\n/** Detect free constiable `exports`. */\r\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\r\n/** Detect free constiable `module`. */\r\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\r\n/** Detect the popular CommonJS extension `module.exports`. */\r\nvar moduleExports = freeModule && freeModule.exports === freeExports;\r\n/**\r\n * Adds the key-value `pair` to `map`.\r\n *\r\n * @private\r\n * @param {Object} map The map to modify.\r\n * @param {Array} pair The key-value pair to add.\r\n * @returns {Object} Returns `map`.\r\n */\r\nfunction addMapEntry(map, pair) {\r\n    // Don't return `map.set` because it's not chainable in IE 11.\r\n    map.set(pair[0], pair[1]);\r\n    return map;\r\n}\r\n/**\r\n * Adds `value` to `set`.\r\n *\r\n * @private\r\n * @param {Object} set The set to modify.\r\n * @param {*} value The value to add.\r\n * @returns {Object} Returns `set`.\r\n */\r\nfunction addSetEntry(set, value) {\r\n    // Don't return `set.add` because it's not chainable in IE 11.\r\n    set.add(value);\r\n    return set;\r\n}\r\n/**\r\n * A specialized version of `_.forEach` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayEach(array, iteratee) {\r\n    var index = -1, length = array ? array.length : 0;\r\n    while (++index < length) {\r\n        if (iteratee(array[index], index, array) === false) {\r\n            break;\r\n        }\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * Appends the elements of `values` to `array`.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {Array} values The values to append.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayPush(array, values) {\r\n    var index = -1, length = values.length, offset = array.length;\r\n    while (++index < length) {\r\n        array[offset + index] = values[index];\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * A specialized version of `_.reduce` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @param {*} [accumulator] The initial value.\r\n * @param {boolean} [initAccum] Specify using the first element of `array` as\r\n *  the initial value.\r\n * @returns {*} Returns the accumulated value.\r\n */\r\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\r\n    var index = -1, length = array ? array.length : 0;\r\n    if (initAccum && length) {\r\n        accumulator = array[++index];\r\n    }\r\n    while (++index < length) {\r\n        accumulator = iteratee(accumulator, array[index], index, array);\r\n    }\r\n    return accumulator;\r\n}\r\n/**\r\n * The base implementation of `_.times` without support for iteratee shorthands\r\n * or max array length checks.\r\n *\r\n * @private\r\n * @param {number} n The number of times to invoke `iteratee`.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the array of results.\r\n */\r\nfunction baseTimes(n, iteratee) {\r\n    var index = -1, result = Array(n);\r\n    while (++index < n) {\r\n        result[index] = iteratee(index);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Gets the value at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} [object] The object to query.\r\n * @param {string} key The key of the property to get.\r\n * @returns {*} Returns the property value.\r\n */\r\nfunction getValue(object, key) {\r\n    return object == null ? undefined : object[key];\r\n}\r\n/**\r\n * Checks if `value` is a host object in IE < 9.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\r\n */\r\nfunction isHostObject(value) {\r\n    // Many host objects are `Object` objects that can coerce to strings\r\n    // despite having improperly defined `toString` methods.\r\n    var result = false;\r\n    if (value != null && typeof value.toString != 'function') {\r\n        try {\r\n            result = !!(`${value}`);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Converts `map` to its key-value pairs.\r\n *\r\n * @private\r\n * @param {Object} map The map to convert.\r\n * @returns {Array} Returns the key-value pairs.\r\n */\r\nfunction mapToArray(map) {\r\n    var index = -1, result = Array(map.size);\r\n    map.forEach(function (value, key) {\r\n        result[++index] = [key, value];\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * Creates a unary function that invokes `func` with its argument transformed.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {Function} transform The argument transform.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction overArg(func, transform) {\r\n    return function (arg) {\r\n        return func(transform(arg));\r\n    };\r\n}\r\n/**\r\n * Converts `set` to an array of its values.\r\n *\r\n * @private\r\n * @param {Object} set The set to convert.\r\n * @returns {Array} Returns the values.\r\n */\r\nfunction setToArray(set) {\r\n    var index = -1, result = Array(set.size);\r\n    set.forEach(function (value) {\r\n        result[++index] = value;\r\n    });\r\n    return result;\r\n}\r\n/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;\r\n/** Used to detect overreaching core-js shims. */\r\nvar coreJsData = root['__core-js_shared__'];\r\n/** Used to detect methods masquerading as native. */\r\nvar maskSrcKey = (function () {\r\n    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\r\n    return uid ? (`Symbol(src)_1.${uid}`) : '';\r\n}());\r\n/** Used to resolve the decompiled source of functions. */\r\nvar funcToString = funcProto.toString;\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar objectToString = objectProto.toString;\r\n/** Used to detect if a method is native. */\r\nvar reIsNative = RegExp(`^${funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\r\n    .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?')}$`);\r\n/** Built-in value references. */\r\nvar Buffer = moduleExports ? root.Buffer : undefined, Symbol = root.Symbol, Uint8Array = root.Uint8Array, getPrototype = overArg(Object.getPrototypeOf, Object), objectCreate = Object.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice;\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeGetSymbols = Object.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeKeys = overArg(Object.keys, Object);\r\n/* Built-in method references that are verified to be native. */\r\nvar DataView = getNative(root, 'DataView'), Map = getNative(root, 'Map'), Promise = getNative(root, 'Promise'), Set = getNative(root, 'Set'), WeakMap = getNative(root, 'WeakMap'), nativeCreate = getNative(Object, 'create');\r\n/** Used to detect maps, sets, and weakmaps. */\r\nvar dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);\r\n/** Used to convert symbols to primitives and strings. */\r\nvar symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\r\n/**\r\n * Creates a hash object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Hash(entries) {\r\n    var index = -1, length = entries ? entries.length : 0;\r\n    this.clear();\r\n    while (++index < length) {\r\n        var entry = entries[index];\r\n        this.set(entry[0], entry[1]);\r\n    }\r\n}\r\n/**\r\n * Removes all key-value entries from the hash.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf Hash\r\n */\r\nfunction hashClear() {\r\n    this.__data__ = nativeCreate ? nativeCreate(null) : {};\r\n}\r\n/**\r\n * Removes `key` and its value from the hash.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf Hash\r\n * @param {Object} hash The hash to modify.\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction hashDelete(key) {\r\n    return this.has(key) && delete this.__data__[key];\r\n}\r\n/**\r\n * Gets the hash value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction hashGet(key) {\r\n    var data = this.__data__;\r\n    if (nativeCreate) {\r\n        var result = data[key];\r\n        return result === HASH_UNDEFINED ? undefined : result;\r\n    }\r\n    return hasOwnProperty.call(data, key) ? data[key] : undefined;\r\n}\r\n/**\r\n * Checks if a hash value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf Hash\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction hashHas(key) {\r\n    var data = this.__data__;\r\n    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\r\n}\r\n/**\r\n * Sets the hash `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the hash instance.\r\n */\r\nfunction hashSet(key, value) {\r\n    var data = this.__data__;\r\n    data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\r\n    return this;\r\n}\r\n// Add methods to `Hash`.\r\nHash.prototype.clear = hashClear;\r\nHash.prototype.delete = hashDelete;\r\nHash.prototype.get = hashGet;\r\nHash.prototype.has = hashHas;\r\nHash.prototype.set = hashSet;\r\n/**\r\n * Creates an list cache object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction ListCache(entries) {\r\n    var index = -1, length = entries ? entries.length : 0;\r\n    this.clear();\r\n    while (++index < length) {\r\n        var entry = entries[index];\r\n        this.set(entry[0], entry[1]);\r\n    }\r\n}\r\n/**\r\n * Removes all key-value entries from the list cache.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf ListCache\r\n */\r\nfunction listCacheClear() {\r\n    this.__data__ = [];\r\n}\r\n/**\r\n * Removes `key` and its value from the list cache.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction listCacheDelete(key) {\r\n    var data = this.__data__, index = assocIndexOf(data, key);\r\n    if (index < 0) {\r\n        return false;\r\n    }\r\n    var lastIndex = data.length - 1;\r\n    if (index == lastIndex) {\r\n        data.pop();\r\n    }\r\n    else {\r\n        splice.call(data, index, 1);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Gets the list cache value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction listCacheGet(key) {\r\n    var data = this.__data__, index = assocIndexOf(data, key);\r\n    return index < 0 ? undefined : data[index][1];\r\n}\r\n/**\r\n * Checks if a list cache value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf ListCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction listCacheHas(key) {\r\n    return assocIndexOf(this.__data__, key) > -1;\r\n}\r\n/**\r\n * Sets the list cache `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the list cache instance.\r\n */\r\nfunction listCacheSet(key, value) {\r\n    var data = this.__data__, index = assocIndexOf(data, key);\r\n    if (index < 0) {\r\n        data.push([key, value]);\r\n    }\r\n    else {\r\n        data[index][1] = value;\r\n    }\r\n    return this;\r\n}\r\n// Add methods to `ListCache`.\r\nListCache.prototype.clear = listCacheClear;\r\nListCache.prototype.delete = listCacheDelete;\r\nListCache.prototype.get = listCacheGet;\r\nListCache.prototype.has = listCacheHas;\r\nListCache.prototype.set = listCacheSet;\r\n/**\r\n * Creates a map cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction MapCache(entries) {\r\n    var index = -1, length = entries ? entries.length : 0;\r\n    this.clear();\r\n    while (++index < length) {\r\n        var entry = entries[index];\r\n        this.set(entry[0], entry[1]);\r\n    }\r\n}\r\n/**\r\n * Removes all key-value entries from the map.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf MapCache\r\n */\r\nfunction mapCacheClear() {\r\n    this.__data__ = {\r\n        'hash': new Hash,\r\n        'map': new (Map || ListCache),\r\n        'string': new Hash\r\n    };\r\n}\r\n/**\r\n * Removes `key` and its value from the map.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction mapCacheDelete(key) {\r\n    return getMapData(this, key).delete(key);\r\n}\r\n/**\r\n * Gets the map value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction mapCacheGet(key) {\r\n    return getMapData(this, key).get(key);\r\n}\r\n/**\r\n * Checks if a map value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf MapCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction mapCacheHas(key) {\r\n    return getMapData(this, key).has(key);\r\n}\r\n/**\r\n * Sets the map `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the map cache instance.\r\n */\r\nfunction mapCacheSet(key, value) {\r\n    getMapData(this, key).set(key, value);\r\n    return this;\r\n}\r\n// Add methods to `MapCache`.\r\nMapCache.prototype.clear = mapCacheClear;\r\nMapCache.prototype.delete = mapCacheDelete;\r\nMapCache.prototype.get = mapCacheGet;\r\nMapCache.prototype.has = mapCacheHas;\r\nMapCache.prototype.set = mapCacheSet;\r\n/**\r\n * Creates a stack cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Stack(entries) {\r\n    this.__data__ = new ListCache(entries);\r\n}\r\n/**\r\n * Removes all key-value entries from the stack.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf Stack\r\n */\r\nfunction stackClear() {\r\n    this.__data__ = new ListCache;\r\n}\r\n/**\r\n * Removes `key` and its value from the stack.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction stackDelete(key) {\r\n    return this.__data__.delete(key);\r\n}\r\n/**\r\n * Gets the stack value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction stackGet(key) {\r\n    return this.__data__.get(key);\r\n}\r\n/**\r\n * Checks if a stack value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf Stack\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction stackHas(key) {\r\n    return this.__data__.has(key);\r\n}\r\n/**\r\n * Sets the stack `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the stack cache instance.\r\n */\r\nfunction stackSet(key, value) {\r\n    var cache = this.__data__;\r\n    if (cache instanceof ListCache) {\r\n        var pairs = cache.__data__;\r\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\r\n            pairs.push([key, value]);\r\n            return this;\r\n        }\r\n        cache = this.__data__ = new MapCache(pairs);\r\n    }\r\n    cache.set(key, value);\r\n    return this;\r\n}\r\n// Add methods to `Stack`.\r\nStack.prototype.clear = stackClear;\r\nStack.prototype.delete = stackDelete;\r\nStack.prototype.get = stackGet;\r\nStack.prototype.has = stackHas;\r\nStack.prototype.set = stackSet;\r\n/**\r\n * Creates an array of the enumerable property names of the array-like `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @param {boolean} inherited Specify returning inherited property names.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction arrayLikeKeys(value, inherited) {\r\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\r\n    // Safari 9 makes `arguments.length` enumerable in strict mode.\r\n    var result = (isArray(value) || isArguments(value))\r\n        ? baseTimes(value.length, String)\r\n        : [];\r\n    var length = result.length, skipIndexes = !!length;\r\n    for (var key in value) {\r\n        if ((inherited || hasOwnProperty.call(value, key)) &&\r\n            !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\r\n            result.push(key);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons.\r\n *\r\n * @private\r\n * @param {Object} object The object to modify.\r\n * @param {string} key The key of the property to assign.\r\n * @param {*} value The value to assign.\r\n */\r\nfunction assignValue(object, key, value) {\r\n    var objValue = object[key];\r\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\r\n        (value === undefined && !(key in object))) {\r\n        object[key] = value;\r\n    }\r\n}\r\n/**\r\n * Gets the index at which the `key` is found in `array` of key-value pairs.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} key The key to search for.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction assocIndexOf(array, key) {\r\n    var length = array.length;\r\n    while (length--) {\r\n        if (eq(array[length][0], key)) {\r\n            return length;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * The base implementation of `_.assign` without support for multiple sources\r\n * or `customizer` functions.\r\n *\r\n * @private\r\n * @param {Object} object The destination object.\r\n * @param {Object} source The source object.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseAssign(object, source) {\r\n    return object && copyObject(source, keys(source), object);\r\n}\r\n/**\r\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\r\n * traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @param {boolean} [isFull] Specify a clone including symbols.\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @param {string} [key] The key of `value`.\r\n * @param {Object} [object] The parent object of `value`.\r\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\r\n * @returns {*} Returns the cloned value.\r\n */\r\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\r\n    var result;\r\n    if (customizer) {\r\n        result = object ? customizer(value, key, object, stack) : customizer(value);\r\n    }\r\n    if (result !== undefined) {\r\n        return result;\r\n    }\r\n    if (!isObject(value)) {\r\n        return value;\r\n    }\r\n    var isArr = isArray(value);\r\n    if (isArr) {\r\n        result = initCloneArray(value);\r\n        if (!isDeep) {\r\n            return copyArray(value, result);\r\n        }\r\n    }\r\n    else {\r\n        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;\r\n        if (isBuffer(value)) {\r\n            return cloneBuffer(value, isDeep);\r\n        }\r\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\r\n            if (isHostObject(value)) {\r\n                return object ? value : {};\r\n            }\r\n            result = initCloneObject(isFunc ? {} : value);\r\n            if (!isDeep) {\r\n                return copySymbols(value, baseAssign(result, value));\r\n            }\r\n        }\r\n        else {\r\n            if (!cloneableTags[tag]) {\r\n                return object ? value : {};\r\n            }\r\n            result = initCloneByTag(value, tag, baseClone, isDeep);\r\n        }\r\n    }\r\n    // Check for circular references and return its corresponding clone.\r\n    stack || (stack = new Stack);\r\n    var stacked = stack.get(value);\r\n    if (stacked) {\r\n        return stacked;\r\n    }\r\n    stack.set(value, result);\r\n    if (!isArr) {\r\n        var props = isFull ? getAllKeys(value) : keys(value);\r\n    }\r\n    arrayEach(props || value, function (subValue, key) {\r\n        if (props) {\r\n            key = subValue;\r\n            subValue = value[key];\r\n        }\r\n        // Recursively populate clone (susceptible to call stack limits).\r\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * The base implementation of `_.create` without support for assigning\r\n * properties to the created object.\r\n *\r\n * @private\r\n * @param {Object} prototype The object to inherit from.\r\n * @returns {Object} Returns the new object.\r\n */\r\nfunction baseCreate(proto) {\r\n    return isObject(proto) ? objectCreate(proto) : {};\r\n}\r\n/**\r\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\r\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\r\n * symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Function} keysFunc The function to get the keys of `object`.\r\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\r\n    var result = keysFunc(object);\r\n    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\r\n}\r\n/**\r\n * The base implementation of `getTag`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nfunction baseGetTag(value) {\r\n    return objectToString.call(value);\r\n}\r\n/**\r\n * The base implementation of `_.isNative` without bad shim checks.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a native function,\r\n *  else `false`.\r\n */\r\nfunction baseIsNative(value) {\r\n    if (!isObject(value) || isMasked(value)) {\r\n        return false;\r\n    }\r\n    var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\r\n    return pattern.test(toSource(value));\r\n}\r\n/**\r\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction baseKeys(object) {\r\n    if (!isPrototype(object)) {\r\n        return nativeKeys(object);\r\n    }\r\n    var result = [];\r\n    for (var key in Object(object)) {\r\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\r\n            result.push(key);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Creates a clone of  `buffer`.\r\n *\r\n * @private\r\n * @param {Buffer} buffer The buffer to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Buffer} Returns the cloned buffer.\r\n */\r\nfunction cloneBuffer(buffer, isDeep) {\r\n    if (isDeep) {\r\n        return buffer.slice();\r\n    }\r\n    var result = new buffer.constructor(buffer.length);\r\n    buffer.copy(result);\r\n    return result;\r\n}\r\n/**\r\n * Creates a clone of `arrayBuffer`.\r\n *\r\n * @private\r\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\r\n * @returns {ArrayBuffer} Returns the cloned array buffer.\r\n */\r\nfunction cloneArrayBuffer(arrayBuffer) {\r\n    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\r\n    new Uint8Array(result).set(new Uint8Array(arrayBuffer));\r\n    return result;\r\n}\r\n/**\r\n * Creates a clone of `dataView`.\r\n *\r\n * @private\r\n * @param {Object} dataView The data view to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned data view.\r\n */\r\nfunction cloneDataView(dataView, isDeep) {\r\n    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\r\n    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\r\n}\r\n/**\r\n * Creates a clone of `map`.\r\n *\r\n * @private\r\n * @param {Object} map The map to clone.\r\n * @param {Function} cloneFunc The function to clone values.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned map.\r\n */\r\nfunction cloneMap(map, isDeep, cloneFunc) {\r\n    var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\r\n    return arrayReduce(array, addMapEntry, new map.constructor);\r\n}\r\n/**\r\n * Creates a clone of `regexp`.\r\n *\r\n * @private\r\n * @param {Object} regexp The regexp to clone.\r\n * @returns {Object} Returns the cloned regexp.\r\n */\r\nfunction cloneRegExp(regexp) {\r\n    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\r\n    result.lastIndex = regexp.lastIndex;\r\n    return result;\r\n}\r\n/**\r\n * Creates a clone of `set`.\r\n *\r\n * @private\r\n * @param {Object} set The set to clone.\r\n * @param {Function} cloneFunc The function to clone values.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned set.\r\n */\r\nfunction cloneSet(set, isDeep, cloneFunc) {\r\n    var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\r\n    return arrayReduce(array, addSetEntry, new set.constructor);\r\n}\r\n/**\r\n * Creates a clone of the `symbol` object.\r\n *\r\n * @private\r\n * @param {Object} symbol The symbol object to clone.\r\n * @returns {Object} Returns the cloned symbol object.\r\n */\r\nfunction cloneSymbol(symbol) {\r\n    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\r\n}\r\n/**\r\n * Creates a clone of `typedArray`.\r\n *\r\n * @private\r\n * @param {Object} typedArray The typed array to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned typed array.\r\n */\r\nfunction cloneTypedArray(typedArray, isDeep) {\r\n    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\r\n    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\r\n}\r\n/**\r\n * Copies the values of `source` to `array`.\r\n *\r\n * @private\r\n * @param {Array} source The array to copy values from.\r\n * @param {Array} [array=[]] The array to copy values to.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction copyArray(source, array) {\r\n    var index = -1, length = source.length;\r\n    array || (array = Array(length));\r\n    while (++index < length) {\r\n        array[index] = source[index];\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * Copies properties of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy properties from.\r\n * @param {Array} props The property identifiers to copy.\r\n * @param {Object} [object={}] The object to copy properties to.\r\n * @param {Function} [customizer] The function to customize copied values.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copyObject(source, props, object, customizer) {\r\n    object || (object = {});\r\n    var index = -1, length = props.length;\r\n    while (++index < length) {\r\n        var key = props[index];\r\n        var newValue = customizer\r\n            ? customizer(object[key], source[key], key, object, source)\r\n            : undefined;\r\n        assignValue(object, key, newValue === undefined ? source[key] : newValue);\r\n    }\r\n    return object;\r\n}\r\n/**\r\n * Copies own symbol properties of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy symbols from.\r\n * @param {Object} [object={}] The object to copy symbols to.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copySymbols(source, object) {\r\n    return copyObject(source, getSymbols(source), object);\r\n}\r\n/**\r\n * Creates an array of own enumerable property names and symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction getAllKeys(object) {\r\n    return baseGetAllKeys(object, keys, getSymbols);\r\n}\r\n/**\r\n * Gets the data for `map`.\r\n *\r\n * @private\r\n * @param {Object} map The map to query.\r\n * @param {string} key The reference key.\r\n * @returns {*} Returns the map data.\r\n */\r\nfunction getMapData(map, key) {\r\n    var data = map.__data__;\r\n    return isKeyable(key)\r\n        ? data[typeof key == 'string' ? 'string' : 'hash']\r\n        : data.map;\r\n}\r\n/**\r\n * Gets the native function at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {string} key The key of the method to get.\r\n * @returns {*} Returns the function if it's native, else `undefined`.\r\n */\r\nfunction getNative(object, key) {\r\n    var value = getValue(object, key);\r\n    return baseIsNative(value) ? value : undefined;\r\n}\r\n/**\r\n * Creates an array of the own enumerable symbol properties of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of symbols.\r\n */\r\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\r\n/**\r\n * Gets the `toStringTag` of `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nvar getTag = baseGetTag;\r\n// Fallback for data views, maps, sets, and weak maps in IE 11,\r\n// for data views in Edge < 14, and promises in Node.js.\r\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\r\n    (Map && getTag(new Map) != mapTag) ||\r\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\r\n    (Set && getTag(new Set) != setTag) ||\r\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\r\n    getTag = function (value) {\r\n        var result = objectToString.call(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : undefined;\r\n        if (ctorString) {\r\n            switch (ctorString) {\r\n                case dataViewCtorString:\r\n                    return dataViewTag;\r\n                case mapCtorString:\r\n                    return mapTag;\r\n                case promiseCtorString:\r\n                    return promiseTag;\r\n                case setCtorString:\r\n                    return setTag;\r\n                case weakMapCtorString:\r\n                    return weakMapTag;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\n/**\r\n * Initializes an array clone.\r\n *\r\n * @private\r\n * @param {Array} array The array to clone.\r\n * @returns {Array} Returns the initialized clone.\r\n */\r\nfunction initCloneArray(array) {\r\n    var length = array.length, result = array.constructor(length);\r\n    // Add properties assigned by `RegExp#exec`.\r\n    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\r\n        result.index = array.index;\r\n        result.input = array.input;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Initializes an object clone.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nfunction initCloneObject(object) {\r\n    return (typeof object.constructor == 'function' && !isPrototype(object))\r\n        ? baseCreate(getPrototype(object))\r\n        : {};\r\n}\r\n/**\r\n * Initializes an object clone based on its `toStringTag`.\r\n *\r\n * **Note:** This function only supports cloning values with tags of\r\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @param {string} tag The `toStringTag` of the object to clone.\r\n * @param {Function} cloneFunc The function to clone values.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\r\n    var Ctor = object.constructor;\r\n    switch (tag) {\r\n        case arrayBufferTag:\r\n            return cloneArrayBuffer(object);\r\n        case boolTag:\r\n        case dateTag:\r\n            return new Ctor(+object);\r\n        case dataViewTag:\r\n            return cloneDataView(object, isDeep);\r\n        case float32Tag:\r\n        case float64Tag:\r\n        case int8Tag:\r\n        case int16Tag:\r\n        case int32Tag:\r\n        case uint8Tag:\r\n        case uint8ClampedTag:\r\n        case uint16Tag:\r\n        case uint32Tag:\r\n            return cloneTypedArray(object, isDeep);\r\n        case mapTag:\r\n            return cloneMap(object, isDeep, cloneFunc);\r\n        case numberTag:\r\n        case stringTag:\r\n            return new Ctor(object);\r\n        case regexpTag:\r\n            return cloneRegExp(object);\r\n        case setTag:\r\n            return cloneSet(object, isDeep, cloneFunc);\r\n        case symbolTag:\r\n            return cloneSymbol(object);\r\n    }\r\n}\r\n/**\r\n * Checks if `value` is a valid array-like index.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\r\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\r\n */\r\nfunction isIndex(value, length) {\r\n    length = length == null ? MAX_SAFE_INTEGER : length;\r\n    return !!length &&\r\n        (typeof value == 'number' || reIsUint.test(value)) &&\r\n        (value > -1 && value % 1 == 0 && value < length);\r\n}\r\n/**\r\n * Checks if `value` is suitable for use as unique object key.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\r\n */\r\nfunction isKeyable(value) {\r\n    var type = typeof value;\r\n    return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\r\n        ? (value !== '__proto__')\r\n        : (value === null);\r\n}\r\n/**\r\n * Checks if `func` has its source masked.\r\n *\r\n * @private\r\n * @param {Function} func The function to check.\r\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\r\n */\r\nfunction isMasked(func) {\r\n    return !!maskSrcKey && (maskSrcKey in func);\r\n}\r\n/**\r\n * Checks if `value` is likely a prototype object.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\r\n */\r\nfunction isPrototype(value) {\r\n    var Ctor = value && value.constructor, proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\r\n    return value === proto;\r\n}\r\n/**\r\n * Converts `func` to its source code.\r\n *\r\n * @private\r\n * @param {Function} func The function to process.\r\n * @returns {string} Returns the source code.\r\n */\r\nfunction toSource(func) {\r\n    if (func != null) {\r\n        try {\r\n            return funcToString.call(func);\r\n        }\r\n        catch (e) {\r\n        }\r\n        try {\r\n            return (`${func}`);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return '';\r\n}\r\n/**\r\n * This method is like `_.clone` except that it recursively clones `value`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.0.0\r\n * @category Lang\r\n * @param {*} value The value to recursively clone.\r\n * @returns {*} Returns the deep cloned value.\r\n * @see _.clone\r\n * @example\r\n *\r\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\r\n *\r\n * var deep = _.cloneDeep(objects);\r\n * console.log(deep[0] === objects[0]);\r\n * // => false\r\n */\r\nfunction cloneDeep(value) {\r\n    return baseClone(value, true, true);\r\n}\r\n/**\r\n * Performs a\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * comparison between two values to determine if they are equivalent.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': 1 };\r\n * var other = { 'a': 1 };\r\n *\r\n * _.eq(object, object);\r\n * // => true\r\n *\r\n * _.eq(object, other);\r\n * // => false\r\n *\r\n * _.eq('a', 'a');\r\n * // => true\r\n *\r\n * _.eq('a', Object('a'));\r\n * // => false\r\n *\r\n * _.eq(NaN, NaN);\r\n * // => true\r\n */\r\nfunction eq(value, other) {\r\n    return value === other || (value !== value && other !== other);\r\n}\r\n/**\r\n * Checks if `value` is likely an `arguments` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArguments(function() { return arguments; }());\r\n * // => true\r\n *\r\n * _.isArguments([1, 2, 3]);\r\n * // => false\r\n */\r\nfunction isArguments(value) {\r\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\r\n    return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\r\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\r\n}\r\n/**\r\n * Checks if `value` is classified as an `Array` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\r\n * @example\r\n *\r\n * _.isArray([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArray(document.body.children);\r\n * // => false\r\n *\r\n * _.isArray('abc');\r\n * // => false\r\n *\r\n * _.isArray(_.noop);\r\n * // => false\r\n */\r\nvar isArray = Array.isArray;\r\n/**\r\n * Checks if `value` is array-like. A value is considered array-like if it's\r\n * not a function and has a `value.length` that's an integer greater than or\r\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n * @example\r\n *\r\n * _.isArrayLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLike(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLike('abc');\r\n * // => true\r\n *\r\n * _.isArrayLike(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLike(value) {\r\n    return value != null && isLength(value.length) && !isFunction(value);\r\n}\r\n/**\r\n * This method is like `_.isArrayLike` except that it also checks if `value`\r\n * is an object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array-like object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArrayLikeObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject('abc');\r\n * // => false\r\n *\r\n * _.isArrayLikeObject(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLikeObject(value) {\r\n    return isObjectLike(value) && isArrayLike(value);\r\n}\r\n/**\r\n * Checks if `value` is a buffer.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\r\n * @example\r\n *\r\n * _.isBuffer(new Buffer(2));\r\n * // => true\r\n *\r\n * _.isBuffer(new Uint8Array(2));\r\n * // => false\r\n */\r\nvar isBuffer = nativeIsBuffer || stubFalse;\r\n/**\r\n * Checks if `value` is classified as a `Function` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n * @example\r\n *\r\n * _.isFunction(_);\r\n * // => true\r\n *\r\n * _.isFunction(/abc/);\r\n * // => false\r\n */\r\nfunction isFunction(value) {\r\n    // The use of `Object#toString` avoids issues with the `typeof` operator\r\n    // in Safari 8-9 which returns 'object' for typed array and other constructors.\r\n    var tag = isObject(value) ? objectToString.call(value) : '';\r\n    return tag == funcTag || tag == genTag;\r\n}\r\n/**\r\n * Checks if `value` is a valid array-like length.\r\n *\r\n * **Note:** This method is loosely based on\r\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n * @example\r\n *\r\n * _.isLength(3);\r\n * // => true\r\n *\r\n * _.isLength(Number.MIN_VALUE);\r\n * // => false\r\n *\r\n * _.isLength(Infinity);\r\n * // => false\r\n *\r\n * _.isLength('3');\r\n * // => false\r\n */\r\nfunction isLength(value) {\r\n    return typeof value == 'number' &&\r\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\r\n}\r\n/**\r\n * Checks if `value` is the\r\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(_.noop);\r\n * // => true\r\n *\r\n * _.isObject(null);\r\n * // => false\r\n */\r\nfunction isObject(value) {\r\n    var type = typeof value;\r\n    return !!value && (type == 'object' || type == 'function');\r\n}\r\n/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nfunction isObjectLike(value) {\r\n    return !!value && typeof value == 'object';\r\n}\r\n/**\r\n * Creates an array of the own enumerable property names of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects. See the\r\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n * for more details.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.keys(new Foo);\r\n * // => ['a', 'b'] (iteration order is not guaranteed)\r\n *\r\n * _.keys('hi');\r\n * // => ['0', '1']\r\n */\r\nfunction keys(object) {\r\n    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\r\n}\r\n/**\r\n * This method returns a new empty array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {Array} Returns the new empty array.\r\n * @example\r\n *\r\n * var arrays = _.times(2, _.stubArray);\r\n *\r\n * console.log(arrays);\r\n * // => [[], []]\r\n *\r\n * console.log(arrays[0] === arrays[1]);\r\n * // => false\r\n */\r\nfunction stubArray() {\r\n    return [];\r\n}\r\n/**\r\n * This method returns `false`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {boolean} Returns `false`.\r\n * @example\r\n *\r\n * _.times(2, _.stubFalse);\r\n * // => [false, false]\r\n */\r\nfunction stubFalse() {\r\n    return false;\r\n}\r\nexport { cloneDeep };\r\n", "import { cloneDeep } from '../internal/utils/cloneDeep.js';\r\nimport { isObject } from \"./utils/isObject.js\";\r\n/**\r\n * Class for defining account configuration options.\r\n * Depends on 'utils'\r\n */\r\n/**\r\n * Assign values from sources if they are not defined in the destination.\r\n * Once a value is set it does not change\r\n * @function Util.defaults\r\n * @param {Object} destination - the object to assign defaults to\r\n * @param sources\r\n * @param {...Object} source - the source object(s) to assign defaults from\r\n * @return {Object} destination after it was modified\r\n */\r\nconst useDefaultValues = (destination, ...sources) => {\r\n    return sources.reduce(function (dest, source) {\r\n        let key, value;\r\n        for (key in source) {\r\n            // @ts-ignore\r\n            value = source[key];\r\n            // @ts-ignore\r\n            if (dest[key] === void 0) {\r\n                // @ts-ignore\r\n                dest[key] = value;\r\n            }\r\n        }\r\n        return dest;\r\n    }, destination);\r\n};\r\n/**\r\n * Class for defining account configuration options.\r\n * @constructor Configuration\r\n * @param {Object} options - The account configuration parameters to set.\r\n * @see <a href=\"https://cloudinary.com/documentation/solution_overview#configuration_parameters\"\r\n *  target=\"_new\">Available configuration options</a>\r\n */\r\nclass Configuration {\r\n    constructor(options) {\r\n        this.configuration = options == null ? {} : cloneDeep(options);\r\n        useDefaultValues(this.configuration, DEFAULT_CONFIGURATION_PARAMS);\r\n    }\r\n    /**\r\n     * Initializes the configuration. This method is a convenience method that invokes both\r\n     *  {@link Configuration#fromEnvironment|fromEnvironment()} (Node.js environment only)\r\n     *  and {@link Configuration#fromDocument|fromDocument()}.\r\n     *  It first tries to retrieve the configuration from the environment variable.\r\n     *  If not available, it tries from the document meta tags.\r\n     * @function Configuration#init\r\n     * @return {Configuration} returns `this` for chaining\r\n     * @see fromDocument\r\n     * @see fromEnvironment\r\n     */\r\n    init() {\r\n        this.fromEnvironment();\r\n        this.fromDocument();\r\n        return this;\r\n    }\r\n    /**\r\n     * Set a new configuration item\r\n     * @function Configuration#set\r\n     * @param {string} name - the name of the item to set\r\n     * @param {*} value - the value to be set\r\n     * @return {Configuration}\r\n     *\r\n     */\r\n    set(name, value) {\r\n        // @ts-ignore\r\n        this.configuration[name] = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * Get the value of a configuration item\r\n     * @function Configuration#get\r\n     * @param {string} name - the name of the item to set\r\n     * @return {*} the configuration item\r\n     */\r\n    get(name) {\r\n        return this.configuration[name];\r\n    }\r\n    merge(config) {\r\n        Object.assign(this.configuration, cloneDeep(config));\r\n        return this;\r\n    }\r\n    /**\r\n     * Initialize Cloudinary from HTML meta tags.\r\n     * @function Configuration#fromDocument\r\n     * @return {Configuration}\r\n     * @example <meta name=\"cloudinary_cloud_name\" content=\"mycloud\">\r\n     *\r\n     */\r\n    fromDocument() {\r\n        var el, i, len, meta_elements;\r\n        meta_elements = typeof document !== \"undefined\" && document !== null ? document.querySelectorAll('meta[name^=\"cloudinary_\"]') : void 0;\r\n        if (meta_elements) {\r\n            for (i = 0, len = meta_elements.length; i < len; i++) {\r\n                el = meta_elements[i];\r\n                this.configuration[el.getAttribute('name').replace('cloudinary_', '')] = el.getAttribute('content');\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Initialize Cloudinary from the `CLOUDINARY_URL` environment variable.\r\n     *\r\n     * This function will only run under Node.js environment.\r\n     * @function Configuration#fromEnvironment\r\n     * @requires Node.js\r\n     */\r\n    fromEnvironment() {\r\n        var cloudinary_url, query, uri, uriRegex;\r\n        if (typeof process !== \"undefined\" && process !== null && process.env && process.env.CLOUDINARY_URL) {\r\n            cloudinary_url = process.env.CLOUDINARY_URL;\r\n            uriRegex = /cloudinary:\\/\\/(?:(\\w+)(?:\\:([\\w-]+))?@)?([\\w\\.-]+)(?:\\/([^?]*))?(?:\\?(.+))?/;\r\n            uri = uriRegex.exec(cloudinary_url);\r\n            if (uri) {\r\n                if (uri[3] != null) {\r\n                    this.configuration['cloud_name'] = uri[3];\r\n                }\r\n                if (uri[1] != null) {\r\n                    this.configuration['api_key'] = uri[1];\r\n                }\r\n                if (uri[2] != null) {\r\n                    this.configuration['api_secret'] = uri[2];\r\n                }\r\n                if (uri[4] != null) {\r\n                    this.configuration['private_cdn'] = uri[4] != null;\r\n                }\r\n                if (uri[4] != null) {\r\n                    this.configuration['secure_distribution'] = uri[4];\r\n                }\r\n                query = uri[5];\r\n                if (query != null) {\r\n                    query.split('&').forEach(value => {\r\n                        let [k, v] = value.split('=');\r\n                        if (v == null) {\r\n                            // @ts-ignore\r\n                            v = true;\r\n                        }\r\n                        this.configuration[k] = v;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Create or modify the Cloudinary client configuration\r\n     *\r\n     * Warning: `config()` returns the actual internal configuration object. modifying it will change the configuration.\r\n     *\r\n     * This is a backward compatibility method. For new code, use get(), merge() etc.\r\n     * @function Configuration#config\r\n     * @param {hash|string|boolean} new_config\r\n     * @param {string} new_value\r\n     * @returns {*} configuration, or value\r\n     *\r\n     * @see {@link fromEnvironment} for initialization using environment variables\r\n     * @see {@link fromDocument} for initialization using HTML meta tags\r\n     */\r\n    config(new_config, new_value) {\r\n        switch (false) {\r\n            case new_value === void 0:\r\n                this.set(new_config, new_value);\r\n                return this.configuration;\r\n            case typeof new_config != 'string':\r\n                return this.get(new_config);\r\n            case !isObject(new_config):\r\n                this.merge(new_config);\r\n                return this.configuration;\r\n            default:\r\n                // Backward compatibility - return the internal object\r\n                return this.configuration;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a copy of the configuration parameters\r\n     * @function Configuration#toOptions\r\n     * @returns {Object} a key:value collection of the configuration parameters\r\n     */\r\n    toOptions() {\r\n        return cloneDeep(this.configuration);\r\n    }\r\n}\r\nconst DEFAULT_CONFIGURATION_PARAMS = {\r\n    responsive_class: 'cld-responsive',\r\n    responsive_use_breakpoints: true,\r\n    round_dpr: true,\r\n    secure: (typeof window !== \"undefined\" && window !== null ? window.location ? window.location.protocol : void 0 : void 0) === 'https:'\r\n};\r\nexport const CONFIG_PARAMS = [\r\n    \"api_key\",\r\n    \"api_secret\",\r\n    \"callback\",\r\n    \"cdn_subdomain\",\r\n    \"cloud_name\",\r\n    \"cname\",\r\n    \"private_cdn\",\r\n    \"protocol\",\r\n    \"resource_type\",\r\n    \"responsive\",\r\n    \"responsive_class\",\r\n    \"responsive_use_breakpoints\",\r\n    \"responsive_width\",\r\n    \"round_dpr\",\r\n    \"secure\",\r\n    \"secure_cdn_subdomain\",\r\n    \"secure_distribution\",\r\n    \"shorten\",\r\n    \"type\",\r\n    \"upload_preset\",\r\n    \"url_suffix\",\r\n    \"use_root_path\",\r\n    \"version\",\r\n    \"externalLibraries\",\r\n    \"max_timeout_ms\"\r\n];\r\nexport default Configuration;\r\n", "/**\r\n * Create a copy of the source object with all keys in camelCase\r\n * @function Util.withCamelCaseKeys\r\n * @return {Object} a new object\r\n * @param source\r\n */\r\nimport { isEmpty } from \"./isEmpty.js\";\r\nexport const withCamelCaseKeys = function (source) {\r\n    return convertKeys(source, camelCase);\r\n};\r\n/**\r\n * Convert string to camelCase\r\n * @function Util.camelCase\r\n * @param {string} source - the string to convert\r\n * @return {string} in camelCase format\r\n */\r\nexport const camelCase = function (source) {\r\n    var words = source.match(reWords);\r\n    words = words.map(word => word.charAt(0).toLocaleUpperCase() + word.slice(1).toLocaleLowerCase());\r\n    words[0] = words[0].toLocaleLowerCase();\r\n    return words.join('');\r\n};\r\n/**\r\n * Creates a new object from source, with the keys transformed using the converter.\r\n * @param {object} source\r\n * @param {function|null} converter\r\n * @returns {object}\r\n */\r\nexport var convertKeys = function (source, converter) {\r\n    var result, value;\r\n    result = {};\r\n    for (let key in source) {\r\n        value = source[key];\r\n        if (converter) {\r\n            key = converter(key);\r\n        }\r\n        if (!isEmpty(key)) {\r\n            // @ts-ignore\r\n            result[key] = value;\r\n        }\r\n    }\r\n    return result;\r\n};\r\nexport var reWords = (function () {\r\n    var lower, upper;\r\n    upper = '[A-Z]';\r\n    lower = '[a-z]+';\r\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\r\n})();\r\nexport function identity(x) {\r\n    return x;\r\n}\r\nexport function contains(a, obj) {\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (a[i] === obj) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function difference(arr1, arr2) {\r\n    return arr1.filter(x => !arr2.includes(x));\r\n}\r\n", "import Condition from './condition.js';\r\nimport { CONFIG_PARAMS } from './configuration.js';\r\nimport { cloneDeep } from '../internal/utils/cloneDeep.js';\r\nimport { camelCase, contains, difference, } from \"./utils/legacyBaseUtil.js\";\r\nimport { snakeCase } from \"./utils/snakeCase.js\";\r\nimport Expression from './expression.js';\r\nimport Layer from './legacyLayer/layer.js';\r\nimport TextLayer from './legacyLayer/textlayer.js';\r\nimport SubtitlesLayer from './legacyLayer/subtitleslayer.js';\r\nimport FetchLayer from './legacyLayer/fetchlayer.js';\r\nimport { isObject } from \"./utils/isObject.js\";\r\nimport { isString } from \"../internal/utils/dataStructureUtils.js\";\r\nimport { isEmpty } from \"./utils/isEmpty.js\";\r\nimport { isFunction } from \"./utils/isFunction.js\";\r\nimport { identity, withCamelCaseKeys } from \"./utils/legacyBaseUtil.js\";\r\n/**\r\n * A list of keys used by the url() function.\r\n * @private\r\n */\r\nexport const URL_KEYS = [\r\n    'accessibility',\r\n    'api_secret',\r\n    'auth_token',\r\n    'cdn_subdomain',\r\n    'cloud_name',\r\n    'cname',\r\n    'format',\r\n    'placeholder',\r\n    'private_cdn',\r\n    'resource_type',\r\n    'secure',\r\n    'secure_cdn_subdomain',\r\n    'secure_distribution',\r\n    'shorten',\r\n    'sign_url',\r\n    'signature',\r\n    'ssl_detected',\r\n    'type',\r\n    'url_suffix',\r\n    'use_root_path',\r\n    'version'\r\n];\r\n/**\r\n * Assign key, value to target, when value is not null.<br>\r\n *   This function mutates the target!\r\n * @param {object} target the object to assign the values to\r\n * @param {object} sources one or more objects to get values from\r\n * @returns {object} the target after the assignment\r\n */\r\nfunction assignNotNull(target, ...sources) {\r\n    sources.forEach(source => {\r\n        Object.keys(source).forEach(key => {\r\n            // @ts-ignore\r\n            if (source[key] != null) {\r\n                // @ts-ignore\r\n                target[key] = source[key];\r\n            }\r\n        });\r\n    });\r\n    return target;\r\n}\r\n/**\r\n * Return true if all items in list are strings\r\n * @function Util.allString\r\n * @param {Array} list - an array of items\r\n */\r\nconst allStrings = function (list) {\r\n    return list.length && list.every(isString);\r\n};\r\n/**\r\n * Transformation parameters\r\n * Depends on 'util', 'transformation'\r\n */\r\nclass Param {\r\n    /**\r\n     * Represents a single parameter.\r\n     * @class Param\r\n     * @param {string} name - The name of the parameter in snake_case\r\n     * @param {string} shortName - The name of the serialized form of the parameter.\r\n     *                         If a value is not provided, the parameter will not be serialized.\r\n     * @param {function} [process=Util.identity ] - Manipulate origValue when value is called\r\n     * @ignore\r\n     */\r\n    constructor(name, shortName, process = identity) {\r\n        /**\r\n         * The name of the parameter in snake_case\r\n         * @member {string} Param#name\r\n         */\r\n        this.name = name;\r\n        /**\r\n         * The name of the serialized form of the parameter\r\n         * @member {string} Param#shortName\r\n         */\r\n        this.shortName = shortName;\r\n        /**\r\n         * Manipulate origValue when value is called\r\n         * @member {function} Param#process\r\n         */\r\n        this.process = process;\r\n    }\r\n    /**\r\n     * Set a (unprocessed) value for this parameter\r\n     * @function Param#set\r\n     * @param {*} origValue - the value of the parameter\r\n     * @return {Param} self for chaining\r\n     */\r\n    set(origValue) {\r\n        this.origValue = origValue;\r\n        return this;\r\n    }\r\n    /**\r\n     * Generate the serialized form of the parameter\r\n     * @function Param#serialize\r\n     * @return {string} the serialized form of the parameter\r\n     */\r\n    serialize() {\r\n        var val, valid;\r\n        val = this.value();\r\n        valid = Array.isArray(val) || isObject(val) || isString(val) ? !isEmpty(val) : val != null;\r\n        if ((this.shortName != null) && valid) {\r\n            return `${this.shortName}_${val}`;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    /**\r\n     * Return the processed value of the parameter\r\n     * @function Param#value\r\n     */\r\n    value() {\r\n        return this.process(this.origValue);\r\n    }\r\n    static norm_color(value) {\r\n        return value != null ? value.replace(/^#/, 'rgb:') : void 0;\r\n    }\r\n    static build_array(arg) {\r\n        if (arg == null) {\r\n            return [];\r\n        }\r\n        else if (Array.isArray(arg)) {\r\n            return arg;\r\n        }\r\n        else {\r\n            return [arg];\r\n        }\r\n    }\r\n    /**\r\n     * Covert value to video codec string.\r\n     *\r\n     * If the parameter is an object,\r\n     * @param {(string|Object)} param - the video codec as either a String or a Hash\r\n     * @return {string} the video codec string in the format codec:profile:level\r\n     * @example\r\n     * vc_[ :profile : [level]]\r\n     * or\r\n     { codec: 'h264', profile: 'basic', level: '3.1' }\r\n     * @ignore\r\n     */\r\n    static process_video_params(param) {\r\n        var video;\r\n        switch (param.constructor) {\r\n            case Object:\r\n                video = \"\";\r\n                if ('codec' in param) {\r\n                    video = param.codec;\r\n                    if ('profile' in param) {\r\n                        video += \":\" + param.profile;\r\n                        if ('level' in param) {\r\n                            video += \":\" + param.level;\r\n                        }\r\n                    }\r\n                }\r\n                return video;\r\n            case String:\r\n                return param;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\nclass ArrayParam extends Param {\r\n    /**\r\n     * A parameter that represents an array.\r\n     * @param {string} name - The name of the parameter in snake_case.\r\n     * @param {string} shortName - The name of the serialized form of the parameter\r\n     *                         If a value is not provided, the parameter will not be serialized.\r\n     * @param {string} [sep='.'] - The separator to use when joining the array elements together\r\n     * @param {function} [process=Util.identity ] - Manipulate origValue when value is called\r\n     * @class ArrayParam\r\n     * @extends Param\r\n     * @ignore\r\n     */\r\n    constructor(name, shortName, sep = '.', process = undefined) {\r\n        super(name, shortName, process);\r\n        this.sep = sep;\r\n    }\r\n    serialize() {\r\n        if (this.shortName != null) {\r\n            let arrayValue = this.value();\r\n            if (isEmpty(arrayValue)) {\r\n                return '';\r\n            }\r\n            else if (isString(arrayValue)) {\r\n                return `${this.shortName}_${arrayValue}`;\r\n            }\r\n            else {\r\n                let flat = arrayValue.map((t) => isFunction(t.serialize) ? t.serialize() : t).join(this.sep);\r\n                return `${this.shortName}_${flat}`;\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    value() {\r\n        if (Array.isArray(this.origValue)) {\r\n            return this.origValue.map(v => this.process(v));\r\n        }\r\n        else {\r\n            return this.process(this.origValue);\r\n        }\r\n    }\r\n    set(origValue) {\r\n        if ((origValue == null) || Array.isArray(origValue)) {\r\n            return super.set(origValue);\r\n        }\r\n        else {\r\n            return super.set([origValue]);\r\n        }\r\n    }\r\n}\r\nclass TransformationParam extends Param {\r\n    /**\r\n     * A parameter that represents a transformation\r\n     * @param {string} name - The name of the parameter in snake_case\r\n     * @param {string} [shortName='t'] - The name of the serialized form of the parameter\r\n     * @param {string} [sep='.'] - The separator to use when joining the array elements together\r\n     * @param {function} [process=Util.identity ] - Manipulate origValue when value is called\r\n     * @class TransformationParam\r\n     * @extends Param\r\n     * @ignore\r\n     */\r\n    constructor(name, shortName = \"t\", sep = '.', process = undefined) {\r\n        super(name, shortName, process);\r\n        this.sep = sep;\r\n    }\r\n    /**\r\n     * Generate string representations of the transformation.\r\n     * @returns {*} Returns either the transformation as a string, or an array of string representations.\r\n     */\r\n    serialize() {\r\n        let result = '';\r\n        const val = this.value();\r\n        if (isEmpty(val)) {\r\n            return result;\r\n        }\r\n        // val is an array of strings so join them\r\n        if (allStrings(val)) {\r\n            const joined = val.join(this.sep); // creates t1.t2.t3 in case multiple named transformations were configured\r\n            if (!isEmpty(joined)) {\r\n                // in case options.transformation was not set with an empty string (val != ['']);\r\n                result = `${this.shortName}_${joined}`;\r\n            }\r\n        }\r\n        else { // Convert val to an array of strings\r\n            result = val.map((t) => {\r\n                if (isString(t) && !isEmpty(t)) {\r\n                    return `${this.shortName}_${t}`;\r\n                }\r\n                if (isFunction(t.serialize)) {\r\n                    return t.serialize();\r\n                }\r\n                if (isObject(t) && !isEmpty(t)) {\r\n                    return new Transformation(t).serialize();\r\n                }\r\n                return undefined;\r\n            }).filter((t) => t);\r\n        }\r\n        return result;\r\n    }\r\n    set(origValue1) {\r\n        this.origValue = origValue1;\r\n        if (Array.isArray(this.origValue)) {\r\n            return super.set(this.origValue);\r\n        }\r\n        else {\r\n            return super.set([this.origValue]);\r\n        }\r\n    }\r\n}\r\nconst number_pattern = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\r\nconst offset_any_pattern = \"(\" + number_pattern + \")([%pP])?\";\r\nclass RangeParam extends Param {\r\n    /**\r\n     * A parameter that represents a range\r\n     * @param {string} name - The name of the parameter in snake_case\r\n     * @param {string} shortName - The name of the serialized form of the parameter\r\n     *                         If a value is not provided, the parameter will not be serialized.\r\n     * @param {function} [process=norm_range_value ] - Manipulate origValue when value is called\r\n     * @class RangeParam\r\n     * @extends Param\r\n     * @ignore\r\n     */\r\n    constructor(name, shortName, process = RangeParam.norm_range_value) {\r\n        super(name, shortName, process);\r\n    }\r\n    static norm_range_value(value) {\r\n        let offset = String(value).match(new RegExp('^' + offset_any_pattern + '$'));\r\n        if (offset) {\r\n            let modifier = offset[5] != null ? 'p' : '';\r\n            value = (offset[1] || offset[4]) + modifier;\r\n        }\r\n        return value;\r\n    }\r\n}\r\nclass RawParam extends Param {\r\n    constructor(name, shortName, process = identity) {\r\n        super(name, shortName, process);\r\n    }\r\n    serialize() {\r\n        return this.value();\r\n    }\r\n}\r\nclass LayerParam extends Param {\r\n    // Parse layer options\r\n    // @return [string] layer transformation string\r\n    // @private\r\n    value() {\r\n        if (this.origValue == null) {\r\n            return '';\r\n        }\r\n        let result;\r\n        if (this.origValue instanceof Layer) {\r\n            result = this.origValue;\r\n        }\r\n        else if (isObject(this.origValue)) {\r\n            let layerOptions = withCamelCaseKeys(this.origValue);\r\n            // @ts-ignore\r\n            if (layerOptions.resourceType === \"text\" || (layerOptions.text != null)) {\r\n                result = new TextLayer(layerOptions);\r\n            }\r\n            else { // @ts-ignore\r\n                if (layerOptions.resourceType === \"subtitles\") {\r\n                    result = new SubtitlesLayer(layerOptions);\r\n                }\r\n                else { // @ts-ignore\r\n                    if (layerOptions.resourceType === \"fetch\" || (layerOptions.url != null)) {\r\n                        result = new FetchLayer(layerOptions);\r\n                    }\r\n                    else {\r\n                        result = new Layer(layerOptions);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (isString(this.origValue)) {\r\n            if (/^fetch:.+/.test(this.origValue)) {\r\n                result = new FetchLayer(this.origValue.substr(6));\r\n            }\r\n            else {\r\n                result = this.origValue;\r\n            }\r\n        }\r\n        else {\r\n            result = '';\r\n        }\r\n        return result.toString();\r\n    }\r\n    static textStyle(layer) {\r\n        return (new TextLayer(layer)).textStyleIdentifier();\r\n    }\r\n}\r\n/**\r\n * TransformationBase\r\n * Depends on 'configuration', 'parameters','util'\r\n * @internal\r\n */\r\nclass TransformationBase {\r\n    /**\r\n     * The base class for transformations.\r\n     * Members of this class are documented as belonging to the {@link Transformation} class for convenience.\r\n     * @class TransformationBase\r\n     */\r\n    constructor(options) {\r\n        /** @private */\r\n        /** @private */\r\n        let parent;\r\n        let trans;\r\n        parent = void 0;\r\n        trans = {};\r\n        /**\r\n         * Return an options object that can be used to create an identical Transformation\r\n         * @function Transformation#toOptions\r\n         * @return {Object} Returns a plain object representing this transformation\r\n         */\r\n        this.toOptions = (withChain) => {\r\n            let opt = {};\r\n            if (withChain == null) {\r\n                withChain = true;\r\n            }\r\n            // @ts-ignore\r\n            Object.keys(trans).forEach(key => opt[key] = trans[key].origValue);\r\n            assignNotNull(opt, this.otherOptions);\r\n            if (withChain && !isEmpty(this.chained)) {\r\n                let list = this.chained.map((tr) => tr.toOptions());\r\n                list.push(opt);\r\n                opt = {};\r\n                assignNotNull(opt, this.otherOptions);\r\n                // @ts-ignore\r\n                opt.transformation = list;\r\n            }\r\n            return opt;\r\n        };\r\n        /**\r\n         * Set a parent for this object for chaining purposes.\r\n         *\r\n         * @function Transformation#setParent\r\n         * @param {Object} object - the parent to be assigned to\r\n         * @returns {Transformation} Returns this instance for chaining purposes.\r\n         */\r\n        this.setParent = (object) => {\r\n            parent = object;\r\n            if (object != null) {\r\n                // @ts-ignore\r\n                this.fromOptions(typeof object.toOptions === \"function\" ? object.toOptions() : void 0);\r\n            }\r\n            return this;\r\n        };\r\n        /**\r\n         * Returns the parent of this object in the chain\r\n         * @function Transformation#getParent\r\n         * @protected\r\n         * @return {Object} Returns the parent of this object if there is any\r\n         */\r\n        this.getParent = () => {\r\n            return parent;\r\n        };\r\n        // Helper methods to create parameter methods\r\n        // These methods are defined here because they access `trans` which is\r\n        // a private member of `TransformationBase`\r\n        /** @protected */\r\n        this.param = (value, name, abbr, defaultValue, process) => {\r\n            if (process == null) {\r\n                if (isFunction(defaultValue)) {\r\n                    process = defaultValue;\r\n                }\r\n                else {\r\n                    process = identity;\r\n                }\r\n            }\r\n            // @ts-ignore\r\n            trans[name] = new Param(name, abbr, process).set(value);\r\n            return this;\r\n        };\r\n        /** @protected */\r\n        this.rawParam = function (value, name, abbr, defaultValue, process) {\r\n            process = lastArgCallback(arguments);\r\n            // @ts-ignore\r\n            trans[name] = new RawParam(name, abbr, process).set(value);\r\n            return this;\r\n        };\r\n        /** @protected */\r\n        this.rangeParam = function (value, name, abbr, defaultValue, process) {\r\n            process = lastArgCallback(arguments);\r\n            // @ts-ignore\r\n            trans[name] = new RangeParam(name, abbr, process).set(value);\r\n            return this;\r\n        };\r\n        /** @protected */\r\n        this.arrayParam = function (value, name, abbr, sep = \":\", defaultValue = [], process = undefined) {\r\n            process = lastArgCallback(arguments);\r\n            // @ts-ignore\r\n            trans[name] = new ArrayParam(name, abbr, sep, process).set(value);\r\n            return this;\r\n        };\r\n        /** @protected */\r\n        this.transformationParam = function (value, name, abbr, sep = \".\", defaultValue = undefined, process = undefined) {\r\n            process = lastArgCallback(arguments);\r\n            // @ts-ignore\r\n            trans[name] = new TransformationParam(name, abbr, sep, process).set(value);\r\n            return this;\r\n        };\r\n        this.layerParam = function (value, name, abbr) {\r\n            // @ts-ignore\r\n            trans[name] = new LayerParam(name, abbr).set(value);\r\n            return this;\r\n        };\r\n        // End Helper methods\r\n        /**\r\n         * Get the value associated with the given name.\r\n         * Get the value associated with the given name.\r\n         * @function Transformation#getValue\r\n         * @param {string} name - the name of the parameter\r\n         * @return {*} the processed value associated with the given name\r\n         * @description Use {@link get}.origValue for the value originally provided for the parameter\r\n         */\r\n        this.getValue = function (name) {\r\n            // @ts-ignore\r\n            let value = trans[name] && trans[name].value();\r\n            return value != null ? value : this.otherOptions[name];\r\n        };\r\n        /**\r\n         * Get the parameter object for the given parameter name\r\n         * @function Transformation#get\r\n         * @param {string} name the name of the transformation parameter\r\n         * @returns {Param} the param object for the given name, or undefined\r\n         */\r\n        this.get = function (name) {\r\n            // @ts-ignore\r\n            return trans[name];\r\n        };\r\n        /**\r\n         * Remove a transformation option from the transformation.\r\n         * @function Transformation#remove\r\n         * @param {string} name - the name of the option to remove\r\n         * @return {*} Returns the option that was removed or null if no option by that name was found. The type of the\r\n         *              returned value depends on the value.\r\n         */\r\n        this.remove = function (name) {\r\n            var temp;\r\n            switch (false) {\r\n                // @ts-ignore\r\n                case trans[name] == null:\r\n                    // @ts-ignore\r\n                    temp = trans[name];\r\n                    // @ts-ignore\r\n                    delete trans[name];\r\n                    return temp.origValue;\r\n                case this.otherOptions[name] == null:\r\n                    temp = this.otherOptions[name];\r\n                    delete this.otherOptions[name];\r\n                    return temp;\r\n                default:\r\n                    return null;\r\n            }\r\n        };\r\n        /**\r\n         * Return an array of all the keys (option names) in the transformation.\r\n         * @return {Array<string>} the keys in snakeCase format\r\n         */\r\n        this.keys = function () {\r\n            var key;\r\n            return ((function () {\r\n                var results;\r\n                results = [];\r\n                for (key in trans) {\r\n                    if (key != null) {\r\n                        results.push(key.match(VAR_NAME_RE) ? key : snakeCase(key));\r\n                    }\r\n                }\r\n                return results;\r\n            })()).sort();\r\n        };\r\n        /**\r\n         * Returns a plain object representation of the transformation. Values are processed.\r\n         * @function Transformation#toPlainObject\r\n         * @return {Object} the transformation options as plain object\r\n         */\r\n        this.toPlainObject = function () {\r\n            var hash, key, list;\r\n            hash = {};\r\n            for (key in trans) {\r\n                // @ts-ignore\r\n                hash[key] = trans[key].value();\r\n                // @ts-ignore\r\n                if (isObject(hash[key])) {\r\n                    // @ts-ignore\r\n                    hash[key] = cloneDeep(hash[key]);\r\n                }\r\n            }\r\n            if (!isEmpty(this.chained)) {\r\n                list = this.chained.map((tr) => tr.toPlainObject());\r\n                list.push(hash);\r\n                hash = {\r\n                    transformation: list\r\n                };\r\n            }\r\n            return hash;\r\n        };\r\n        /**\r\n         * Complete the current transformation and chain to a new one.\r\n         * In the URL, transformations are chained together by slashes.\r\n         * @function Transformation#chain\r\n         * @return {Transformation} Returns this transformation for chaining\r\n         * @example\r\n         * var tr = cloudinary.Transformation.new();\r\n         * tr.width(10).crop('fit').chain().angle(15).serialize()\r\n         * // produces \"c_fit,w_10/a_15\"\r\n         */\r\n        this.chain = function () {\r\n            var names, tr;\r\n            names = Object.getOwnPropertyNames(trans);\r\n            if (names.length !== 0) {\r\n                tr = new this.constructor(this.toOptions(false));\r\n                this.resetTransformations();\r\n                this.chained.push(tr);\r\n            }\r\n            return this;\r\n        };\r\n        this.resetTransformations = function () {\r\n            trans = {};\r\n            return this;\r\n        };\r\n        this.otherOptions = {};\r\n        this.chained = [];\r\n        this.fromOptions(options);\r\n    }\r\n    /**\r\n     * Merge the provided options with own's options\r\n     * @param {Object} [options={}] key-value list of options\r\n     * @returns {Transformation} Returns this instance for chaining\r\n     */\r\n    fromOptions(options = {}) {\r\n        if (options instanceof TransformationBase) {\r\n            this.fromTransformation(options);\r\n        }\r\n        else {\r\n            if (isString(options) || Array.isArray(options)) {\r\n                options = {\r\n                    transformation: options\r\n                };\r\n            }\r\n            options = cloneDeep(options);\r\n            // Handling of \"if\" statements precedes other options as it creates a chained transformation\r\n            // @ts-ignore\r\n            if (options[\"if\"]) {\r\n                // @ts-ignore\r\n                this.set(\"if\", options[\"if\"]);\r\n                // @ts-ignore\r\n                delete options[\"if\"];\r\n            }\r\n            for (let key in options) {\r\n                // @ts-ignore\r\n                let opt = options[key];\r\n                if (opt != null) {\r\n                    if (key.match(VAR_NAME_RE)) {\r\n                        if (key !== '$attr') {\r\n                            this.set('variable', key, opt);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.set(key, opt);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    fromTransformation(other) {\r\n        if (other instanceof TransformationBase) {\r\n            other.keys().forEach(key => this.set(key, other.get(key).origValue));\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Set a parameter.\r\n     * The parameter name `key` is converted to\r\n     * @param {string} key - the name of the parameter\r\n     * @param {*} values - the value of the parameter\r\n     * @returns {Transformation} Returns this instance for chaining\r\n     */\r\n    set(key, ...values) {\r\n        let camelKey;\r\n        camelKey = camelCase(key);\r\n        if (contains(methods, camelKey)) {\r\n            // @ts-ignore\r\n            this[camelKey].apply(this, values);\r\n        }\r\n        else {\r\n            this.otherOptions[key] = values[0];\r\n        }\r\n        return this;\r\n    }\r\n    hasLayer() {\r\n        return this.getValue(\"overlay\") || this.getValue(\"underlay\");\r\n    }\r\n    /**\r\n     * Generate a string representation of the transformation.\r\n     * @function Transformation#serialize\r\n     * @return {string} Returns the transformation as a string\r\n     */\r\n    serialize() {\r\n        var ifParam, j, len, paramList, ref, ref1, ref2, ref3, ref4, resultArray, t, transformationList, transformationString, transformations, value, variables, vars;\r\n        resultArray = this.chained.map((tr) => tr.serialize());\r\n        paramList = this.keys();\r\n        transformations = (ref = this.get(\"transformation\")) != null ? ref.serialize() : void 0;\r\n        ifParam = (ref1 = this.get(\"if\")) != null ? ref1.serialize() : void 0;\r\n        variables = processVar((ref2 = this.get(\"variables\")) != null ? ref2.value() : void 0);\r\n        paramList = difference(paramList, [\"transformation\", \"if\", \"variables\"]);\r\n        vars = [];\r\n        transformationList = [];\r\n        for (j = 0, len = paramList.length; j < len; j++) {\r\n            t = paramList[j];\r\n            if (t.match(VAR_NAME_RE)) {\r\n                vars.push(t + \"_\" + Expression.normalize((ref3 = this.get(t)) != null ? ref3.value() : void 0));\r\n            }\r\n            else {\r\n                transformationList.push((ref4 = this.get(t)) != null ? ref4.serialize() : void 0);\r\n            }\r\n        }\r\n        switch (false) {\r\n            case !isString(transformations):\r\n                transformationList.push(transformations);\r\n                break;\r\n            case !Array.isArray(transformations):\r\n                resultArray = resultArray.concat(transformations);\r\n        }\r\n        transformationList = (function () {\r\n            var k, len1, results;\r\n            results = [];\r\n            for (k = 0, len1 = transformationList.length; k < len1; k++) {\r\n                value = transformationList[k];\r\n                if (Array.isArray(value) && !isEmpty(value) || !Array.isArray(value) && value) {\r\n                    results.push(value);\r\n                }\r\n            }\r\n            return results;\r\n        })();\r\n        transformationList = vars.sort().concat(variables).concat(transformationList.sort());\r\n        if (ifParam === \"if_end\") {\r\n            transformationList.push(ifParam);\r\n        }\r\n        else if (!isEmpty(ifParam)) {\r\n            transformationList.unshift(ifParam);\r\n        }\r\n        transformationString = (transformationList).filter(x => !!x).join(param_separator);\r\n        if (!isEmpty(transformationString)) {\r\n            resultArray.push(transformationString);\r\n        }\r\n        return (resultArray).filter((x) => !!x).join(trans_separator);\r\n    }\r\n    /**\r\n     * Provide a list of all the valid transformation option names\r\n     * @function Transformation#listNames\r\n     * @private\r\n     * @return {Array<string>} a array of all the valid option names\r\n     */\r\n    static listNames() {\r\n        return methods;\r\n    }\r\n    /**\r\n     * Returns the attributes for an HTML tag.\r\n     * @function Cloudinary.toHtmlAttributes\r\n     * @return PlainObject\r\n     */\r\n    toHtmlAttributes() {\r\n        let attrName, height, options, ref2, ref3, value, width;\r\n        options = {};\r\n        let snakeCaseKey;\r\n        Object.keys(this.otherOptions).forEach(key => {\r\n            value = this.otherOptions[key];\r\n            snakeCaseKey = snakeCase(key);\r\n            if (!contains(PARAM_NAMES, snakeCaseKey) && !contains(URL_KEYS, snakeCaseKey)) {\r\n                attrName = /^html_/.test(key) ? key.slice(5) : key;\r\n                options[attrName] = value;\r\n            }\r\n        });\r\n        // convert all \"html_key\" to \"key\" with the same value\r\n        this.keys().forEach(key => {\r\n            if (/^html_/.test(key)) {\r\n                options[camelCase(key.slice(5))] = this.getValue(key);\r\n            }\r\n        });\r\n        if (!(this.hasLayer() || this.getValue(\"angle\") || contains([\"fit\", \"limit\", \"lfill\"], this.getValue(\"crop\")))) {\r\n            width = (ref2 = this.get(\"width\")) != null ? ref2.origValue : void 0;\r\n            height = (ref3 = this.get(\"height\")) != null ? ref3.origValue : void 0;\r\n            if (parseFloat(width) >= 1.0) {\r\n                if (options.width == null) {\r\n                    options.width = width;\r\n                }\r\n            }\r\n            if (parseFloat(height) >= 1.0) {\r\n                if (options.height == null) {\r\n                    options.height = height;\r\n                }\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    static isValidParamName(name) {\r\n        return methods.indexOf(camelCase(name)) >= 0;\r\n    }\r\n    /**\r\n     * Delegate to the parent (up the call chain) to produce HTML\r\n     * @function Transformation#toHtml\r\n     * @return {string} HTML representation of the parent if possible.\r\n     * @example\r\n     * tag = cloudinary.ImageTag.new(\"sample\", {cloud_name: \"demo\"})\r\n     * // ImageTag {name: \"img\", publicId: \"sample\"}\r\n     * tag.toHtml()\r\n     * // <img src=\"sample\">\r\n     * tag.transformation().crop(\"fit\").width(300).toHtml()\r\n     * // <img src=\"c_fit,w_300\">\r\n     */\r\n    toHtml() {\r\n        var ref;\r\n        return (ref = this.getParent()) != null ? typeof ref.toHtml === \"function\" ? ref.toHtml() : void 0 : void 0;\r\n    }\r\n    toString() {\r\n        return this.serialize();\r\n    }\r\n    clone() {\r\n        return new TransformationBase(this.toOptions(true));\r\n    }\r\n}\r\nconst VAR_NAME_RE = /^\\$[a-zA-Z0-9]+$/;\r\nconst trans_separator = '/';\r\nconst param_separator = ',';\r\nfunction lastArgCallback(args) {\r\n    var callback;\r\n    callback = args != null ? args[args.length - 1] : void 0;\r\n    if (isFunction(callback)) {\r\n        return callback;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\nfunction processVar(varArray) {\r\n    var j, len, name, results, v;\r\n    if (Array.isArray(varArray)) {\r\n        results = [];\r\n        for (j = 0, len = varArray.length; j < len; j++) {\r\n            [name, v] = varArray[j];\r\n            results.push(`${name}_${Expression.normalize(v)}`);\r\n        }\r\n        return results;\r\n    }\r\n    else {\r\n        return varArray;\r\n    }\r\n}\r\n// @ts-ignore\r\nfunction processCustomFunction({ function_type, source }) {\r\n    if (function_type === 'remote') {\r\n        return [function_type, btoa(source)].join(\":\");\r\n    }\r\n    else if (function_type === 'wasm') {\r\n        return [function_type, source].join(\":\");\r\n    }\r\n}\r\n/**\r\n * Transformation Class methods.\r\n * This is a list of the parameters defined in Transformation.\r\n * Values are camelCased.\r\n * @const Transformation.methods\r\n * @private\r\n * @ignore\r\n * @type {Array<string>}\r\n */\r\n/**\r\n * Parameters that are filtered out before passing the options to an HTML tag.\r\n *\r\n * The list of parameters is a combination of `Transformation::methods` and `Configuration::CONFIG_PARAMS`\r\n * @const {Array<string>} Transformation.PARAM_NAMES\r\n * @private\r\n * @ignore\r\n * @see toHtmlAttributes\r\n */\r\nclass Transformation extends TransformationBase {\r\n    /**\r\n     * Represents a single transformation.\r\n     * @class Transformation\r\n     * @example\r\n     * t = new cloudinary.Transformation();\r\n     * t.angle(20).crop(\"scale\").width(\"auto\");\r\n     *\r\n     * // or\r\n     *\r\n     * t = new cloudinary.Transformation( {angle: 20, crop: \"scale\", width: \"auto\"});\r\n     * @see <a href=\"https://cloudinary.com/documentation/image_transformation_reference\"\r\n     *  target=\"_blank\">Available image transformations</a>\r\n     * @see <a href=\"https://cloudinary.com/documentation/video_transformation_reference\"\r\n     *  target=\"_blank\">Available video transformations</a>\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n    }\r\n    /**\r\n     * Convenience constructor\r\n     * @param {Object} options\r\n     * @return {Transformation}\r\n     * @example cl = cloudinary.Transformation.new( {angle: 20, crop: \"scale\", width: \"auto\"})\r\n     */\r\n    static new(options) {\r\n        return new Transformation(options);\r\n    }\r\n    /*\r\n      Transformation Parameters\r\n    */\r\n    angle(value) {\r\n        this.arrayParam(value, \"angle\", \"a\", \".\", Expression.normalize);\r\n        return this;\r\n    }\r\n    audioCodec(value) {\r\n        this.param(value, \"audio_codec\", \"ac\");\r\n        return this;\r\n    }\r\n    audioFrequency(value) {\r\n        this.param(value, \"audio_frequency\", \"af\");\r\n        return this;\r\n    }\r\n    aspectRatio(value) {\r\n        this.param(value, \"aspect_ratio\", \"ar\", Expression.normalize);\r\n        return this;\r\n    }\r\n    background(value) {\r\n        this.param(value, \"background\", \"b\", Param.norm_color);\r\n        return this;\r\n    }\r\n    bitRate(value) {\r\n        this.param(value, \"bit_rate\", \"br\");\r\n        return this;\r\n    }\r\n    border(value) {\r\n        return this.param(value, \"border\", \"bo\", (border) => {\r\n            if (isObject(border)) {\r\n                border = Object.assign({}, {\r\n                    color: \"black\",\r\n                    width: 2\r\n                }, border);\r\n                return `${border.width}px_solid_${Param.norm_color(border.color)}`;\r\n            }\r\n            else {\r\n                return border;\r\n            }\r\n        });\r\n    }\r\n    color(value) {\r\n        this.param(value, \"color\", \"co\", Param.norm_color);\r\n        return this;\r\n    }\r\n    colorSpace(value) {\r\n        this.param(value, \"color_space\", \"cs\");\r\n        return this;\r\n    }\r\n    crop(value) {\r\n        this.param(value, \"crop\", \"c\");\r\n        return this;\r\n    }\r\n    customFunction(value) {\r\n        return this.param(value, \"custom_function\", \"fn\", () => {\r\n            return processCustomFunction(value);\r\n        });\r\n    }\r\n    customPreFunction(value) {\r\n        if (this.get('custom_function')) {\r\n            return;\r\n        }\r\n        return this.rawParam(value, \"custom_function\", \"\", () => {\r\n            value = processCustomFunction(value);\r\n            return value ? `fn_pre:${value}` : value;\r\n        });\r\n    }\r\n    defaultImage(value) {\r\n        this.param(value, \"default_image\", \"d\");\r\n        return this;\r\n    }\r\n    delay(value) {\r\n        this.param(value, \"delay\", \"dl\");\r\n        return this;\r\n    }\r\n    density(value) {\r\n        this.param(value, \"density\", \"dn\");\r\n        return this;\r\n    }\r\n    duration(value) {\r\n        this.rangeParam(value, \"duration\", \"du\");\r\n        return this;\r\n    }\r\n    dpr(value) {\r\n        return this.param(value, \"dpr\", \"dpr\", (dpr) => {\r\n            dpr = dpr.toString();\r\n            if (dpr != null ? dpr.match(/^\\d+$/) : void 0) {\r\n                return dpr + \".0\";\r\n            }\r\n            else {\r\n                return Expression.normalize(dpr);\r\n            }\r\n        });\r\n    }\r\n    effect(value) {\r\n        this.arrayParam(value, \"effect\", \"e\", \":\", Expression.normalize);\r\n        return this;\r\n    }\r\n    else() {\r\n        return this.if('else');\r\n    }\r\n    endIf() {\r\n        return this.if('end');\r\n    }\r\n    endOffset(value) {\r\n        this.rangeParam(value, \"end_offset\", \"eo\");\r\n        return this;\r\n    }\r\n    fallbackContent(value) {\r\n        this.param(value, \"fallback_content\");\r\n        return this;\r\n    }\r\n    fetchFormat(value) {\r\n        this.param(value, \"fetch_format\", \"f\");\r\n        return this;\r\n    }\r\n    format(value) {\r\n        this.param(value, \"format\");\r\n        return this;\r\n    }\r\n    flags(value) {\r\n        this.arrayParam(value, \"flags\", \"fl\", \".\");\r\n        return this;\r\n    }\r\n    gravity(value) {\r\n        this.param(value, \"gravity\", \"g\");\r\n        return this;\r\n    }\r\n    fps(value) {\r\n        return this.param(value, \"fps\", \"fps\", (fps) => {\r\n            if (isString(fps)) {\r\n                return fps;\r\n            }\r\n            else if (Array.isArray(fps)) {\r\n                return fps.join(\"-\");\r\n            }\r\n            else {\r\n                return fps;\r\n            }\r\n        });\r\n    }\r\n    height(value) {\r\n        return this.param(value, \"height\", \"h\", () => {\r\n            if (this.getValue(\"crop\") || this.getValue(\"overlay\") || this.getValue(\"underlay\")) {\r\n                return Expression.normalize(value);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n    htmlHeight(value) {\r\n        this.param(value, \"html_height\");\r\n        return this;\r\n    }\r\n    htmlWidth(value) {\r\n        this.param(value, \"html_width\");\r\n        return this;\r\n    }\r\n    if(value = \"\") {\r\n        var i, ifVal, j, ref, trIf, trRest;\r\n        switch (value) {\r\n            case \"else\":\r\n                this.chain();\r\n                return this.param(value, \"if\", \"if\");\r\n            case \"end\":\r\n                this.chain();\r\n                for (i = j = ref = this.chained.length - 1; j >= 0; i = j += -1) {\r\n                    ifVal = this.chained[i].getValue(\"if\");\r\n                    if (ifVal === \"end\") {\r\n                        break;\r\n                    }\r\n                    else if (ifVal != null) {\r\n                        trIf = Transformation.new().if(ifVal);\r\n                        this.chained[i].remove(\"if\");\r\n                        trRest = this.chained[i];\r\n                        this.chained[i] = Transformation.new().transformation([trIf, trRest]);\r\n                        if (ifVal !== \"else\") {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return this.param(value, \"if\", \"if\");\r\n            case \"\":\r\n                return Condition.new().setParent(this);\r\n            default:\r\n                return this.param(value, \"if\", \"if\", (value) => {\r\n                    return Condition.new(value).toString();\r\n                });\r\n        }\r\n    }\r\n    keyframeInterval(value) {\r\n        this.param(value, \"keyframe_interval\", \"ki\");\r\n        return this;\r\n    }\r\n    ocr(value) {\r\n        this.param(value, \"ocr\", \"ocr\");\r\n        return this;\r\n    }\r\n    offset(value) {\r\n        var end_o, start_o;\r\n        [start_o, end_o] = (isFunction(value != null ? value.split : void 0)) ? value.split('..') : Array.isArray(value) ? value : [null, null];\r\n        if (start_o != null) {\r\n            this.startOffset(start_o);\r\n        }\r\n        if (end_o != null) {\r\n            return this.endOffset(end_o);\r\n        }\r\n    }\r\n    opacity(value) {\r\n        this.param(value, \"opacity\", \"o\", Expression.normalize);\r\n        return this;\r\n    }\r\n    overlay(value) {\r\n        this.layerParam(value, \"overlay\", \"l\");\r\n        return this;\r\n    }\r\n    page(value) {\r\n        this.param(value, \"page\", \"pg\");\r\n        return this;\r\n    }\r\n    poster(value) {\r\n        this.param(value, \"poster\");\r\n        return this;\r\n    }\r\n    prefix(value) {\r\n        this.param(value, \"prefix\", \"p\");\r\n        return this;\r\n    }\r\n    quality(value) {\r\n        this.param(value, \"quality\", \"q\", Expression.normalize);\r\n        return this;\r\n    }\r\n    radius(value) {\r\n        this.arrayParam(value, \"radius\", \"r\", \":\", Expression.normalize);\r\n        return this;\r\n    }\r\n    rawTransformation(value) {\r\n        this.rawParam(value, \"raw_transformation\");\r\n        return this;\r\n    }\r\n    size(value) {\r\n        let height, width;\r\n        if (isFunction(value != null ? value.split : void 0)) {\r\n            [width, height] = value.split('x');\r\n            this.width(width);\r\n            return this.height(height);\r\n        }\r\n    }\r\n    sourceTypes(value) {\r\n        this.param(value, \"source_types\");\r\n        return this;\r\n    }\r\n    sourceTransformation(value) {\r\n        return this.param(value, \"source_transformation\");\r\n    }\r\n    startOffset(value) {\r\n        this.rangeParam(value, \"start_offset\", \"so\");\r\n        return this;\r\n    }\r\n    streamingProfile(value) {\r\n        this.param(value, \"streaming_profile\", \"sp\");\r\n        return this;\r\n    }\r\n    transformation(value) {\r\n        this.transformationParam(value, \"transformation\", \"t\");\r\n        return this;\r\n    }\r\n    underlay(value) {\r\n        this.layerParam(value, \"underlay\", \"u\");\r\n        return this;\r\n    }\r\n    variable(name, value) {\r\n        this.param(value, name, name);\r\n        return this;\r\n    }\r\n    variables(values) {\r\n        this.arrayParam(values, \"variables\");\r\n        return this;\r\n    }\r\n    videoCodec(value) {\r\n        this.param(value, \"video_codec\", \"vc\", Param.process_video_params);\r\n        return this;\r\n    }\r\n    videoSampling(value) {\r\n        this.param(value, \"video_sampling\", \"vs\");\r\n        return this;\r\n    }\r\n    width(value) {\r\n        this.param(value, \"width\", \"w\", () => {\r\n            if (this.getValue(\"crop\") || this.getValue(\"overlay\") || this.getValue(\"underlay\")) {\r\n                return Expression.normalize(value);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    x(value) {\r\n        this.param(value, \"x\", \"x\", Expression.normalize);\r\n        return this;\r\n    }\r\n    y(value) {\r\n        this.param(value, \"y\", \"y\", Expression.normalize);\r\n        return this;\r\n    }\r\n    zoom(value) {\r\n        this.param(value, \"zoom\", \"z\", Expression.normalize);\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * Transformation Class methods.\r\n * This is a list of the parameters defined in Transformation.\r\n * Values are camelCased.\r\n */\r\nconst methods = [\r\n    \"angle\",\r\n    \"audioCodec\",\r\n    \"audioFrequency\",\r\n    \"aspectRatio\",\r\n    \"background\",\r\n    \"bitRate\",\r\n    \"border\",\r\n    \"color\",\r\n    \"colorSpace\",\r\n    \"crop\",\r\n    \"customFunction\",\r\n    \"customPreFunction\",\r\n    \"defaultImage\",\r\n    \"delay\",\r\n    \"density\",\r\n    \"duration\",\r\n    \"dpr\",\r\n    \"effect\",\r\n    \"else\",\r\n    \"endIf\",\r\n    \"endOffset\",\r\n    \"fallbackContent\",\r\n    \"fetchFormat\",\r\n    \"format\",\r\n    \"flags\",\r\n    \"gravity\",\r\n    \"fps\",\r\n    \"height\",\r\n    \"htmlHeight\",\r\n    \"htmlWidth\",\r\n    \"if\",\r\n    \"keyframeInterval\",\r\n    \"ocr\",\r\n    \"offset\",\r\n    \"opacity\",\r\n    \"overlay\",\r\n    \"page\",\r\n    \"poster\",\r\n    \"prefix\",\r\n    \"quality\",\r\n    \"radius\",\r\n    \"rawTransformation\",\r\n    \"size\",\r\n    \"sourceTypes\",\r\n    \"sourceTransformation\",\r\n    \"startOffset\",\r\n    \"streamingProfile\",\r\n    \"transformation\",\r\n    \"underlay\",\r\n    \"variable\",\r\n    \"variables\",\r\n    \"videoCodec\",\r\n    \"videoSampling\",\r\n    \"width\",\r\n    \"x\",\r\n    \"y\",\r\n    \"zoom\"\r\n];\r\n/**\r\n * Parameters that are filtered out before passing the options to an HTML tag.\r\n *\r\n * The list of parameters is a combination of `Transformation::methods` and `Configuration::CONFIG_PARAMS`\r\n */\r\nconst PARAM_NAMES = methods.map(snakeCase).concat(CONFIG_PARAMS);\r\nexport default Transformation;\r\n", "/**\r\n *\r\n * @param publicID\r\n */\r\nexport function isUrl(publicID) {\r\n    return publicID.match(/^https?:\\//);\r\n}\r\n", "/**\r\n *\r\n * @param publicID\r\n */\r\nexport function isFileName(publicID) {\r\n    return publicID.indexOf('/') < 0;\r\n}\r\n", "/**\r\n *\r\n * @param publicID\r\n */\r\nexport function publicIDContainsVersion(publicID) {\r\n    return publicID.match(/^v[0-9]+/);\r\n}\r\n", "import { isUrl } from \"./urlUtils/isUrl.js\";\r\nimport { isFileName } from \"./urlUtils/isFileName.js\";\r\nimport { publicIDContainsVersion } from \"./urlUtils/publicIDContainsVersion.js\";\r\n/**\r\n * Create the URL prefix for Cloudinary resources.\r\n * Available use cases\r\n * http://res.cloudinary.com/{cloudName}\r\n * https://res.cloudinary.com/{cloudName}\r\n * https://{cloudName}-res.cloudinary.com/\r\n * http://{domain}/${cloudName}\r\n * https://{domain}/${cloudName}\r\n * https://{domain}\r\n * @private\r\n *\r\n * @param {string} cloudName\r\n * @param {IURLConfig} urlConfig\r\n */\r\nfunction getUrlPrefix(cloudName, urlConfig) {\r\n    const secure = urlConfig.secure;\r\n    const privateCDN = urlConfig.privateCdn;\r\n    const cname = urlConfig.cname;\r\n    const secureDistribution = urlConfig.secureDistribution;\r\n    if (!secure && !cname) {\r\n        return `http://res.cloudinary.com/${cloudName}`;\r\n    }\r\n    if (secure && !secureDistribution && privateCDN) {\r\n        return `https://${cloudName}-res.cloudinary.com`;\r\n    }\r\n    if (secure && !secureDistribution) {\r\n        return `https://res.cloudinary.com/${cloudName}`;\r\n    }\r\n    if (secure && secureDistribution && privateCDN) {\r\n        return `https://${secureDistribution}`;\r\n    }\r\n    if (secure && secureDistribution) {\r\n        return `https://${secureDistribution}/${cloudName}`;\r\n    }\r\n    if (!secure && cname) {\r\n        return `http://${cname}/${cloudName}`;\r\n    }\r\n    else {\r\n        return 'ERROR';\r\n    }\r\n}\r\n/**\r\n * @private\r\n * @param assetType\r\n */\r\nfunction handleAssetType(assetType) {\r\n    //default to image\r\n    if (!assetType) {\r\n        return 'image';\r\n    }\r\n    return assetType;\r\n}\r\n/**\r\n * @private\r\n * @param deliveryType\r\n */\r\nfunction handleDeliveryType(deliveryType) {\r\n    //default to upload\r\n    if (!deliveryType) {\r\n        return 'upload';\r\n    }\r\n    return deliveryType;\r\n}\r\n/**\r\n *\r\n * @param {string} publicID\r\n * @param {number} version\r\n * @param {boolean} forceVersion\r\n */\r\nfunction getUrlVersion(publicID, version, forceVersion) {\r\n    const shouldForceVersion = forceVersion !== false;\r\n    if (version) {\r\n        return `v${version}`;\r\n    }\r\n    // In all these conditions we never force a version\r\n    if (publicIDContainsVersion(publicID) || isUrl(publicID) || isFileName(publicID)) {\r\n        return '';\r\n    }\r\n    return shouldForceVersion ? 'v1' : '';\r\n}\r\nexport { handleAssetType, getUrlVersion, handleDeliveryType, getUrlPrefix };\r\n", "/**\r\n * @private\r\n * @description Adds left padding to a string with the desired substring the provided number of times\r\n * @example stringPad(foo, 3, 'a'') // -> aaafoo\r\n * @param {string} value\r\n * @param {number} _targetLength\r\n * @param {string} _padString\r\n */\r\nexport function stringPad(value, _targetLength, _padString) {\r\n    let targetLength = _targetLength >> 0; //truncate if number or convert non-number to 0;\r\n    let padString = String((typeof _padString !== 'undefined' ? _padString : ' '));\r\n    if (value.length > targetLength) {\r\n        return String(value);\r\n    }\r\n    else {\r\n        targetLength = targetLength - value.length;\r\n        if (targetLength > padString.length) {\r\n            padString += repeatStringNumTimes(padString, targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(value);\r\n    }\r\n}\r\n/**\r\n * @description Repeat a string multiple times, cross-browser-safe alternative to string.repeat()\r\n * @param string\r\n * @param _times\r\n */\r\nfunction repeatStringNumTimes(string, _times) {\r\n    let times = _times;\r\n    let repeatedString = \"\";\r\n    while (times > 0) {\r\n        repeatedString += string;\r\n        times--;\r\n    }\r\n    return repeatedString;\r\n}\r\n", "import { stringPad } from \"./stringPad.js\";\r\n/**\r\n * This file maps sequences of 6 bit binary digits to a character in base64.\r\n * 000000 -> A\r\n * 110011 -> Z\r\n * 111111 -> /\r\n */\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\nconst base64Map = {};\r\nlet num = 0;\r\nchars.split('').forEach((char) => {\r\n    let key = num.toString(2);\r\n    key = stringPad(key, 6, '0');\r\n    base64Map[key] = char;\r\n    num++;\r\n});\r\n/**\r\n * Map of [six-bit binary codes] -> [Base64 characters]\r\n */\r\nexport { base64Map };\r\n", "/**\r\n * @private\r\n * @description Reverses the version positions, x.y.z turns to z.y.x\r\n *              Example: 1.2.3 -> 03.02.01\r\n * @param {string} semVer Input can be either x.y.z or x.y\r\n * @return {string} in the form of zz.yy.xx (\r\n */\r\nexport function reverseVersion(semVer) {\r\n    if (semVer.split('.').length < 2) {\r\n        throw new Error('invalid semVer, must have at least two segments');\r\n    }\r\n    // Split by '.', reverse, create new array\r\n    return semVer.split('.').reverse().join('.');\r\n}\r\n", "import { stringPad } from \"./stringPad.js\";\r\n/**\r\n * @private\r\n * @description Pads each segment with '0' so they have length of 2\r\n * @param {string} semVer Input can be either x.y.z or x.y\r\n * @return {string} in the form of xx.yy.zz (\r\n */\r\nexport function padVersion(semVer) {\r\n    if (semVer.split('.').length < 2) {\r\n        throw new Error('invalid semVer, must have at least two segments');\r\n    }\r\n    // Split by '.', reverse, create new array with padded values and concat it together\r\n    return semVer.split('.').map((segment) => {\r\n        // try to cast to number\r\n        const asNumber = +segment;\r\n        if (isNaN(asNumber) || asNumber < 0) {\r\n            throw 'Invalid version number provided';\r\n        }\r\n        return stringPad(segment, 2, '0');\r\n    }).join('.');\r\n}\r\n", "import { base64Map } from \"./base64Map.js\";\r\nimport { stringPad } from \"./stringPad.js\";\r\nimport { reverseVersion } from \"./reverseVersion.js\";\r\nimport { padVersion } from \"./padVersion.js\";\r\n/**\r\n * @private\r\n * @description Encodes a semVer-like version string\r\n * @param {string} semVer Input can be either x.y.z or x.y\r\n * @return {string} A string built from 3 characters of the base64 table that encode the semVer\r\n */\r\nexport function encodeVersion(semVer) {\r\n    let strResult = '';\r\n    // support x.y or x.y.z by using 'parts' as a variable\r\n    const parts = semVer.split('.').length;\r\n    const paddedStringLength = parts * 6; // we pad to either 12 or 18 characters\r\n    // reverse (but don't mirror) the version. 1.5.15 -> 15.5.1\r\n    const reversedSemver = reverseVersion(semVer);\r\n    // Pad to two spaces, 15.5.1 -> 15.05.01\r\n    const paddedSemver = padVersion(reversedSemver);\r\n    // turn 15.05.01 to a string '150501' then to a number 150501\r\n    const num = parseInt(paddedSemver.split('.').join(''));\r\n    // Represent as binary, add left padding to 12 or 18 characters.\r\n    // 150,501 -> 100100101111100101\r\n    let paddedBinary = num.toString(2);\r\n    paddedBinary = stringPad(paddedBinary, paddedStringLength, '0');\r\n    // Stop in case an invalid version number was provided\r\n    // paddedBinary must be built from sections of 6 bits\r\n    if (paddedBinary.length % 6 !== 0) {\r\n        throw 'Version must be smaller than 43.21.26)';\r\n    }\r\n    // turn every 6 bits into a character using the base64Map\r\n    paddedBinary.match(/.{1,6}/g).forEach((bitString) => {\r\n        // console.log(bitString);\r\n        strResult += base64Map[bitString];\r\n    });\r\n    return strResult;\r\n}\r\n", "/**\r\n * @private\r\n * @description Gets the analyticsOptions from options- should include sdkSemver, techVersion, sdkCode, and feature\r\n * @param {ITrackedPropertiesThroughAnalytics} options\r\n * @returns {IAnalyticsOptions}\r\n */\r\nexport function getAnalyticsOptions(options) {\r\n    const analyticsOptions = {\r\n        sdkSemver: options.sdkSemver,\r\n        techVersion: options.techVersion,\r\n        sdkCode: options.sdkCode,\r\n        product: options.product,\r\n        feature: '0',\r\n        osType: options.osType,\r\n        osVersion: options.osVersion,\r\n    };\r\n    if (options.accessibility) {\r\n        analyticsOptions.feature = 'D';\r\n    }\r\n    if (options.lazyload) {\r\n        analyticsOptions.feature = 'C';\r\n    }\r\n    if (options.responsive) {\r\n        analyticsOptions.feature = 'A';\r\n    }\r\n    if (options.placeholder) {\r\n        analyticsOptions.feature = 'B';\r\n    }\r\n    return analyticsOptions;\r\n}\r\n", "const packageVersion = '1.21.0';\r\n/**\r\n * Export package version (injected during our build).\r\n * Reason for this is that If we import values from from package.json,\r\n * it will cause an error for users who do not have an 'import from json' plugin\r\n * as part of their build process / bundler.\r\n */\r\nexport { packageVersion };\r\n", "import { base64Map } from \"./base64Map.js\";\r\n/**\r\n * @private\r\n * @description Encodes a semVer-like version string for OS\r\n * @param {string} semVer Input is x.y\r\n * @return {string} A string built from 2 characters of the base64 table that encode the semVer\r\n */\r\nexport function encodeOSVersion(semVer) {\r\n    const [major, minor] = semVer.split('.');\r\n    //convert to binary\r\n    const binaryMajorVersion = parseInt(major).toString(2);\r\n    const binaryMinorVersion = parseInt(minor).toString(2);\r\n    //pad to 6\r\n    const paddedMajor = binaryMajorVersion.padStart(6, '0');\r\n    const paddedMinor = binaryMinorVersion.padStart(6, '0');\r\n    return base64Map[paddedMajor] + base64Map[paddedMinor];\r\n}\r\n", "import { encodeVersion } from \"./encodeVersion.js\";\r\nimport { getAnalyticsOptions } from \"./getAnalyticsOptions.js\";\r\nimport { packageVersion } from \"../internal/utils/packageVersion.js\";\r\nimport { encodeOSVersion } from \"./encodeOSVersion.js\";\r\n/**\r\n * @private\r\n * @description Try to get the node version out of process, if browser just return 0.0.0\r\n */\r\nfunction getNodeVersion() {\r\n    const failedVersion = '0.0.0';\r\n    if (typeof window !== 'undefined') {\r\n        return failedVersion;\r\n    }\r\n    else {\r\n        // node env\r\n        try {\r\n            return process.versions.node || failedVersion;\r\n        }\r\n        catch (e) {\r\n            return failedVersion;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @private\r\n * @description Ensure that all values ITrackedPropertiesThroughAnalytics are populated.\r\n * Accept a partial map of values and returns the complete interface of ITrackedPropertiesThroughAnalytics\r\n * @param {ITrackedPropertiesThroughAnalytics} trackedAnalytics\r\n * @param {ITrackedPropertiesThroughAnalytics} trackedAnalytics\r\n */\r\nfunction ensureShapeOfTrackedProperties(trackedAnalytics) {\r\n    // try to get the process version from node, but if we're on the client return 0.0.0\r\n    const defaults = {\r\n        techVersion: getNodeVersion(),\r\n        sdkCode: 'T',\r\n        sdkSemver: packageVersion.split('-')[0],\r\n        product: 'A',\r\n        osType: 'Z',\r\n        osVersion: '0.0',\r\n        responsive: false,\r\n        placeholder: false,\r\n        lazyload: false,\r\n        accessibility: false\r\n    };\r\n    if (!trackedAnalytics) {\r\n        return defaults;\r\n    }\r\n    else {\r\n        return Object.assign(Object.assign({}, defaults), trackedAnalytics);\r\n    }\r\n}\r\n/**\r\n * @private\r\n * @description Creates the complete SDK signature by using all the values provided by ITrackedPropertiesThroughAnalytics\r\n *              Creation of the signature\r\n *              - Set the AlgoVersion of the encoding, this is an internal letter that represents the version\r\n *                of our encoding algorithm, it will allow us to perform breaking changes if we'll need them.\r\n *              - Take the constant SDK code (Arbitrary letter chosen for each SDK, for Base that letter is 'T')\r\n *                this is used to tell apart which SDK is being tracked.\r\n *              - Take the {major.minor} versions of the node version (techVersion) (14.2, 16.2 etc.)\r\n *              - Take the full semver of the SDK you wish to track\r\n *              - Take the features used(lazy, placeholder etc.) and turn them to a letter (for example accessibility -> D)\r\n *              - Before appending the string, the Versions must be encoded, see the function `encodeVersion` for more details\r\n *              - Append all the variables to a single string\r\n *              - In any case of an error, return the single letter 'E'\r\n *\r\n * @return {string} sdkAnalyticsSignature\r\n */\r\nexport function getSDKAnalyticsSignature(_trackedAnalytics) {\r\n    const trackedAnalytics = ensureShapeOfTrackedProperties(_trackedAnalytics);\r\n    const analyticsOptions = getAnalyticsOptions(trackedAnalytics);\r\n    try {\r\n        const twoPartVersion = removePatchFromSemver(analyticsOptions.techVersion);\r\n        const encodedSDKVersion = encodeVersion(analyticsOptions.sdkSemver);\r\n        const encodedTechVersion = encodeVersion(twoPartVersion);\r\n        const encodedOSVersion = encodeOSVersion(analyticsOptions.osVersion);\r\n        const featureCode = analyticsOptions.feature;\r\n        const SDKCode = analyticsOptions.sdkCode;\r\n        const { product, osType } = analyticsOptions;\r\n        const algoVersion = 'D'; // The algo version is determined here, it should not be an argument\r\n        return `${algoVersion}${product}${SDKCode}${encodedSDKVersion}${encodedTechVersion}${osType}${encodedOSVersion}${featureCode}`;\r\n    }\r\n    catch (e) {\r\n        // Either SDK or Node versions were unparsable\r\n        return 'E';\r\n    }\r\n}\r\n/**\r\n * @private\r\n * @description Removes patch version from the semver if it exists\r\n *              Turns x.y.z OR x.y into x.y\r\n * @param {'x.y.z' | 'x.y' | string} semVerStr\r\n */\r\nfunction removePatchFromSemver(semVerStr) {\r\n    const parts = semVerStr.split('.');\r\n    return `${parts[0]}.${parts[1]}`;\r\n}\r\n", "import { getUrlPrefix, getUrlVersion, handleAssetType, handleDeliveryType } from \"../internal/url/cloudinaryURL.js\";\r\nimport URLConfig from \"../config/URLConfig.js\";\r\nimport { getSDKAnalyticsSignature } from \"../sdkAnalytics/getSDKAnalyticsSignature.js\";\r\n/**\r\n * This const contains all the valid combination of asset/delivery for URL shortening purposes\r\n * It's exported because it's used in a test, but it's not really shared enough to belong in a separate file\r\n */\r\nexport const SEO_TYPES = {\r\n    \"image/upload\": \"images\",\r\n    \"image/private\": \"private_images\",\r\n    \"image/authenticated\": \"authenticated_images\",\r\n    \"raw/upload\": \"files\",\r\n    \"video/upload\": \"videos\"\r\n};\r\n/**\r\n * @description Cloudinary file without a transformation\r\n * @summary SDK\r\n * @memberOf SDK\r\n */\r\nclass CloudinaryFile {\r\n    constructor(publicID, cloudConfig = {}, urlConfig) {\r\n        this.setPublicID(publicID);\r\n        this.setCloudConfig(cloudConfig);\r\n        this.setURLConfig(urlConfig);\r\n    }\r\n    /**\r\n     * @description Sets the URL Config for this asset\r\n     * @param urlConfig\r\n     * @return {this}\r\n     */\r\n    setURLConfig(urlConfig) {\r\n        this.urlConfig = new URLConfig(urlConfig);\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Sets the Cloud Config for this asset\r\n     * @param urlConfig\r\n     * @return {this}\r\n     */\r\n    setCloudConfig(cloudConfig) {\r\n        this.cloudName = cloudConfig.cloudName;\r\n        this.apiKey = cloudConfig.apiKey;\r\n        this.apiSecret = cloudConfig.apiSecret;\r\n        this.authToken = cloudConfig.authToken;\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Sets the public ID of the asset.\r\n     * @param {string} publicID The public ID of the asset.\r\n     * @return {this}\r\n     */\r\n    setPublicID(publicID) {\r\n        // PublicID must be a string!\r\n        this.publicID = publicID ? publicID.toString() : '';\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Sets the delivery type of the asset.\r\n     * @param {DELIVERY_TYPE | string} newType The type of the asset.\r\n     * @return {this}\r\n     */\r\n    setDeliveryType(newType) {\r\n        this.deliveryType = newType;\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Sets the URL SEO suffix of the asset.\r\n     * @param {string} newSuffix The SEO suffix.\r\n     * @return {this}\r\n     */\r\n    setSuffix(newSuffix) {\r\n        this.suffix = newSuffix;\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Sets the signature of the asset.\r\n     * @param {string} signature The signature.\r\n     * @return {this}\r\n     */\r\n    setSignature(signature) {\r\n        this.signature = signature;\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Sets the version of the asset.\r\n     * @param {string} newVersion The version of the asset.\r\n     * @return {this}\r\n     */\r\n    setVersion(newVersion) {\r\n        if (newVersion) {\r\n            this.version = newVersion;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Sets the asset type.\r\n     * @param {string} newType The type of the asset.\r\n     * @return {this}\r\n     */\r\n    setAssetType(newType) {\r\n        if (newType) {\r\n            this.assetType = newType;\r\n        }\r\n        return this;\r\n    }\r\n    sign() {\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Serializes to URL string\r\n     * @param overwriteOptions\r\n     */\r\n    toURL(overwriteOptions = {}) {\r\n        return this.createCloudinaryURL(null, overwriteOptions.trackedAnalytics);\r\n    }\r\n    /**\r\n     * @description Validate various options before attempting to create a URL\r\n     * The function will throw in case a violation\r\n     * @throws Validation errors\r\n     */\r\n    validateAssetForURLCreation() {\r\n        if (typeof this.cloudName === 'undefined') {\r\n            throw 'You must supply a cloudName when initializing the asset';\r\n        }\r\n        const suffixContainsDot = this.suffix && this.suffix.indexOf('.') >= 0;\r\n        const suffixContainsSlash = this.suffix && this.suffix.indexOf('/') >= 0;\r\n        if (suffixContainsDot || suffixContainsSlash) {\r\n            throw '`suffix`` should not include . or /';\r\n        }\r\n    }\r\n    /**\r\n     * @description return an SEO friendly name for a combination of asset/delivery, some examples:\r\n     * * image/upload -> images\r\n     * * video/upload -> videos\r\n     * If no match is found, return `{asset}/{delivery}`\r\n     */\r\n    getResourceType() {\r\n        const assetType = handleAssetType(this.assetType);\r\n        const deliveryType = handleDeliveryType(this.deliveryType);\r\n        const hasSuffix = !!this.suffix;\r\n        const regularSEOType = `${assetType}/${deliveryType}`;\r\n        const shortSEOType = SEO_TYPES[`${assetType}/${deliveryType}`];\r\n        const useRootPath = this.urlConfig.useRootPath;\r\n        const shorten = this.urlConfig.shorten;\r\n        // Quick exit incase of useRootPath\r\n        if (useRootPath) {\r\n            if (regularSEOType === 'image/upload') {\r\n                return ''; // For image/upload we're done, just return nothing\r\n            }\r\n            else {\r\n                throw new Error(`useRootPath can only be used with assetType: 'image' and deliveryType: 'upload'. Provided: ${regularSEOType} instead`);\r\n            }\r\n        }\r\n        if (shorten && regularSEOType === 'image/upload') {\r\n            return 'iu';\r\n        }\r\n        if (hasSuffix) {\r\n            if (shortSEOType) {\r\n                return shortSEOType;\r\n            }\r\n            else {\r\n                throw new Error(`URL Suffix only supported for ${Object.keys(SEO_TYPES).join(', ')}, Provided: ${regularSEOType} instead`);\r\n            }\r\n        }\r\n        // If all else fails, return the regular image/upload combination (asset/delivery)\r\n        return regularSEOType;\r\n    }\r\n    getSignature() {\r\n        if (this.signature) {\r\n            return `s--${this.signature}--`;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @description Creates a fully qualified CloudinaryURL\r\n     * @return {string} CloudinaryURL\r\n     * @throws Validation Errors\r\n     */\r\n    createCloudinaryURL(transformation, trackedAnalytics) {\r\n        // In accordance with the existing implementation, if no publicID exists we should return nothing.\r\n        if (!this.publicID) {\r\n            return '';\r\n        }\r\n        // Throws if some options are mis-configured\r\n        // See the function for more information on when it throws\r\n        this.validateAssetForURLCreation();\r\n        const prefix = getUrlPrefix(this.cloudName, this.urlConfig);\r\n        const transformationString = transformation ? transformation.toString() : '';\r\n        const version = getUrlVersion(this.publicID, this.version, this.urlConfig.forceVersion);\r\n        const publicID = this.publicID;\r\n        if (typeof transformation === 'string') {\r\n            const url = [prefix, this.getResourceType(), this.getSignature(), transformationString, version, publicID.replace(/,/g, '%2C'), this.suffix]\r\n                .filter((a) => a)\r\n                .join('/');\r\n            return url;\r\n        }\r\n        else {\r\n            // Avoid applying encodeURI on entire string in case where we have transformations with comma (i.e. f_auto,q_auto)\r\n            // Since encodeURI does not encode commas we replace commas *only* on the publicID\r\n            const safeURL = [\r\n                encodeURI(prefix),\r\n                this.getResourceType(),\r\n                this.getSignature(),\r\n                encodeURI(transformationString),\r\n                version,\r\n                encodeURI(publicID).replace(/,/g, '%2C'),\r\n                this.suffix && encodeURI(this.suffix)\r\n            ]\r\n                .filter((a) => a)\r\n                .join('/')\r\n                .replace(/\\?/g, '%3F')\r\n                .replace(/=/g, '%3D');\r\n            const shouldAddAnalytics = this.urlConfig.analytics !== false && !(publicID.includes('?'));\r\n            let queryParamsString = '';\r\n            if (typeof (this.urlConfig.queryParams) === 'object') {\r\n                try {\r\n                    const queryParams = new URLSearchParams(this.urlConfig.queryParams);\r\n                    if (shouldAddAnalytics) {\r\n                        queryParams.set(\"_a\", getSDKAnalyticsSignature(trackedAnalytics));\r\n                    }\r\n                    queryParamsString = queryParams.toString();\r\n                }\r\n                catch (err) {\r\n                    console.error('Error: URLSearchParams is not available so the queryParams object cannot be parsed, please try passing as an already parsed string');\r\n                }\r\n            }\r\n            else {\r\n                queryParamsString = this.urlConfig.queryParams || '';\r\n                if (shouldAddAnalytics) {\r\n                    queryParamsString += `${(queryParamsString.length > 0 ? '&' : '')}_a=${getSDKAnalyticsSignature(trackedAnalytics)}`;\r\n                }\r\n            }\r\n            if (queryParamsString) {\r\n                return `${safeURL}?${queryParamsString}`;\r\n            }\r\n            else {\r\n                return safeURL;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport { CloudinaryFile };\r\n", "import { CloudinaryFile } from \"./CloudinaryFile.js\";\r\nimport { DeliveryFormatAction } from \"@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction\";\r\n/**\r\n * @desc Cloudinary Transformable interface, extended by any class that needs a Transformation Interface\r\n * @summary SDK\r\n * @memberOf SDK\r\n */\r\nclass CloudinaryTransformable extends CloudinaryFile {\r\n    constructor(publicID, cloudConfig, urlConfig, transformation) {\r\n        /* istanbul ignore next */\r\n        super(publicID, cloudConfig, urlConfig);\r\n        this.transformation = transformation;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Animated} animated\r\n     * @return {this}\r\n     */\r\n    animated(animated) {\r\n        this.transformation.animated(animated);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Border} border\r\n     * @return {this}\r\n     */\r\n    border(border) {\r\n        this.transformation.border(border);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Reshape} reshape\r\n     * @return {this}\r\n     */\r\n    reshape(reshape) {\r\n        this.transformation.reshape(reshape);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Resize} resize\r\n     * @return {this}\r\n     */\r\n    resize(resize) {\r\n        this.transformation.resize(resize);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc An alias to Action Delivery.quality\r\n     * @param {string|number} quality\r\n     * @return {this}\r\n     */\r\n    quality(quality) {\r\n        this.addAction(new DeliveryFormatAction('q', quality));\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc An alias to Action Delivery.format\r\n     * @param {string} format\r\n     * @return {this}\r\n     */\r\n    format(format) {\r\n        this.addAction(new DeliveryFormatAction('f', format));\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.RoundCorners} roundCorners\r\n     * @return {this}\r\n     */\r\n    roundCorners(roundCorners) {\r\n        this.transformation.roundCorners(roundCorners);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @return {this}\r\n     */\r\n    overlay(overlayAction) {\r\n        this.transformation.overlay(overlayAction);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Variable} variableAction\r\n     * @return {this}\r\n     */\r\n    addVariable(variableAction) {\r\n        this.transformation.addVariable(variableAction);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Condition} conditionalAction\r\n     * @return {this}\r\n     */\r\n    conditional(conditionalAction) {\r\n        this.transformation.conditional(conditionalAction);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Effect} effect\r\n     * @return {this}\r\n     */\r\n    effect(effect) {\r\n        this.transformation.effect(effect);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Adjust} action\r\n     * @return {this}\r\n     */\r\n    adjust(action) {\r\n        this.transformation.adjust(action);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Rotate} rotate\r\n     * @return {this}\r\n     */\r\n    rotate(rotate) {\r\n        this.transformation.rotate(rotate);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.NamedTransformation} namedTransformation\r\n     * @return {this}\r\n     */\r\n    namedTransformation(namedTransformation) {\r\n        this.transformation.namedTransformation(namedTransformation);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Delivery} deliveryAction\r\n     * @return {this}\r\n     */\r\n    delivery(deliveryAction) {\r\n        this.transformation.delivery(deliveryAction);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Qualifiers.color} color\r\n     * @return {this}\r\n     */\r\n    backgroundColor(color) {\r\n        this.transformation.backgroundColor(color);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.PSDTools} action\r\n     * @return {this}\r\n     */\r\n    psdTools(action) {\r\n        this.transformation.psdTools(action);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Extract} action\r\n     * @return {this}\r\n     */\r\n    extract(action) {\r\n        this.transformation.extract(action);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Qualifiers.Flag | string} flagQualifier\r\n     * @return {this}\r\n     */\r\n    addFlag(flagQualifier) {\r\n        this.transformation.addFlag(flagQualifier);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.CustomFunction} customFunction\r\n     * @return {this}\r\n     */\r\n    customFunction(customFunction) {\r\n        this.transformation.customFunction(customFunction);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {SDK.Action | string} action\r\n     * @return {this}\r\n     */\r\n    addAction(action) {\r\n        this.transformation.addAction(action);\r\n        return this;\r\n    }\r\n    /**\r\n     * @description Extend your transformation with another transformation\r\n     * @param { string | SDK.Transformation } tx\r\n     */\r\n    addTransformation(tx) {\r\n        this.transformation.addTransformation(tx);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @return {string}\r\n     */\r\n    toString() {\r\n        return this.transformation.toString();\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @return {this}\r\n     */\r\n    underlay(underlayAction) {\r\n        this.transformation.underlay(underlayAction);\r\n        return this;\r\n    }\r\n    toURL(overwriteOptions = {}) {\r\n        return this.createCloudinaryURL(this.transformation, overwriteOptions === null || overwriteOptions === void 0 ? void 0 : overwriteOptions.trackedAnalytics);\r\n    }\r\n}\r\nexport { CloudinaryTransformable };\r\n", "import { ImageTransformation } from \"@cloudinary/transformation-builder-sdk/transformation/ImageTransformation\";\r\nimport { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\r\n/**\r\n * @desc Cloudinary image asset, with image-related transformations\r\n * @summary SDK\r\n * @memberOf SDK\r\n */\r\nclass CloudinaryImage extends CloudinaryTransformable {\r\n    constructor(publicID, cloudConfig, urlConfig) {\r\n        /* istanbul ignore next */\r\n        super(publicID, cloudConfig, urlConfig, new ImageTransformation());\r\n    }\r\n}\r\nexport { CloudinaryImage };\r\n", "import { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\r\nimport { VideoTransformation } from \"../transformation/VideoTransformation.js\";\r\n/**\r\n * @desc Cloudinary video asset, with video-related transformations\r\n * @summary SDK\r\n * @memberOf SDK\r\n */\r\nclass CloudinaryVideo extends CloudinaryTransformable {\r\n    constructor(publicID, cloudConfig, urlConfig) {\r\n        /* istanbul ignore next */\r\n        super(publicID, cloudConfig, urlConfig, new VideoTransformation());\r\n        this.assetType = 'video';\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Transcode} action\r\n     * @return {this}\r\n     */\r\n    transcode(action) {\r\n        this.transformation.transcode(action);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.VideoEdit} action\r\n     * @return {this}\r\n     */\r\n    videoEdit(action) {\r\n        this.transformation.videoEdit(action);\r\n        return this;\r\n    }\r\n}\r\nexport { CloudinaryVideo };\r\n", "/* eslint-disable */\r\n// @ts-nocheck\r\n// This file is a direct copy from lodash.clonedeep\r\n// Lodash.clonedeep has problems with the module exports, thus a copy was the shortest and cleanest solution\r\n/**\r\n * lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modularize exports=\"npm\" -o ./`\r\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\n/** Used as the size to enable large array optimizations. */\r\nvar LARGE_ARRAY_SIZE = 200;\r\n/** Used to stand-in for `undefined` hash values. */\r\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\r\n/** Used as references for constious `Number` constants. */\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]', arrayTag = '[object Array]', boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]', mapTag = '[object Map]', numberTag = '[object Number]', objectTag = '[object Object]', promiseTag = '[object Promise]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', symbolTag = '[object Symbol]', weakMapTag = '[object WeakMap]';\r\nvar arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';\r\n/**\r\n * Used to match `RegExp`\r\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\r\n */\r\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\r\n/** Used to match `RegExp` flags from their coerced string values. */\r\nvar reFlags = /\\w*$/;\r\n/** Used to detect host constructors (Safari). */\r\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\r\n/** Used to detect unsigned integer values. */\r\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n/** Used to identify `toStringTag` values supported by `_.clone`. */\r\nvar cloneableTags = {};\r\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\r\n    cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\r\n        cloneableTags[boolTag] = cloneableTags[dateTag] =\r\n            cloneableTags[float32Tag] = cloneableTags[float64Tag] =\r\n                cloneableTags[int8Tag] = cloneableTags[int16Tag] =\r\n                    cloneableTags[int32Tag] = cloneableTags[mapTag] =\r\n                        cloneableTags[numberTag] = cloneableTags[objectTag] =\r\n                            cloneableTags[regexpTag] = cloneableTags[setTag] =\r\n                                cloneableTags[stringTag] = cloneableTags[symbolTag] =\r\n                                    cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\r\n                                        cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\r\ncloneableTags[errorTag] = cloneableTags[funcTag] =\r\n    cloneableTags[weakMapTag] = false;\r\n/** Detect free constiable `global` from Node.js. */\r\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\r\n/** Detect free constiable `self`. */\r\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\r\n/** Used as a reference to the global object. */\r\nvar root = freeGlobal || freeSelf || Function('return this')();\r\n/** Detect free constiable `exports`. */\r\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\r\n/** Detect free constiable `module`. */\r\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\r\n/** Detect the popular CommonJS extension `module.exports`. */\r\nvar moduleExports = freeModule && freeModule.exports === freeExports;\r\n/**\r\n * Adds the key-value `pair` to `map`.\r\n *\r\n * @private\r\n * @param {Object} map The map to modify.\r\n * @param {Array} pair The key-value pair to add.\r\n * @returns {Object} Returns `map`.\r\n */\r\nfunction addMapEntry(map, pair) {\r\n    // Don't return `map.set` because it's not chainable in IE 11.\r\n    map.set(pair[0], pair[1]);\r\n    return map;\r\n}\r\n/**\r\n * Adds `value` to `set`.\r\n *\r\n * @private\r\n * @param {Object} set The set to modify.\r\n * @param {*} value The value to add.\r\n * @returns {Object} Returns `set`.\r\n */\r\nfunction addSetEntry(set, value) {\r\n    // Don't return `set.add` because it's not chainable in IE 11.\r\n    set.add(value);\r\n    return set;\r\n}\r\n/**\r\n * A specialized version of `_.forEach` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayEach(array, iteratee) {\r\n    var index = -1, length = array ? array.length : 0;\r\n    while (++index < length) {\r\n        if (iteratee(array[index], index, array) === false) {\r\n            break;\r\n        }\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * Appends the elements of `values` to `array`.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {Array} values The values to append.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayPush(array, values) {\r\n    var index = -1, length = values.length, offset = array.length;\r\n    while (++index < length) {\r\n        array[offset + index] = values[index];\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * A specialized version of `_.reduce` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @param {*} [accumulator] The initial value.\r\n * @param {boolean} [initAccum] Specify using the first element of `array` as\r\n *  the initial value.\r\n * @returns {*} Returns the accumulated value.\r\n */\r\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\r\n    var index = -1, length = array ? array.length : 0;\r\n    if (initAccum && length) {\r\n        accumulator = array[++index];\r\n    }\r\n    while (++index < length) {\r\n        accumulator = iteratee(accumulator, array[index], index, array);\r\n    }\r\n    return accumulator;\r\n}\r\n/**\r\n * The base implementation of `_.times` without support for iteratee shorthands\r\n * or max array length checks.\r\n *\r\n * @private\r\n * @param {number} n The number of times to invoke `iteratee`.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the array of results.\r\n */\r\nfunction baseTimes(n, iteratee) {\r\n    var index = -1, result = Array(n);\r\n    while (++index < n) {\r\n        result[index] = iteratee(index);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Gets the value at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} [object] The object to query.\r\n * @param {string} key The key of the property to get.\r\n * @returns {*} Returns the property value.\r\n */\r\nfunction getValue(object, key) {\r\n    return object == null ? undefined : object[key];\r\n}\r\n/**\r\n * Checks if `value` is a host object in IE < 9.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\r\n */\r\nfunction isHostObject(value) {\r\n    // Many host objects are `Object` objects that can coerce to strings\r\n    // despite having improperly defined `toString` methods.\r\n    var result = false;\r\n    if (value != null && typeof value.toString != 'function') {\r\n        try {\r\n            result = !!(`${value}`);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Converts `map` to its key-value pairs.\r\n *\r\n * @private\r\n * @param {Object} map The map to convert.\r\n * @returns {Array} Returns the key-value pairs.\r\n */\r\nfunction mapToArray(map) {\r\n    var index = -1, result = Array(map.size);\r\n    map.forEach(function (value, key) {\r\n        result[++index] = [key, value];\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * Creates a unary function that invokes `func` with its argument transformed.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {Function} transform The argument transform.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction overArg(func, transform) {\r\n    return function (arg) {\r\n        return func(transform(arg));\r\n    };\r\n}\r\n/**\r\n * Converts `set` to an array of its values.\r\n *\r\n * @private\r\n * @param {Object} set The set to convert.\r\n * @returns {Array} Returns the values.\r\n */\r\nfunction setToArray(set) {\r\n    var index = -1, result = Array(set.size);\r\n    set.forEach(function (value) {\r\n        result[++index] = value;\r\n    });\r\n    return result;\r\n}\r\n/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;\r\n/** Used to detect overreaching core-js shims. */\r\nvar coreJsData = root['__core-js_shared__'];\r\n/** Used to detect methods masquerading as native. */\r\nvar maskSrcKey = (function () {\r\n    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\r\n    return uid ? (`Symbol(src)_1.${uid}`) : '';\r\n}());\r\n/** Used to resolve the decompiled source of functions. */\r\nvar funcToString = funcProto.toString;\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar objectToString = objectProto.toString;\r\n/** Used to detect if a method is native. */\r\nvar reIsNative = RegExp(`^${funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\r\n    .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?')}$`);\r\n/** Built-in value references. */\r\nvar Buffer = moduleExports ? root.Buffer : undefined, Symbol = root.Symbol, Uint8Array = root.Uint8Array, getPrototype = overArg(Object.getPrototypeOf, Object), objectCreate = Object.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice;\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeGetSymbols = Object.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeKeys = overArg(Object.keys, Object);\r\n/* Built-in method references that are verified to be native. */\r\nvar DataView = getNative(root, 'DataView'), Map = getNative(root, 'Map'), Promise = getNative(root, 'Promise'), Set = getNative(root, 'Set'), WeakMap = getNative(root, 'WeakMap'), nativeCreate = getNative(Object, 'create');\r\n/** Used to detect maps, sets, and weakmaps. */\r\nvar dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);\r\n/** Used to convert symbols to primitives and strings. */\r\nvar symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\r\n/**\r\n * Creates a hash object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Hash(entries) {\r\n    var index = -1, length = entries ? entries.length : 0;\r\n    this.clear();\r\n    while (++index < length) {\r\n        var entry = entries[index];\r\n        this.set(entry[0], entry[1]);\r\n    }\r\n}\r\n/**\r\n * Removes all key-value entries from the hash.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf Hash\r\n */\r\nfunction hashClear() {\r\n    this.__data__ = nativeCreate ? nativeCreate(null) : {};\r\n}\r\n/**\r\n * Removes `key` and its value from the hash.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf Hash\r\n * @param {Object} hash The hash to modify.\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction hashDelete(key) {\r\n    return this.has(key) && delete this.__data__[key];\r\n}\r\n/**\r\n * Gets the hash value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction hashGet(key) {\r\n    var data = this.__data__;\r\n    if (nativeCreate) {\r\n        var result = data[key];\r\n        return result === HASH_UNDEFINED ? undefined : result;\r\n    }\r\n    return hasOwnProperty.call(data, key) ? data[key] : undefined;\r\n}\r\n/**\r\n * Checks if a hash value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf Hash\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction hashHas(key) {\r\n    var data = this.__data__;\r\n    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\r\n}\r\n/**\r\n * Sets the hash `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the hash instance.\r\n */\r\nfunction hashSet(key, value) {\r\n    var data = this.__data__;\r\n    data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\r\n    return this;\r\n}\r\n// Add methods to `Hash`.\r\nHash.prototype.clear = hashClear;\r\nHash.prototype.delete = hashDelete;\r\nHash.prototype.get = hashGet;\r\nHash.prototype.has = hashHas;\r\nHash.prototype.set = hashSet;\r\n/**\r\n * Creates an list cache object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction ListCache(entries) {\r\n    var index = -1, length = entries ? entries.length : 0;\r\n    this.clear();\r\n    while (++index < length) {\r\n        var entry = entries[index];\r\n        this.set(entry[0], entry[1]);\r\n    }\r\n}\r\n/**\r\n * Removes all key-value entries from the list cache.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf ListCache\r\n */\r\nfunction listCacheClear() {\r\n    this.__data__ = [];\r\n}\r\n/**\r\n * Removes `key` and its value from the list cache.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction listCacheDelete(key) {\r\n    var data = this.__data__, index = assocIndexOf(data, key);\r\n    if (index < 0) {\r\n        return false;\r\n    }\r\n    var lastIndex = data.length - 1;\r\n    if (index == lastIndex) {\r\n        data.pop();\r\n    }\r\n    else {\r\n        splice.call(data, index, 1);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Gets the list cache value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction listCacheGet(key) {\r\n    var data = this.__data__, index = assocIndexOf(data, key);\r\n    return index < 0 ? undefined : data[index][1];\r\n}\r\n/**\r\n * Checks if a list cache value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf ListCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction listCacheHas(key) {\r\n    return assocIndexOf(this.__data__, key) > -1;\r\n}\r\n/**\r\n * Sets the list cache `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the list cache instance.\r\n */\r\nfunction listCacheSet(key, value) {\r\n    var data = this.__data__, index = assocIndexOf(data, key);\r\n    if (index < 0) {\r\n        data.push([key, value]);\r\n    }\r\n    else {\r\n        data[index][1] = value;\r\n    }\r\n    return this;\r\n}\r\n// Add methods to `ListCache`.\r\nListCache.prototype.clear = listCacheClear;\r\nListCache.prototype.delete = listCacheDelete;\r\nListCache.prototype.get = listCacheGet;\r\nListCache.prototype.has = listCacheHas;\r\nListCache.prototype.set = listCacheSet;\r\n/**\r\n * Creates a map cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction MapCache(entries) {\r\n    var index = -1, length = entries ? entries.length : 0;\r\n    this.clear();\r\n    while (++index < length) {\r\n        var entry = entries[index];\r\n        this.set(entry[0], entry[1]);\r\n    }\r\n}\r\n/**\r\n * Removes all key-value entries from the map.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf MapCache\r\n */\r\nfunction mapCacheClear() {\r\n    this.__data__ = {\r\n        'hash': new Hash,\r\n        'map': new (Map || ListCache),\r\n        'string': new Hash\r\n    };\r\n}\r\n/**\r\n * Removes `key` and its value from the map.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction mapCacheDelete(key) {\r\n    return getMapData(this, key).delete(key);\r\n}\r\n/**\r\n * Gets the map value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction mapCacheGet(key) {\r\n    return getMapData(this, key).get(key);\r\n}\r\n/**\r\n * Checks if a map value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf MapCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction mapCacheHas(key) {\r\n    return getMapData(this, key).has(key);\r\n}\r\n/**\r\n * Sets the map `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the map cache instance.\r\n */\r\nfunction mapCacheSet(key, value) {\r\n    getMapData(this, key).set(key, value);\r\n    return this;\r\n}\r\n// Add methods to `MapCache`.\r\nMapCache.prototype.clear = mapCacheClear;\r\nMapCache.prototype.delete = mapCacheDelete;\r\nMapCache.prototype.get = mapCacheGet;\r\nMapCache.prototype.has = mapCacheHas;\r\nMapCache.prototype.set = mapCacheSet;\r\n/**\r\n * Creates a stack cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Stack(entries) {\r\n    this.__data__ = new ListCache(entries);\r\n}\r\n/**\r\n * Removes all key-value entries from the stack.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf Stack\r\n */\r\nfunction stackClear() {\r\n    this.__data__ = new ListCache;\r\n}\r\n/**\r\n * Removes `key` and its value from the stack.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction stackDelete(key) {\r\n    return this.__data__.delete(key);\r\n}\r\n/**\r\n * Gets the stack value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction stackGet(key) {\r\n    return this.__data__.get(key);\r\n}\r\n/**\r\n * Checks if a stack value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf Stack\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction stackHas(key) {\r\n    return this.__data__.has(key);\r\n}\r\n/**\r\n * Sets the stack `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the stack cache instance.\r\n */\r\nfunction stackSet(key, value) {\r\n    var cache = this.__data__;\r\n    if (cache instanceof ListCache) {\r\n        var pairs = cache.__data__;\r\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\r\n            pairs.push([key, value]);\r\n            return this;\r\n        }\r\n        cache = this.__data__ = new MapCache(pairs);\r\n    }\r\n    cache.set(key, value);\r\n    return this;\r\n}\r\n// Add methods to `Stack`.\r\nStack.prototype.clear = stackClear;\r\nStack.prototype.delete = stackDelete;\r\nStack.prototype.get = stackGet;\r\nStack.prototype.has = stackHas;\r\nStack.prototype.set = stackSet;\r\n/**\r\n * Creates an array of the enumerable property names of the array-like `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @param {boolean} inherited Specify returning inherited property names.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction arrayLikeKeys(value, inherited) {\r\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\r\n    // Safari 9 makes `arguments.length` enumerable in strict mode.\r\n    var result = (isArray(value) || isArguments(value))\r\n        ? baseTimes(value.length, String)\r\n        : [];\r\n    var length = result.length, skipIndexes = !!length;\r\n    for (var key in value) {\r\n        if ((inherited || hasOwnProperty.call(value, key)) &&\r\n            !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\r\n            result.push(key);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons.\r\n *\r\n * @private\r\n * @param {Object} object The object to modify.\r\n * @param {string} key The key of the property to assign.\r\n * @param {*} value The value to assign.\r\n */\r\nfunction assignValue(object, key, value) {\r\n    var objValue = object[key];\r\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\r\n        (value === undefined && !(key in object))) {\r\n        object[key] = value;\r\n    }\r\n}\r\n/**\r\n * Gets the index at which the `key` is found in `array` of key-value pairs.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} key The key to search for.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction assocIndexOf(array, key) {\r\n    var length = array.length;\r\n    while (length--) {\r\n        if (eq(array[length][0], key)) {\r\n            return length;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * The base implementation of `_.assign` without support for multiple sources\r\n * or `customizer` functions.\r\n *\r\n * @private\r\n * @param {Object} object The destination object.\r\n * @param {Object} source The source object.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseAssign(object, source) {\r\n    return object && copyObject(source, keys(source), object);\r\n}\r\n/**\r\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\r\n * traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @param {boolean} [isFull] Specify a clone including symbols.\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @param {string} [key] The key of `value`.\r\n * @param {Object} [object] The parent object of `value`.\r\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\r\n * @returns {*} Returns the cloned value.\r\n */\r\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\r\n    var result;\r\n    if (customizer) {\r\n        result = object ? customizer(value, key, object, stack) : customizer(value);\r\n    }\r\n    if (result !== undefined) {\r\n        return result;\r\n    }\r\n    if (!isObject(value)) {\r\n        return value;\r\n    }\r\n    var isArr = isArray(value);\r\n    if (isArr) {\r\n        result = initCloneArray(value);\r\n        if (!isDeep) {\r\n            return copyArray(value, result);\r\n        }\r\n    }\r\n    else {\r\n        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;\r\n        if (isBuffer(value)) {\r\n            return cloneBuffer(value, isDeep);\r\n        }\r\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\r\n            if (isHostObject(value)) {\r\n                return object ? value : {};\r\n            }\r\n            result = initCloneObject(isFunc ? {} : value);\r\n            if (!isDeep) {\r\n                return copySymbols(value, baseAssign(result, value));\r\n            }\r\n        }\r\n        else {\r\n            if (!cloneableTags[tag]) {\r\n                return object ? value : {};\r\n            }\r\n            result = initCloneByTag(value, tag, baseClone, isDeep);\r\n        }\r\n    }\r\n    // Check for circular references and return its corresponding clone.\r\n    stack || (stack = new Stack);\r\n    var stacked = stack.get(value);\r\n    if (stacked) {\r\n        return stacked;\r\n    }\r\n    stack.set(value, result);\r\n    if (!isArr) {\r\n        var props = isFull ? getAllKeys(value) : keys(value);\r\n    }\r\n    arrayEach(props || value, function (subValue, key) {\r\n        if (props) {\r\n            key = subValue;\r\n            subValue = value[key];\r\n        }\r\n        // Recursively populate clone (susceptible to call stack limits).\r\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * The base implementation of `_.create` without support for assigning\r\n * properties to the created object.\r\n *\r\n * @private\r\n * @param {Object} prototype The object to inherit from.\r\n * @returns {Object} Returns the new object.\r\n */\r\nfunction baseCreate(proto) {\r\n    return isObject(proto) ? objectCreate(proto) : {};\r\n}\r\n/**\r\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\r\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\r\n * symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Function} keysFunc The function to get the keys of `object`.\r\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\r\n    var result = keysFunc(object);\r\n    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\r\n}\r\n/**\r\n * The base implementation of `getTag`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nfunction baseGetTag(value) {\r\n    return objectToString.call(value);\r\n}\r\n/**\r\n * The base implementation of `_.isNative` without bad shim checks.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a native function,\r\n *  else `false`.\r\n */\r\nfunction baseIsNative(value) {\r\n    if (!isObject(value) || isMasked(value)) {\r\n        return false;\r\n    }\r\n    var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\r\n    return pattern.test(toSource(value));\r\n}\r\n/**\r\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction baseKeys(object) {\r\n    if (!isPrototype(object)) {\r\n        return nativeKeys(object);\r\n    }\r\n    var result = [];\r\n    for (var key in Object(object)) {\r\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\r\n            result.push(key);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Creates a clone of  `buffer`.\r\n *\r\n * @private\r\n * @param {Buffer} buffer The buffer to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Buffer} Returns the cloned buffer.\r\n */\r\nfunction cloneBuffer(buffer, isDeep) {\r\n    if (isDeep) {\r\n        return buffer.slice();\r\n    }\r\n    var result = new buffer.constructor(buffer.length);\r\n    buffer.copy(result);\r\n    return result;\r\n}\r\n/**\r\n * Creates a clone of `arrayBuffer`.\r\n *\r\n * @private\r\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\r\n * @returns {ArrayBuffer} Returns the cloned array buffer.\r\n */\r\nfunction cloneArrayBuffer(arrayBuffer) {\r\n    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\r\n    new Uint8Array(result).set(new Uint8Array(arrayBuffer));\r\n    return result;\r\n}\r\n/**\r\n * Creates a clone of `dataView`.\r\n *\r\n * @private\r\n * @param {Object} dataView The data view to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned data view.\r\n */\r\nfunction cloneDataView(dataView, isDeep) {\r\n    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\r\n    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\r\n}\r\n/**\r\n * Creates a clone of `map`.\r\n *\r\n * @private\r\n * @param {Object} map The map to clone.\r\n * @param {Function} cloneFunc The function to clone values.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned map.\r\n */\r\nfunction cloneMap(map, isDeep, cloneFunc) {\r\n    var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\r\n    return arrayReduce(array, addMapEntry, new map.constructor);\r\n}\r\n/**\r\n * Creates a clone of `regexp`.\r\n *\r\n * @private\r\n * @param {Object} regexp The regexp to clone.\r\n * @returns {Object} Returns the cloned regexp.\r\n */\r\nfunction cloneRegExp(regexp) {\r\n    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\r\n    result.lastIndex = regexp.lastIndex;\r\n    return result;\r\n}\r\n/**\r\n * Creates a clone of `set`.\r\n *\r\n * @private\r\n * @param {Object} set The set to clone.\r\n * @param {Function} cloneFunc The function to clone values.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned set.\r\n */\r\nfunction cloneSet(set, isDeep, cloneFunc) {\r\n    var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\r\n    return arrayReduce(array, addSetEntry, new set.constructor);\r\n}\r\n/**\r\n * Creates a clone of the `symbol` object.\r\n *\r\n * @private\r\n * @param {Object} symbol The symbol object to clone.\r\n * @returns {Object} Returns the cloned symbol object.\r\n */\r\nfunction cloneSymbol(symbol) {\r\n    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\r\n}\r\n/**\r\n * Creates a clone of `typedArray`.\r\n *\r\n * @private\r\n * @param {Object} typedArray The typed array to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned typed array.\r\n */\r\nfunction cloneTypedArray(typedArray, isDeep) {\r\n    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\r\n    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\r\n}\r\n/**\r\n * Copies the values of `source` to `array`.\r\n *\r\n * @private\r\n * @param {Array} source The array to copy values from.\r\n * @param {Array} [array=[]] The array to copy values to.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction copyArray(source, array) {\r\n    var index = -1, length = source.length;\r\n    array || (array = Array(length));\r\n    while (++index < length) {\r\n        array[index] = source[index];\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * Copies properties of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy properties from.\r\n * @param {Array} props The property identifiers to copy.\r\n * @param {Object} [object={}] The object to copy properties to.\r\n * @param {Function} [customizer] The function to customize copied values.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copyObject(source, props, object, customizer) {\r\n    object || (object = {});\r\n    var index = -1, length = props.length;\r\n    while (++index < length) {\r\n        var key = props[index];\r\n        var newValue = customizer\r\n            ? customizer(object[key], source[key], key, object, source)\r\n            : undefined;\r\n        assignValue(object, key, newValue === undefined ? source[key] : newValue);\r\n    }\r\n    return object;\r\n}\r\n/**\r\n * Copies own symbol properties of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy symbols from.\r\n * @param {Object} [object={}] The object to copy symbols to.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copySymbols(source, object) {\r\n    return copyObject(source, getSymbols(source), object);\r\n}\r\n/**\r\n * Creates an array of own enumerable property names and symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction getAllKeys(object) {\r\n    return baseGetAllKeys(object, keys, getSymbols);\r\n}\r\n/**\r\n * Gets the data for `map`.\r\n *\r\n * @private\r\n * @param {Object} map The map to query.\r\n * @param {string} key The reference key.\r\n * @returns {*} Returns the map data.\r\n */\r\nfunction getMapData(map, key) {\r\n    var data = map.__data__;\r\n    return isKeyable(key)\r\n        ? data[typeof key == 'string' ? 'string' : 'hash']\r\n        : data.map;\r\n}\r\n/**\r\n * Gets the native function at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {string} key The key of the method to get.\r\n * @returns {*} Returns the function if it's native, else `undefined`.\r\n */\r\nfunction getNative(object, key) {\r\n    var value = getValue(object, key);\r\n    return baseIsNative(value) ? value : undefined;\r\n}\r\n/**\r\n * Creates an array of the own enumerable symbol properties of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of symbols.\r\n */\r\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\r\n/**\r\n * Gets the `toStringTag` of `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nvar getTag = baseGetTag;\r\n// Fallback for data views, maps, sets, and weak maps in IE 11,\r\n// for data views in Edge < 14, and promises in Node.js.\r\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\r\n    (Map && getTag(new Map) != mapTag) ||\r\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\r\n    (Set && getTag(new Set) != setTag) ||\r\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\r\n    getTag = function (value) {\r\n        var result = objectToString.call(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : undefined;\r\n        if (ctorString) {\r\n            switch (ctorString) {\r\n                case dataViewCtorString:\r\n                    return dataViewTag;\r\n                case mapCtorString:\r\n                    return mapTag;\r\n                case promiseCtorString:\r\n                    return promiseTag;\r\n                case setCtorString:\r\n                    return setTag;\r\n                case weakMapCtorString:\r\n                    return weakMapTag;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\n/**\r\n * Initializes an array clone.\r\n *\r\n * @private\r\n * @param {Array} array The array to clone.\r\n * @returns {Array} Returns the initialized clone.\r\n */\r\nfunction initCloneArray(array) {\r\n    var length = array.length, result = array.constructor(length);\r\n    // Add properties assigned by `RegExp#exec`.\r\n    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\r\n        result.index = array.index;\r\n        result.input = array.input;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Initializes an object clone.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nfunction initCloneObject(object) {\r\n    return (typeof object.constructor == 'function' && !isPrototype(object))\r\n        ? baseCreate(getPrototype(object))\r\n        : {};\r\n}\r\n/**\r\n * Initializes an object clone based on its `toStringTag`.\r\n *\r\n * **Note:** This function only supports cloning values with tags of\r\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @param {string} tag The `toStringTag` of the object to clone.\r\n * @param {Function} cloneFunc The function to clone values.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\r\n    var Ctor = object.constructor;\r\n    switch (tag) {\r\n        case arrayBufferTag:\r\n            return cloneArrayBuffer(object);\r\n        case boolTag:\r\n        case dateTag:\r\n            return new Ctor(+object);\r\n        case dataViewTag:\r\n            return cloneDataView(object, isDeep);\r\n        case float32Tag:\r\n        case float64Tag:\r\n        case int8Tag:\r\n        case int16Tag:\r\n        case int32Tag:\r\n        case uint8Tag:\r\n        case uint8ClampedTag:\r\n        case uint16Tag:\r\n        case uint32Tag:\r\n            return cloneTypedArray(object, isDeep);\r\n        case mapTag:\r\n            return cloneMap(object, isDeep, cloneFunc);\r\n        case numberTag:\r\n        case stringTag:\r\n            return new Ctor(object);\r\n        case regexpTag:\r\n            return cloneRegExp(object);\r\n        case setTag:\r\n            return cloneSet(object, isDeep, cloneFunc);\r\n        case symbolTag:\r\n            return cloneSymbol(object);\r\n    }\r\n}\r\n/**\r\n * Checks if `value` is a valid array-like index.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\r\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\r\n */\r\nfunction isIndex(value, length) {\r\n    length = length == null ? MAX_SAFE_INTEGER : length;\r\n    return !!length &&\r\n        (typeof value == 'number' || reIsUint.test(value)) &&\r\n        (value > -1 && value % 1 == 0 && value < length);\r\n}\r\n/**\r\n * Checks if `value` is suitable for use as unique object key.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\r\n */\r\nfunction isKeyable(value) {\r\n    var type = typeof value;\r\n    return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\r\n        ? (value !== '__proto__')\r\n        : (value === null);\r\n}\r\n/**\r\n * Checks if `func` has its source masked.\r\n *\r\n * @private\r\n * @param {Function} func The function to check.\r\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\r\n */\r\nfunction isMasked(func) {\r\n    return !!maskSrcKey && (maskSrcKey in func);\r\n}\r\n/**\r\n * Checks if `value` is likely a prototype object.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\r\n */\r\nfunction isPrototype(value) {\r\n    var Ctor = value && value.constructor, proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\r\n    return value === proto;\r\n}\r\n/**\r\n * Converts `func` to its source code.\r\n *\r\n * @private\r\n * @param {Function} func The function to process.\r\n * @returns {string} Returns the source code.\r\n */\r\nfunction toSource(func) {\r\n    if (func != null) {\r\n        try {\r\n            return funcToString.call(func);\r\n        }\r\n        catch (e) {\r\n        }\r\n        try {\r\n            return (`${func}`);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return '';\r\n}\r\n/**\r\n * This method is like `_.clone` except that it recursively clones `value`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.0.0\r\n * @category Lang\r\n * @param {*} value The value to recursively clone.\r\n * @returns {*} Returns the deep cloned value.\r\n * @see _.clone\r\n * @example\r\n *\r\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\r\n *\r\n * var deep = _.cloneDeep(objects);\r\n * console.log(deep[0] === objects[0]);\r\n * // => false\r\n */\r\nfunction cloneDeep(value) {\r\n    return baseClone(value, true, true);\r\n}\r\n/**\r\n * Performs a\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * comparison between two values to determine if they are equivalent.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': 1 };\r\n * var other = { 'a': 1 };\r\n *\r\n * _.eq(object, object);\r\n * // => true\r\n *\r\n * _.eq(object, other);\r\n * // => false\r\n *\r\n * _.eq('a', 'a');\r\n * // => true\r\n *\r\n * _.eq('a', Object('a'));\r\n * // => false\r\n *\r\n * _.eq(NaN, NaN);\r\n * // => true\r\n */\r\nfunction eq(value, other) {\r\n    return value === other || (value !== value && other !== other);\r\n}\r\n/**\r\n * Checks if `value` is likely an `arguments` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArguments(function() { return arguments; }());\r\n * // => true\r\n *\r\n * _.isArguments([1, 2, 3]);\r\n * // => false\r\n */\r\nfunction isArguments(value) {\r\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\r\n    return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\r\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\r\n}\r\n/**\r\n * Checks if `value` is classified as an `Array` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\r\n * @example\r\n *\r\n * _.isArray([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArray(document.body.children);\r\n * // => false\r\n *\r\n * _.isArray('abc');\r\n * // => false\r\n *\r\n * _.isArray(_.noop);\r\n * // => false\r\n */\r\nvar isArray = Array.isArray;\r\n/**\r\n * Checks if `value` is array-like. A value is considered array-like if it's\r\n * not a function and has a `value.length` that's an integer greater than or\r\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n * @example\r\n *\r\n * _.isArrayLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLike(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLike('abc');\r\n * // => true\r\n *\r\n * _.isArrayLike(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLike(value) {\r\n    return value != null && isLength(value.length) && !isFunction(value);\r\n}\r\n/**\r\n * This method is like `_.isArrayLike` except that it also checks if `value`\r\n * is an object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array-like object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArrayLikeObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject('abc');\r\n * // => false\r\n *\r\n * _.isArrayLikeObject(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLikeObject(value) {\r\n    return isObjectLike(value) && isArrayLike(value);\r\n}\r\n/**\r\n * Checks if `value` is a buffer.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\r\n * @example\r\n *\r\n * _.isBuffer(new Buffer(2));\r\n * // => true\r\n *\r\n * _.isBuffer(new Uint8Array(2));\r\n * // => false\r\n */\r\nvar isBuffer = nativeIsBuffer || stubFalse;\r\n/**\r\n * Checks if `value` is classified as a `Function` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n * @example\r\n *\r\n * _.isFunction(_);\r\n * // => true\r\n *\r\n * _.isFunction(/abc/);\r\n * // => false\r\n */\r\nfunction isFunction(value) {\r\n    // The use of `Object#toString` avoids issues with the `typeof` operator\r\n    // in Safari 8-9 which returns 'object' for typed array and other constructors.\r\n    var tag = isObject(value) ? objectToString.call(value) : '';\r\n    return tag == funcTag || tag == genTag;\r\n}\r\n/**\r\n * Checks if `value` is a valid array-like length.\r\n *\r\n * **Note:** This method is loosely based on\r\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n * @example\r\n *\r\n * _.isLength(3);\r\n * // => true\r\n *\r\n * _.isLength(Number.MIN_VALUE);\r\n * // => false\r\n *\r\n * _.isLength(Infinity);\r\n * // => false\r\n *\r\n * _.isLength('3');\r\n * // => false\r\n */\r\nfunction isLength(value) {\r\n    return typeof value == 'number' &&\r\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\r\n}\r\n/**\r\n * Checks if `value` is the\r\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(_.noop);\r\n * // => true\r\n *\r\n * _.isObject(null);\r\n * // => false\r\n */\r\nfunction isObject(value) {\r\n    var type = typeof value;\r\n    return !!value && (type == 'object' || type == 'function');\r\n}\r\n/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nfunction isObjectLike(value) {\r\n    return !!value && typeof value == 'object';\r\n}\r\n/**\r\n * Creates an array of the own enumerable property names of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects. See the\r\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n * for more details.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.keys(new Foo);\r\n * // => ['a', 'b'] (iteration order is not guaranteed)\r\n *\r\n * _.keys('hi');\r\n * // => ['0', '1']\r\n */\r\nfunction keys(object) {\r\n    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\r\n}\r\n/**\r\n * This method returns a new empty array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {Array} Returns the new empty array.\r\n * @example\r\n *\r\n * var arrays = _.times(2, _.stubArray);\r\n *\r\n * console.log(arrays);\r\n * // => [[], []]\r\n *\r\n * console.log(arrays[0] === arrays[1]);\r\n * // => false\r\n */\r\nfunction stubArray() {\r\n    return [];\r\n}\r\n/**\r\n * This method returns `false`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {boolean} Returns `false`.\r\n * @example\r\n *\r\n * _.times(2, _.stubFalse);\r\n * // => [false, false]\r\n */\r\nfunction stubFalse() {\r\n    return false;\r\n}\r\nexport { cloneDeep };\r\n", "import { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\r\nimport { Transformation } from \"../transformation/Transformation.js\";\r\nimport { cloneDeep } from '../internal/utils/cloneDeep.js';\r\n/**\r\n * @desc Cloudinary media asset, with all possible transformations\r\n * @summary SDK\r\n * @memberOf SDK\r\n */\r\nclass CloudinaryMedia extends CloudinaryTransformable {\r\n    constructor(publicID, cloudConfig, urlConfig) {\r\n        /* istanbul ignore next */\r\n        super(publicID, cloudConfig, urlConfig, new Transformation());\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.Transcode} action\r\n     * @return {this}\r\n     */\r\n    transcode(action) {\r\n        this.transformation.transcode(action);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @param {Actions.VideoEdit} action\r\n     * @return {this}\r\n     */\r\n    videoEdit(action) {\r\n        this.transformation.videoEdit(action);\r\n        return this;\r\n    }\r\n    /**\r\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\r\n     * @return {this}\r\n     */\r\n    underlay(underlayAction) {\r\n        this.transformation.underlay(underlayAction);\r\n        return this;\r\n    }\r\n    clone() {\r\n        return cloneDeep(this);\r\n    }\r\n}\r\nexport { CloudinaryMedia };\r\n", "import { CloudinaryImage } from \"../assets/CloudinaryImage.js\";\r\nimport { CloudinaryVideo } from \"../assets/CloudinaryVideo.js\";\r\nclass Cloudinary {\r\n    constructor(cloudinaryConfig) {\r\n        if (cloudinaryConfig) {\r\n            this.cloudinaryConfig = cloudinaryConfig;\r\n        }\r\n    }\r\n    image(publicID) {\r\n        return new CloudinaryImage(publicID, this.cloudinaryConfig.cloud, this.cloudinaryConfig.url);\r\n    }\r\n    video(publicID) {\r\n        return new CloudinaryVideo(publicID, this.cloudinaryConfig.cloud, this.cloudinaryConfig.url);\r\n    }\r\n    setConfig(cloudinaryConfig) {\r\n        this.cloudinaryConfig = cloudinaryConfig;\r\n        return this;\r\n    }\r\n    getConfig() {\r\n        return this.cloudinaryConfig;\r\n    }\r\n    extendConfig() {\r\n        // Future implementation\r\n    }\r\n}\r\nexport { Cloudinary };\r\n", "/**\r\n *\r\n * @param a\r\n */\r\nexport function isObject(a) {\r\n    return typeof a === 'object' && a !== null;\r\n}\r\n", "/**\r\n *\r\n * @private\r\n * @description An isomorphic Base64 function, provides browser and server support.\r\n * @param {string} input - A string to encode with base64\r\n */\r\nfunction base64Encode(input) {\r\n    // Browser\r\n    let encodedResult = '';\r\n    if (typeof window !== 'undefined') {\r\n        // encodeURI the input to support unicode characters\r\n        // Since the URI might be encoded already, we try to decode it once before\r\n        encodedResult = btoa(encodeURI(decodeURI(input)));\r\n    }\r\n    else {\r\n        // NodeJS support\r\n        encodedResult = global.Buffer.from(input).toString('base64');\r\n    }\r\n    return encodedResult\r\n        .replace(/\\+/g, '-') // Convert '+' to '-'\r\n        .replace(/\\//g, '_'); // Convert '/' to '_';\r\n}\r\nexport { base64Encode };\r\n", "export const LEGACY_CONDITIONAL_OPERATORS = {\r\n    \"=\": 'eq',\r\n    \"!=\": 'ne',\r\n    \"<\": 'lt',\r\n    \">\": 'gt',\r\n    \"<=\": 'lte',\r\n    \">=\": 'gte',\r\n    \"&&\": 'and',\r\n    \"||\": 'or',\r\n    \"*\": \"mul\",\r\n    \"/\": \"div\",\r\n    \"+\": \"add\",\r\n    \"-\": \"sub\",\r\n    \"^\": \"pow\"\r\n};\r\nexport const CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\r\nexport const OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\r\nexport const AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\r\nexport const SHARED_CDN = AKAMAI_SHARED_CDN;\r\nexport const LEGACY_PREDEFINED_VARS = {\r\n    \"aspect_ratio\": \"ar\",\r\n    \"aspectRatio\": \"ar\",\r\n    \"current_page\": \"cp\",\r\n    \"currentPage\": \"cp\",\r\n    \"duration\": \"du\",\r\n    \"face_count\": \"fc\",\r\n    \"faceCount\": \"fc\",\r\n    \"height\": \"h\",\r\n    \"initial_aspect_ratio\": \"iar\",\r\n    \"initial_height\": \"ih\",\r\n    \"initial_width\": \"iw\",\r\n    \"initialAspectRatio\": \"iar\",\r\n    \"initialHeight\": \"ih\",\r\n    \"initialWidth\": \"iw\",\r\n    \"initial_duration\": \"idu\",\r\n    \"initialDuration\": \"idu\",\r\n    \"page_count\": \"pc\",\r\n    \"page_x\": \"px\",\r\n    \"page_y\": \"py\",\r\n    \"pageCount\": \"pc\",\r\n    \"pageX\": \"px\",\r\n    \"pageY\": \"py\",\r\n    \"tags\": \"tags\",\r\n    \"width\": \"w\"\r\n};\r\nexport const NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\r\nexport const OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\r\nexport const RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\r\nexport const OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`);\r\nexport const LAYER_KEYWORD_PARAMS = {\r\n    font_weight: \"normal\",\r\n    font_style: \"normal\",\r\n    text_decoration: \"none\",\r\n    text_align: '',\r\n    stroke: \"none\"\r\n};\r\n", "// Based on CGI::unescape. In addition does not escape / :\r\n// smart_escape = (string)->\r\n//  encodeURIComponent(string).replace(/%3A/g, \":\").replace(/%2F/g, \"/\")\r\nexport function smartEscape(string, unsafe = /([^a-zA-Z0-9_.\\-\\/:]+)/g) {\r\n    return string.replace(unsafe, function (match) {\r\n        return match.split(\"\").map(function (c) {\r\n            return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\r\n        }).join(\"\");\r\n    });\r\n}\r\n", "/**\r\n * Converts string to snake case\r\n * @param {string} str\r\n */\r\nexport const snakeCase = (str) => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\r\n", "import { snakeCase } from \"../utils/snakeCase.js\";\r\nclass Layer {\r\n    /**\r\n     * Layer\r\n     * @constructor Layer\r\n     * @param {Object} options - layer parameters\r\n     */\r\n    constructor(options) {\r\n        this.options = {};\r\n        if (options != null) {\r\n            [\"resourceType\", \"type\", \"publicId\", \"format\"].forEach((key) => {\r\n                var ref;\r\n                // @ts-ignore\r\n                return this.options[key] = (ref = options[key]) != null ? ref : options[snakeCase(key)];\r\n            });\r\n        }\r\n    }\r\n    resourceType(value) {\r\n        this.options.resourceType = value;\r\n        return this;\r\n    }\r\n    type(value) {\r\n        this.options.type = value;\r\n        return this;\r\n    }\r\n    publicId(value) {\r\n        this.options.publicId = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * Get the public ID, formatted for layer parameter\r\n     * @function Layer#getPublicId\r\n     * @return {String} public ID\r\n     */\r\n    getPublicId() {\r\n        var ref;\r\n        return (ref = this.options.publicId) != null ? ref.replace(/\\//g, \":\") : void 0;\r\n    }\r\n    /**\r\n     * Get the public ID, with format if present\r\n     * @function Layer#getFullPublicId\r\n     * @return {String} public ID\r\n     */\r\n    getFullPublicId() {\r\n        if (this.options.format != null) {\r\n            return this.getPublicId() + \".\" + this.options.format;\r\n        }\r\n        else {\r\n            return this.getPublicId();\r\n        }\r\n    }\r\n    format(value) {\r\n        this.options.format = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * generate the string representation of the layer\r\n     * @function Layer#toString\r\n     */\r\n    toString() {\r\n        let components = [];\r\n        if (this.options.publicId == null) {\r\n            throw \"Must supply publicId\";\r\n        }\r\n        if (!(this.options.resourceType === \"image\")) {\r\n            components.push(this.options.resourceType);\r\n        }\r\n        if (!(this.options.type === \"upload\")) {\r\n            components.push(this.options.type);\r\n        }\r\n        components.push(this.getFullPublicId());\r\n        return components.filter(x => !!x).join(\":\");\r\n    }\r\n    clone() {\r\n        return new Layer(this.options);\r\n    }\r\n}\r\nexport default Layer;\r\n", "export function isEmpty(value) {\r\n    return value === undefined ||\r\n        value === null ||\r\n        (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n        (typeof value === \"string\" && value.trim().length === 0);\r\n}\r\n", "/**\r\n * Return true is value is a number or a string representation of a number.\r\n * @function Util.isNumberLike\r\n * @param {*} value\r\n * @returns {boolean} true if value is a number\r\n * @example\r\n *    Util.isNumber(0) // true\r\n *    Util.isNumber(\"1.3\") // true\r\n *    Util.isNumber(\"\") // false\r\n *    Util.isNumber(undefined) // false\r\n */\r\nexport const isNumberLike = function (value) {\r\n    return (value != null) && !isNaN(parseFloat(value));\r\n};\r\n", "import Layer from './layer.js';\r\nimport { snakeCase } from \"../utils/snakeCase.js\";\r\nimport { isEmpty } from \"../utils/isEmpty.js\";\r\nimport { smartEscape } from \"../utils/smartEscape.js\";\r\nimport { isNumberLike } from \"../utils/isNumberLike.js\";\r\nclass TextLayer extends Layer {\r\n    /**\r\n     * @constructor TextLayer\r\n     * @param {Object} options - layer parameters\r\n     */\r\n    constructor(options) {\r\n        let keys;\r\n        super(options);\r\n        keys = [\"resourceType\", \"resourceType\", \"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"textDecoration\", \"textAlign\", \"stroke\", \"letterSpacing\", \"lineSpacing\", \"fontHinting\", \"fontAntialiasing\", \"text\"];\r\n        if (options != null) {\r\n            keys.forEach((key) => {\r\n                var ref;\r\n                // @ts-ignore\r\n                return this.options[key] = (ref = options[key]) != null ? ref : options[snakeCase(key)];\r\n            });\r\n        }\r\n        this.options.resourceType = \"text\";\r\n    }\r\n    //@ts-ignore\r\n    resourceType(resourceType) {\r\n        throw \"Cannot modify resourceType for text layers\";\r\n    }\r\n    //@ts-ignore\r\n    type(type) {\r\n        throw \"Cannot modify type for text layers\";\r\n    }\r\n    format(format) {\r\n        throw \"Cannot modify format for text layers\";\r\n    }\r\n    fontFamily(fontFamily) {\r\n        this.options.fontFamily = fontFamily;\r\n        return this;\r\n    }\r\n    fontSize(fontSize) {\r\n        this.options.fontSize = fontSize;\r\n        return this;\r\n    }\r\n    fontWeight(fontWeight) {\r\n        this.options.fontWeight = fontWeight;\r\n        return this;\r\n    }\r\n    fontStyle(fontStyle) {\r\n        this.options.fontStyle = fontStyle;\r\n        return this;\r\n    }\r\n    textDecoration(textDecoration) {\r\n        this.options.textDecoration = textDecoration;\r\n        return this;\r\n    }\r\n    textAlign(textAlign) {\r\n        this.options.textAlign = textAlign;\r\n        return this;\r\n    }\r\n    stroke(stroke) {\r\n        this.options.stroke = stroke;\r\n        return this;\r\n    }\r\n    letterSpacing(letterSpacing) {\r\n        this.options.letterSpacing = letterSpacing;\r\n        return this;\r\n    }\r\n    lineSpacing(lineSpacing) {\r\n        this.options.lineSpacing = lineSpacing;\r\n        return this;\r\n    }\r\n    fontHinting(fontHinting) {\r\n        this.options.fontHinting = fontHinting;\r\n        return this;\r\n    }\r\n    fontAntialiasing(fontAntialiasing) {\r\n        this.options.fontAntialiasing = fontAntialiasing;\r\n        return this;\r\n    }\r\n    text(text) {\r\n        this.options.text = text;\r\n        return this;\r\n    }\r\n    /**\r\n     * generate the string representation of the layer\r\n     * @function TextLayer#toString\r\n     * @return {String}\r\n     */\r\n    toString() {\r\n        var components, hasPublicId, hasStyle, publicId, re, res, start, style, text, textSource;\r\n        style = this.textStyleIdentifier();\r\n        if (this.options.publicId != null) {\r\n            publicId = this.getFullPublicId();\r\n        }\r\n        if (this.options.text != null) {\r\n            hasPublicId = !isEmpty(publicId);\r\n            hasStyle = !isEmpty(style);\r\n            if (hasPublicId && hasStyle || !hasPublicId && !hasStyle) {\r\n                throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay, but not both!\";\r\n            }\r\n            re = /\\$\\([a-zA-Z]\\w*\\)/g;\r\n            start = 0;\r\n            //        textSource = text.replace(new RegExp(\"[,/]\", 'g'), (c)-> \"%#{c.charCodeAt(0).toString(16).toUpperCase()}\")\r\n            textSource = smartEscape(this.options.text, /[,\\/]/g);\r\n            text = \"\";\r\n            while (res = re.exec(textSource)) {\r\n                text += smartEscape(textSource.slice(start, res.index));\r\n                text += res[0];\r\n                start = res.index + res[0].length;\r\n            }\r\n            text += smartEscape(textSource.slice(start));\r\n        }\r\n        components = [this.options.resourceType, style, publicId, text];\r\n        return (components).filter(x => !!x).join(\":\");\r\n    }\r\n    textStyleIdentifier() {\r\n        var components;\r\n        components = [];\r\n        if (this.options.fontWeight !== \"normal\") {\r\n            components.push(this.options.fontWeight);\r\n        }\r\n        if (this.options.fontStyle !== \"normal\") {\r\n            components.push(this.options.fontStyle);\r\n        }\r\n        if (this.options.textDecoration !== \"none\") {\r\n            components.push(this.options.textDecoration);\r\n        }\r\n        components.push(this.options.textAlign);\r\n        if (this.options.stroke !== \"none\") {\r\n            components.push(this.options.stroke);\r\n        }\r\n        if (!(isEmpty(this.options.letterSpacing) && !isNumberLike(this.options.letterSpacing))) {\r\n            components.push(\"letter_spacing_\" + this.options.letterSpacing);\r\n        }\r\n        if (!(isEmpty(this.options.lineSpacing) && !isNumberLike(this.options.lineSpacing))) {\r\n            components.push(\"line_spacing_\" + this.options.lineSpacing);\r\n        }\r\n        if (!(isEmpty(this.options.fontAntialiasing))) {\r\n            components.push(\"antialias_\" + this.options.fontAntialiasing);\r\n        }\r\n        if (!(isEmpty(this.options.fontHinting))) {\r\n            components.push(\"hinting_\" + this.options.fontHinting);\r\n        }\r\n        if (!isEmpty(components.filter(x => !!x))) {\r\n            if (isEmpty(this.options.fontFamily)) {\r\n                throw `Must supply fontFamily. ${components}`;\r\n            }\r\n            if (isEmpty(this.options.fontSize) && !isNumberLike(this.options.fontSize)) {\r\n                throw \"Must supply fontSize.\";\r\n            }\r\n        }\r\n        components.unshift(this.options.fontFamily, this.options.fontSize);\r\n        components = components.filter(x => !!x).join(\"_\");\r\n        return components;\r\n    }\r\n}\r\n;\r\nexport default TextLayer;\r\n", "/**\r\n * Parse layer options\r\n * @private\r\n * @param {object|*} layer The layer to parse.\r\n * @return {string} layer transformation string\r\n */\r\nimport { isObject } from \"../utils/isObject.js\";\r\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\r\nimport { LAYER_KEYWORD_PARAMS } from \"../consts.js\";\r\nimport { smartEscape } from \"../utils/smartEscape.js\";\r\nimport TextLayer from \"../legacyLayer/textlayer.js\";\r\nimport Layer from \"../legacyLayer/layer.js\";\r\nexport function textStyle(layer) {\r\n    const keywords = [];\r\n    let style = \"\";\r\n    Object.keys(LAYER_KEYWORD_PARAMS).forEach((attr) => {\r\n        let default_value = LAYER_KEYWORD_PARAMS[attr];\r\n        let attr_value = layer[attr] || default_value;\r\n        if (attr_value !== default_value) {\r\n            keywords.push(attr_value);\r\n        }\r\n    });\r\n    Object.keys(layer).forEach((attr) => {\r\n        if (attr === \"letter_spacing\" || attr === \"line_spacing\") {\r\n            keywords.push(`${attr}_${layer[attr]}`);\r\n        }\r\n        if (attr === \"font_hinting\") {\r\n            keywords.push(`${attr.split(\"_\").pop()}_${layer[attr]}`);\r\n        }\r\n        if (attr === \"font_antialiasing\") {\r\n            keywords.push(`antialias_${layer[attr]}`);\r\n        }\r\n    });\r\n    if (layer.hasOwnProperty(\"font_size\" || \"font_family\") || !keywords || keywords.length === 0) {\r\n        if (!layer.font_size)\r\n            throw `Must supply font_size for text in overlay/underlay`;\r\n        if (!layer.font_family)\r\n            throw `Must supply font_family for text in overlay/underlay`;\r\n        keywords.unshift(layer.font_size);\r\n        keywords.unshift(layer.font_family);\r\n        style = keywords.filter((a) => a).join(\"_\");\r\n    }\r\n    return style;\r\n}\r\nexport function processLayer(layer) {\r\n    if (layer instanceof TextLayer || layer instanceof Layer) {\r\n        return layer.toString();\r\n    }\r\n    let result = '';\r\n    if (isObject(layer)) {\r\n        if (layer.resource_type === \"fetch\" || (layer.url != null)) {\r\n            result = `fetch:${base64Encode(layer.url)}`;\r\n        }\r\n        else {\r\n            let public_id = layer.public_id;\r\n            let format = layer.format;\r\n            let resource_type = layer.resource_type || \"image\";\r\n            let type = layer.type || \"upload\";\r\n            let text = layer.text;\r\n            let style = null;\r\n            let components = [];\r\n            const noPublicId = !public_id || public_id.length === 0;\r\n            if (!noPublicId) {\r\n                public_id = public_id.replace(new RegExp(\"/\", 'g'), \":\");\r\n                if (format != null) {\r\n                    public_id = `${public_id}.${format}`;\r\n                }\r\n            }\r\n            if ((!text || text.length === 0) && resource_type !== \"text\") {\r\n                if (noPublicId) {\r\n                    throw \"Must supply public_id for resource_type layer_parameter\";\r\n                }\r\n                if (resource_type === \"subtitles\") {\r\n                    style = textStyle(layer);\r\n                }\r\n            }\r\n            else {\r\n                resource_type = \"text\";\r\n                type = null;\r\n                // type is ignored for text layers\r\n                style = textStyle(layer);\r\n                if (text && text.length >= 0) {\r\n                    const noStyle = !style;\r\n                    if (!(noPublicId || noStyle) || (noPublicId && noStyle)) {\r\n                        throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay\";\r\n                    }\r\n                    let re = /\\$\\([a-zA-Z]\\w*\\)/g;\r\n                    let start = 0;\r\n                    let textSource = smartEscape(decodeURIComponent(text), /[,\\/]/g);\r\n                    text = \"\";\r\n                    for (let res = re.exec(textSource); res; res = re.exec(textSource)) {\r\n                        text += smartEscape(textSource.slice(start, res.index));\r\n                        text += res[0];\r\n                        start = res.index + res[0].length;\r\n                    }\r\n                    text += encodeURIComponent(textSource.slice(start));\r\n                }\r\n            }\r\n            if (resource_type !== \"image\") {\r\n                components.push(resource_type);\r\n            }\r\n            if (type !== \"upload\") {\r\n                components.push(type);\r\n            }\r\n            components.push(style);\r\n            components.push(public_id);\r\n            components.push(text);\r\n            result = components.filter((a) => a).join(\":\");\r\n        }\r\n    }\r\n    else if (/^fetch:.+/.test(layer)) {\r\n        result = `fetch:${base64Encode(layer.substr(6))}`;\r\n    }\r\n    else {\r\n        result = layer;\r\n    }\r\n    return result;\r\n}\r\n", "import { LEGACY_PREDEFINED_VARS, LEGACY_CONDITIONAL_OPERATORS } from \"../consts.js\";\r\n/**\r\n * Normalize an offset value\r\n * @param {String} expression a decimal value which may have a 'p' or '%' postfix. E.g. '35%', '0.4p'\r\n * @return {Object|String} a normalized String of the input value if possible otherwise the value itself\r\n */\r\nexport function legacyNormalizeExpression(expression) {\r\n    if (typeof expression !== 'string' || expression.length === 0 || expression.match(/^!.+!$/)) {\r\n        if (expression) {\r\n            return expression.toString();\r\n        }\r\n        else {\r\n            return expression;\r\n        }\r\n    }\r\n    expression = String(expression);\r\n    const operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\+|\\\\*|\\\\^\";\r\n    // operators\r\n    const operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\r\n    const operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\r\n    expression = expression.replace(operatorsReplaceRE, (match) => {\r\n        return LEGACY_CONDITIONAL_OPERATORS[match];\r\n    });\r\n    // predefined variables\r\n    const predefinedVarsPattern = \"(\" + Object.keys(LEGACY_PREDEFINED_VARS).join(\"|\") + \")\";\r\n    const userVariablePattern = '(\\\\$_*[^_ ]+)';\r\n    const variablesReplaceRE = new RegExp(`${userVariablePattern}|${predefinedVarsPattern}`, \"g\");\r\n    // @ts-ignore\r\n    expression = expression.replace(variablesReplaceRE, (match) => (LEGACY_PREDEFINED_VARS[match] || match));\r\n    return expression.replace(/[ _]+/g, '_');\r\n}\r\n", "import { legacyNormalizeExpression } from \"../utils/legacyNormalizeExpression.js\";\r\n/**\r\n * Parse \"if\" parameter\r\n * Translates the condition if provided.\r\n * @private\r\n * @return {string} \"if_\" + ifValue\r\n */\r\nexport function process_if(ifValue) {\r\n    return ifValue ? \"if_\" + legacyNormalizeExpression(ifValue) : ifValue;\r\n}\r\n", "/**\r\n *\r\n * @param arg\r\n */\r\nexport function toArray(arg) {\r\n    switch (true) {\r\n        case arg == null:\r\n            return [];\r\n        case Array.isArray(arg):\r\n            return arg;\r\n        default:\r\n            return [arg];\r\n    }\r\n}\r\n", "import { legacyNormalizeExpression } from \"../utils/legacyNormalizeExpression.js\";\r\n/**\r\n * Parse radius options\r\n * @private\r\n * @param {Array<string|number>|string|number} _radius The radius to parse\r\n * @return {string} radius transformation string\r\n */\r\nexport function processRadius(_radius) {\r\n    let radius = _radius;\r\n    if (!radius) {\r\n        return radius;\r\n    }\r\n    if (!Array.isArray(radius)) {\r\n        radius = [radius];\r\n    }\r\n    if (radius.length === 0 || radius.length > 4) {\r\n        throw new Error(\"Radius array should contain between 1 and 4 values\");\r\n    }\r\n    if (radius.findIndex((x) => x === null) >= 0) {\r\n        throw new Error(\"Corner: Cannot be null\");\r\n    }\r\n    return radius.map(legacyNormalizeExpression).join(':');\r\n}\r\n", "import { base64Encode } from \"../../internal/utils/base64Encode.js\";\r\nimport { isObject } from \"../utils/isObject.js\";\r\n/**\r\n * Parse custom_function options\r\n * @private\r\n * @param {object|*} customFunction a custom function object containing function_type and source values\r\n * @return {string|*} custom_function transformation string\r\n */\r\nexport function processCustomFunction(customFunction) {\r\n    if (!isObject(customFunction)) {\r\n        return customFunction;\r\n    }\r\n    if (customFunction.function_type === \"remote\") {\r\n        const encodedSource = base64Encode(customFunction.source)\r\n            .replace(/\\+/g, '-') // Convert '+' to '-'\r\n            .replace(/\\//g, '_') // Convert '/' to '_'\r\n            .replace(/=+$/, ''); // Remove ending '='\r\n        return [customFunction.function_type, encodedSource].join(\":\");\r\n    }\r\n    return [customFunction.function_type, customFunction.source].join(\":\");\r\n}\r\n", "import { processCustomFunction } from \"./processCustomFunction.js\";\r\n/**\r\n * Parse custom_pre_function options\r\n * @private\r\n * @param {object|*} customPreFunction a custom function object containing function_type and source values\r\n * @return {string|*} custom_pre_function transformation string\r\n */\r\nexport function processCustomPreFunction(customPreFunction) {\r\n    const result = processCustomFunction(customPreFunction);\r\n    return typeof result === 'string' ? `pre:${result}` : null;\r\n}\r\n", "/**\r\n * Split a range into the start and end values\r\n * @param range\r\n */\r\nimport { OFFSET_ANY_PATTERN_RE } from \"../consts.js\";\r\nexport function splitRange(range) {\r\n    switch (range && range.constructor) {\r\n        case String:\r\n            if (!OFFSET_ANY_PATTERN_RE.test(range)) {\r\n                return range;\r\n            }\r\n            return range.split(\"..\");\r\n        case Array:\r\n            return [[range], range[range.length - 1]];\r\n        default:\r\n            return [null, null];\r\n    }\r\n}\r\n", "import { RANGE_VALUE_RE } from \"../consts.js\";\r\n/**\r\n *\r\n * @param value\r\n */\r\nexport function normRangeValues(value) {\r\n    const offset = String(value).match(RANGE_VALUE_RE);\r\n    if (offset) {\r\n        const modifier = offset[5] ? 'p' : '';\r\n        return `${offset[1] || offset[4]}${modifier}`;\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\n", "/**\r\n * A video codec parameter can be either a String or a Hash.\r\n * @param {Object} param <code>vc_<codec>[ : <profile> : [<level>]]</code>\r\n *                       or <code>{ codec: 'h264', profile: 'basic', level: '3.1' }</code>\r\n * @return {String} <code><codec> : <profile> : [<level>]]</code> if a Hash was provided\r\n *                   or the param if a String was provided.\r\n *                   Returns null if param is not a Hash or String\r\n */\r\nexport function processVideoParams(param) {\r\n    switch (param && param.constructor) {\r\n        case Object: {\r\n            let video = \"\";\r\n            if ('codec' in param) {\r\n                video = param.codec;\r\n                if ('profile' in param) {\r\n                    video += \":\" + param.profile;\r\n                    if ('level' in param) {\r\n                        video += \":\" + param.level;\r\n                    }\r\n                }\r\n            }\r\n            return video;\r\n        }\r\n        case String:\r\n            return param;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n", "/**\r\n * Represents a transformation expression.\r\n * @param {string} expressionStr - An expression in string format.\r\n * @class Expression\r\n *\r\n */\r\nclass Expression {\r\n    constructor(expressionStr) {\r\n        /**\r\n         * @protected\r\n         * @inner Expression-expressions\r\n         */\r\n        this.expressions = [];\r\n        if (expressionStr != null) {\r\n            this.expressions.push(Expression.normalize(expressionStr));\r\n        }\r\n    }\r\n    /**\r\n     * Convenience constructor method\r\n     * @function Expression.new\r\n     */\r\n    static new(expressionStr) {\r\n        return new this(expressionStr);\r\n    }\r\n    /**\r\n     * Normalize a string expression\r\n     * @function Cloudinary#normalize\r\n     * @param {string} expression a expression, e.g. \"w gt 100\", \"width_gt_100\", \"width > 100\"\r\n     * @return {string} the normalized form of the value expression, e.g. \"w_gt_100\"\r\n     */\r\n    static normalize(expression) {\r\n        var operators, operatorsPattern, operatorsReplaceRE, predefinedVarsPattern, predefinedVarsReplaceRE;\r\n        if (expression == null) {\r\n            return expression;\r\n        }\r\n        expression = String(expression);\r\n        operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\+|\\\\*|\\\\^\";\r\n        // operators\r\n        operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\r\n        operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\r\n        // @ts-ignore\r\n        expression = expression.replace(operatorsReplaceRE, match => OPERATORS[match]);\r\n        // predefined variables\r\n        predefinedVarsPattern = \"(\" + Object.keys(PREDEFINED_VARS).join(\"|\") + \")\";\r\n        predefinedVarsReplaceRE = new RegExp(predefinedVarsPattern, \"g\");\r\n        // @ts-ignore\r\n        expression = expression.replace(predefinedVarsReplaceRE, (match, p1, offset) => (expression[offset - 1] === '$' ? match : PREDEFINED_VARS[match]));\r\n        return expression.replace(/[ _]+/g, '_');\r\n    }\r\n    /**\r\n     * Serialize the expression\r\n     * @return {string} the expression as a string\r\n     */\r\n    serialize() {\r\n        return Expression.normalize(this.expressions.join(\"_\"));\r\n    }\r\n    toString() {\r\n        return this.serialize();\r\n    }\r\n    /**\r\n     * Get the parent transformation of this expression\r\n     * @return Transformation\r\n     */\r\n    getParent() {\r\n        return this.parent;\r\n    }\r\n    /**\r\n     * Set the parent transformation of this expression\r\n     * @param {Transformation} the parent transformation\r\n     * @return {Expression} this expression\r\n     */\r\n    setParent(parent) {\r\n        this.parent = parent;\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a expression\r\n     * @function Expression#predicate\r\n     * @internal\r\n     */\r\n    predicate(name, operator, value) {\r\n        // @ts-ignore\r\n        if (OPERATORS[operator] != null) {\r\n            // @ts-ignore\r\n            operator = OPERATORS[operator];\r\n        }\r\n        this.expressions.push(`${name}_${operator}_${value}`);\r\n        return this;\r\n    }\r\n    /**\r\n     * @function Expression#and\r\n     */\r\n    and() {\r\n        this.expressions.push(\"and\");\r\n        return this;\r\n    }\r\n    /**\r\n     * @function Expression#or\r\n     */\r\n    or() {\r\n        this.expressions.push(\"or\");\r\n        return this;\r\n    }\r\n    /**\r\n     * Conclude expression\r\n     * @function Expression#then\r\n     * @return {Transformation} the transformation this expression is defined for\r\n     */\r\n    then() {\r\n        return this.getParent().if(this.toString());\r\n    }\r\n    /**\r\n     * @function Expression#height\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Expression} this expression\r\n     */\r\n    height(operator, value) {\r\n        return this.predicate(\"h\", operator, value);\r\n    }\r\n    /**\r\n     * @function Expression#width\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Expression} this expression\r\n     */\r\n    width(operator, value) {\r\n        return this.predicate(\"w\", operator, value);\r\n    }\r\n    /**\r\n     * @function Expression#aspectRatio\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Expression} this expression\r\n     */\r\n    aspectRatio(operator, value) {\r\n        return this.predicate(\"ar\", operator, value);\r\n    }\r\n    /**\r\n     * @function Expression#pages\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Expression} this expression\r\n     */\r\n    pageCount(operator, value) {\r\n        return this.predicate(\"pc\", operator, value);\r\n    }\r\n    /**\r\n     * @function Expression#faces\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Expression} this expression\r\n     */\r\n    faceCount(operator, value) {\r\n        return this.predicate(\"fc\", operator, value);\r\n    }\r\n    value(value) {\r\n        this.expressions.push(value);\r\n        return this;\r\n    }\r\n    /**\r\n     */\r\n    static variable(name, value) {\r\n        return new this(name).value(value);\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"width\"\r\n     * @function Expression.width\r\n     */\r\n    static width() {\r\n        return new this(\"width\");\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"height\"\r\n     * @function Expression.height\r\n     */\r\n    static height() {\r\n        return new this(\"height\");\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"initialWidth\"\r\n     * @function Expression.initialWidth\r\n     */\r\n    static initialWidth() {\r\n        return new this(\"initialWidth\");\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"initialHeight\"\r\n     * @function Expression.initialHeight\r\n     */\r\n    static initialHeight() {\r\n        return new this(\"initialHeight\");\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"aspectRatio\"\r\n     * @function Expression.aspectRatio\r\n     */\r\n    static aspectRatio() {\r\n        return new this(\"aspectRatio\");\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"initialAspectRatio\"\r\n     * @function Expression.initialAspectRatio\r\n     */\r\n    static initialAspectRatio() {\r\n        return new this(\"initialAspectRatio\");\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"pageCount\"\r\n     * @function Expression.pageCount\r\n     */\r\n    static pageCount() {\r\n        return new this(\"pageCount\");\r\n    }\r\n    /**\r\n     * @returns Expression new expression with the predefined variable \"faceCount\"\r\n     * @function Expression.faceCount\r\n     */\r\n    static faceCount() {\r\n        return new this(\"faceCount\");\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"currentPage\"\r\n     * @function Expression.currentPage\r\n     */\r\n    static currentPage() {\r\n        return new this(\"currentPage\");\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"tags\"\r\n     * @function Expression.tags\r\n     */\r\n    static tags() {\r\n        return new this(\"tags\");\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"pageX\"\r\n     * @function Expression.pageX\r\n     */\r\n    static pageX() {\r\n        return new this(\"pageX\");\r\n    }\r\n    /**\r\n     * @returns Expression a new expression with the predefined variable \"pageY\"\r\n     * @function Expression.pageY\r\n     */\r\n    static pageY() {\r\n        return new this(\"pageY\");\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nconst OPERATORS = {\r\n    \"=\": 'eq',\r\n    \"!=\": 'ne',\r\n    \"<\": 'lt',\r\n    \">\": 'gt',\r\n    \"<=\": 'lte',\r\n    \">=\": 'gte',\r\n    \"&&\": 'and',\r\n    \"||\": 'or',\r\n    \"*\": \"mul\",\r\n    \"/\": \"div\",\r\n    \"+\": \"add\",\r\n    \"-\": \"sub\",\r\n    \"^\": \"pow\",\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst PREDEFINED_VARS = {\r\n    \"aspect_ratio\": \"ar\",\r\n    \"aspectRatio\": \"ar\",\r\n    \"current_page\": \"cp\",\r\n    \"currentPage\": \"cp\",\r\n    \"preview:duration\": \"preview:duration\",\r\n    \"duration\": \"du\",\r\n    \"face_count\": \"fc\",\r\n    \"faceCount\": \"fc\",\r\n    \"height\": \"h\",\r\n    \"initial_aspect_ratio\": \"iar\",\r\n    \"initial_duration\": \"idu\",\r\n    \"initial_height\": \"ih\",\r\n    \"initial_width\": \"iw\",\r\n    \"initialAspectRatio\": \"iar\",\r\n    \"initialDuration\": \"idu\",\r\n    \"initialHeight\": \"ih\",\r\n    \"initialWidth\": \"iw\",\r\n    \"page_count\": \"pc\",\r\n    \"page_x\": \"px\",\r\n    \"page_y\": \"py\",\r\n    \"pageCount\": \"pc\",\r\n    \"pageX\": \"px\",\r\n    \"pageY\": \"py\",\r\n    \"tags\": \"tags\",\r\n    \"width\": \"w\"\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst BOUNDRY = \"[ _]+\";\r\nexport default Expression;\r\n", "import Expression from './expression.js';\r\n/**\r\n * Represents a transformation condition.\r\n * @param {string} conditionStr - a condition in string format\r\n * @class Condition\r\n * @example\r\n * // normally this class is not instantiated directly\r\n * var tr = cloudinary.Transformation.new()\r\n *    .if().width( \">\", 1000).and().aspectRatio(\"<\", \"3:4\").then()\r\n *      .width(1000)\r\n *      .crop(\"scale\")\r\n *    .else()\r\n *      .width(500)\r\n *      .crop(\"scale\")\r\n *\r\n * var tr = cloudinary.Transformation.new()\r\n *    .if(\"w > 1000 and aspectRatio < 3:4\")\r\n *      .width(1000)\r\n *      .crop(\"scale\")\r\n *    .else()\r\n *      .width(500)\r\n *      .crop(\"scale\")\r\n *\r\n */\r\nclass Condition extends Expression {\r\n    constructor(conditionStr) {\r\n        super(conditionStr);\r\n    }\r\n    /**\r\n     * @function Condition#height\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Condition} this condition\r\n     */\r\n    height(operator, value) {\r\n        return this.predicate(\"h\", operator, value);\r\n    }\r\n    /**\r\n     * @function Condition#width\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Condition} this condition\r\n     */\r\n    width(operator, value) {\r\n        return this.predicate(\"w\", operator, value);\r\n    }\r\n    /**\r\n     * @function Condition#aspectRatio\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Condition} this condition\r\n     */\r\n    aspectRatio(operator, value) {\r\n        return this.predicate(\"ar\", operator, value);\r\n    }\r\n    /**\r\n     * @function Condition#pages\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Condition} this condition\r\n     */\r\n    pageCount(operator, value) {\r\n        return this.predicate(\"pc\", operator, value);\r\n    }\r\n    /**\r\n     * @function Condition#faces\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Condition} this condition\r\n     */\r\n    faceCount(operator, value) {\r\n        return this.predicate(\"fc\", operator, value);\r\n    }\r\n    /**\r\n     * @function Condition#duration\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Condition} this condition\r\n     */\r\n    duration(operator, value) {\r\n        return this.predicate(\"du\", operator, value);\r\n    }\r\n    /**\r\n     * @function Condition#initialDuration\r\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\r\n     * @param {string|number} value the right hand side value\r\n     * @return {Condition} this condition\r\n     */\r\n    initialDuration(operator, value) {\r\n        return this.predicate(\"idu\", operator, value);\r\n    }\r\n}\r\nexport default Condition;\r\n", "import { cloneDeep } from '../internal/utils/cloneDeep.js';\r\nimport { isObject } from \"./utils/isObject.js\";\r\n/**\r\n * Class for defining account configuration options.\r\n * Depends on 'utils'\r\n */\r\n/**\r\n * Assign values from sources if they are not defined in the destination.\r\n * Once a value is set it does not change\r\n * @function Util.defaults\r\n * @param {Object} destination - the object to assign defaults to\r\n * @param sources\r\n * @param {...Object} source - the source object(s) to assign defaults from\r\n * @return {Object} destination after it was modified\r\n */\r\nconst useDefaultValues = (destination, ...sources) => {\r\n    return sources.reduce(function (dest, source) {\r\n        let key, value;\r\n        for (key in source) {\r\n            // @ts-ignore\r\n            value = source[key];\r\n            // @ts-ignore\r\n            if (dest[key] === void 0) {\r\n                // @ts-ignore\r\n                dest[key] = value;\r\n            }\r\n        }\r\n        return dest;\r\n    }, destination);\r\n};\r\n/**\r\n * Class for defining account configuration options.\r\n * @constructor Configuration\r\n * @param {Object} options - The account configuration parameters to set.\r\n * @see <a href=\"https://cloudinary.com/documentation/solution_overview#configuration_parameters\"\r\n *  target=\"_new\">Available configuration options</a>\r\n */\r\nclass Configuration {\r\n    constructor(options) {\r\n        this.configuration = options == null ? {} : cloneDeep(options);\r\n        useDefaultValues(this.configuration, DEFAULT_CONFIGURATION_PARAMS);\r\n    }\r\n    /**\r\n     * Initializes the configuration. This method is a convenience method that invokes both\r\n     *  {@link Configuration#fromEnvironment|fromEnvironment()} (Node.js environment only)\r\n     *  and {@link Configuration#fromDocument|fromDocument()}.\r\n     *  It first tries to retrieve the configuration from the environment variable.\r\n     *  If not available, it tries from the document meta tags.\r\n     * @function Configuration#init\r\n     * @return {Configuration} returns `this` for chaining\r\n     * @see fromDocument\r\n     * @see fromEnvironment\r\n     */\r\n    init() {\r\n        this.fromEnvironment();\r\n        this.fromDocument();\r\n        return this;\r\n    }\r\n    /**\r\n     * Set a new configuration item\r\n     * @function Configuration#set\r\n     * @param {string} name - the name of the item to set\r\n     * @param {*} value - the value to be set\r\n     * @return {Configuration}\r\n     *\r\n     */\r\n    set(name, value) {\r\n        // @ts-ignore\r\n        this.configuration[name] = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * Get the value of a configuration item\r\n     * @function Configuration#get\r\n     * @param {string} name - the name of the item to set\r\n     * @return {*} the configuration item\r\n     */\r\n    get(name) {\r\n        return this.configuration[name];\r\n    }\r\n    merge(config) {\r\n        Object.assign(this.configuration, cloneDeep(config));\r\n        return this;\r\n    }\r\n    /**\r\n     * Initialize Cloudinary from HTML meta tags.\r\n     * @function Configuration#fromDocument\r\n     * @return {Configuration}\r\n     * @example <meta name=\"cloudinary_cloud_name\" content=\"mycloud\">\r\n     *\r\n     */\r\n    fromDocument() {\r\n        var el, i, len, meta_elements;\r\n        meta_elements = typeof document !== \"undefined\" && document !== null ? document.querySelectorAll('meta[name^=\"cloudinary_\"]') : void 0;\r\n        if (meta_elements) {\r\n            for (i = 0, len = meta_elements.length; i < len; i++) {\r\n                el = meta_elements[i];\r\n                this.configuration[el.getAttribute('name').replace('cloudinary_', '')] = el.getAttribute('content');\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Initialize Cloudinary from the `CLOUDINARY_URL` environment variable.\r\n     *\r\n     * This function will only run under Node.js environment.\r\n     * @function Configuration#fromEnvironment\r\n     * @requires Node.js\r\n     */\r\n    fromEnvironment() {\r\n        var cloudinary_url, query, uri, uriRegex;\r\n        if (typeof process !== \"undefined\" && process !== null && process.env && process.env.CLOUDINARY_URL) {\r\n            cloudinary_url = process.env.CLOUDINARY_URL;\r\n            uriRegex = /cloudinary:\\/\\/(?:(\\w+)(?:\\:([\\w-]+))?@)?([\\w\\.-]+)(?:\\/([^?]*))?(?:\\?(.+))?/;\r\n            uri = uriRegex.exec(cloudinary_url);\r\n            if (uri) {\r\n                if (uri[3] != null) {\r\n                    this.configuration['cloud_name'] = uri[3];\r\n                }\r\n                if (uri[1] != null) {\r\n                    this.configuration['api_key'] = uri[1];\r\n                }\r\n                if (uri[2] != null) {\r\n                    this.configuration['api_secret'] = uri[2];\r\n                }\r\n                if (uri[4] != null) {\r\n                    this.configuration['private_cdn'] = uri[4] != null;\r\n                }\r\n                if (uri[4] != null) {\r\n                    this.configuration['secure_distribution'] = uri[4];\r\n                }\r\n                query = uri[5];\r\n                if (query != null) {\r\n                    query.split('&').forEach(value => {\r\n                        let [k, v] = value.split('=');\r\n                        if (v == null) {\r\n                            // @ts-ignore\r\n                            v = true;\r\n                        }\r\n                        this.configuration[k] = v;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Create or modify the Cloudinary client configuration\r\n     *\r\n     * Warning: `config()` returns the actual internal configuration object. modifying it will change the configuration.\r\n     *\r\n     * This is a backward compatibility method. For new code, use get(), merge() etc.\r\n     * @function Configuration#config\r\n     * @param {hash|string|boolean} new_config\r\n     * @param {string} new_value\r\n     * @returns {*} configuration, or value\r\n     *\r\n     * @see {@link fromEnvironment} for initialization using environment variables\r\n     * @see {@link fromDocument} for initialization using HTML meta tags\r\n     */\r\n    config(new_config, new_value) {\r\n        switch (false) {\r\n            case new_value === void 0:\r\n                this.set(new_config, new_value);\r\n                return this.configuration;\r\n            case typeof new_config != 'string':\r\n                return this.get(new_config);\r\n            case !isObject(new_config):\r\n                this.merge(new_config);\r\n                return this.configuration;\r\n            default:\r\n                // Backward compatibility - return the internal object\r\n                return this.configuration;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a copy of the configuration parameters\r\n     * @function Configuration#toOptions\r\n     * @returns {Object} a key:value collection of the configuration parameters\r\n     */\r\n    toOptions() {\r\n        return cloneDeep(this.configuration);\r\n    }\r\n}\r\nconst DEFAULT_CONFIGURATION_PARAMS = {\r\n    responsive_class: 'cld-responsive',\r\n    responsive_use_breakpoints: true,\r\n    round_dpr: true,\r\n    secure: (typeof window !== \"undefined\" && window !== null ? window.location ? window.location.protocol : void 0 : void 0) === 'https:'\r\n};\r\nexport const CONFIG_PARAMS = [\r\n    \"api_key\",\r\n    \"api_secret\",\r\n    \"callback\",\r\n    \"cdn_subdomain\",\r\n    \"cloud_name\",\r\n    \"cname\",\r\n    \"private_cdn\",\r\n    \"protocol\",\r\n    \"resource_type\",\r\n    \"responsive\",\r\n    \"responsive_class\",\r\n    \"responsive_use_breakpoints\",\r\n    \"responsive_width\",\r\n    \"round_dpr\",\r\n    \"secure\",\r\n    \"secure_cdn_subdomain\",\r\n    \"secure_distribution\",\r\n    \"shorten\",\r\n    \"type\",\r\n    \"upload_preset\",\r\n    \"url_suffix\",\r\n    \"use_root_path\",\r\n    \"version\",\r\n    \"externalLibraries\",\r\n    \"max_timeout_ms\"\r\n];\r\nexport default Configuration;\r\n", "/**\r\n * Create a copy of the source object with all keys in camelCase\r\n * @function Util.withCamelCaseKeys\r\n * @return {Object} a new object\r\n * @param source\r\n */\r\nimport { isEmpty } from \"./isEmpty.js\";\r\nexport const withCamelCaseKeys = function (source) {\r\n    return convertKeys(source, camelCase);\r\n};\r\n/**\r\n * Convert string to camelCase\r\n * @function Util.camelCase\r\n * @param {string} source - the string to convert\r\n * @return {string} in camelCase format\r\n */\r\nexport const camelCase = function (source) {\r\n    let words = source.match(reWords);\r\n    words = words.map(word => word.charAt(0).toLocaleUpperCase() + word.slice(1).toLocaleLowerCase());\r\n    words[0] = words[0].toLocaleLowerCase();\r\n    return words.join('');\r\n};\r\n/**\r\n * Creates a new object from source, with the keys transformed using the converter.\r\n * @param {object} source\r\n * @param {function|null} converter\r\n * @returns {object}\r\n */\r\nexport var convertKeys = function (source, converter) {\r\n    var result, value;\r\n    result = {};\r\n    for (let key in source) {\r\n        value = source[key];\r\n        if (converter) {\r\n            key = converter(key);\r\n        }\r\n        if (!isEmpty(key)) {\r\n            // @ts-ignore\r\n            result[key] = value;\r\n        }\r\n    }\r\n    return result;\r\n};\r\nexport var reWords = (function () {\r\n    var lower, upper;\r\n    upper = '[A-Z]';\r\n    lower = '[a-z]+';\r\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\r\n})();\r\nexport function identity(x) {\r\n    return x;\r\n}\r\nexport function contains(a, obj) {\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (a[i] === obj) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function difference(arr1, arr2) {\r\n    return arr1.filter(x => !arr2.includes(x));\r\n}\r\n", "import TextLayer from './textlayer.js';\r\nclass SubtitlesLayer extends TextLayer {\r\n    /**\r\n     * Represent a subtitles layer\r\n     * @constructor SubtitlesLayer\r\n     * @param {Object} options - layer parameters\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n        this.options.resourceType = \"subtitles\";\r\n    }\r\n}\r\nexport default SubtitlesLayer;\r\n", "/**\r\n * Sort a map by key\r\n * @private\r\n * @param map <string, any>\r\n * @Return array of map's values sorted by key\r\n */\r\nfunction mapToSortedArray(map, flags) {\r\n    const array = Array.from(map.entries());\r\n    // objects from the Array.from() method above are stored in array of arrays:\r\n    // [[qualifierKey, QualifierObj], [qualifierKey, QualifierObj]]\r\n    // Flags is an array of FlagQualifierObj\r\n    // We need to convert it to the same form: [flagQualifier] =>  ['fl', flagQualifier]\r\n    flags.forEach((flag) => {\r\n        array.push(['fl', flag]); // push ['fl', flagQualifier]\r\n    });\r\n    return array.sort().map((v) => v[1]);\r\n}\r\n/**\r\n * Checks if `value` is a string.\r\n * @private\r\n * @param {*} value The value to check.\r\n * @return {boolean} `true` if `value` is a string, else `false`.\r\n */\r\nfunction isString(value) {\r\n    return (typeof value === 'string' || value instanceof String);\r\n}\r\nexport { isString, mapToSortedArray };\r\n", "import Layer from './layer.js';\r\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\r\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\r\nclass FetchLayer extends Layer {\r\n    /**\r\n     * @class FetchLayer\r\n     * @classdesc Creates an image layer using a remote URL.\r\n     * @param {Object|string} options - layer parameters or a url\r\n     * @param {string} options.url the url of the image to fetch\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n        if (isString(options)) {\r\n            this.options.url = options;\r\n        }\r\n        else if (options != null ? options.url : void 0) {\r\n            this.options.url = options.url;\r\n        }\r\n    }\r\n    url(url) {\r\n        this.options.url = url;\r\n        return this;\r\n    }\r\n    /**\r\n     * generate the string representation of the layer\r\n     * @function FetchLayer#toString\r\n     * @return {String}\r\n     */\r\n    toString() {\r\n        return `fetch:${base64Encode(this.options.url)}`;\r\n    }\r\n}\r\nexport default FetchLayer;\r\n", "/**\r\n * Simple Is Function check\r\n *\r\n * @param variableToCheck\r\n * @returns {boolean}\r\n */\r\nexport function isFunction(variableToCheck) {\r\n    return variableToCheck instanceof Function;\r\n}\r\n", "import Condition from './condition.js';\r\nimport { CONFIG_PARAMS } from './configuration.js';\r\nimport { cloneDeep } from '../internal/utils/cloneDeep.js';\r\nimport { camelCase, contains, difference, } from \"./utils/legacyBaseUtil.js\";\r\nimport { snakeCase } from \"./utils/snakeCase.js\";\r\nimport Expression from './expression.js';\r\nimport Layer from './legacyLayer/layer.js';\r\nimport TextLayer from './legacyLayer/textlayer.js';\r\nimport SubtitlesLayer from './legacyLayer/subtitleslayer.js';\r\nimport FetchLayer from './legacyLayer/fetchlayer.js';\r\nimport { isObject } from \"./utils/isObject.js\";\r\nimport { isString } from \"../internal/utils/dataStructureUtils.js\";\r\nimport { isEmpty } from \"./utils/isEmpty.js\";\r\nimport { isFunction } from \"./utils/isFunction.js\";\r\nimport { identity, withCamelCaseKeys } from \"./utils/legacyBaseUtil.js\";\r\n/**\r\n * A list of keys used by the url() function.\r\n * @private\r\n */\r\nexport const URL_KEYS = [\r\n    'accessibility',\r\n    'api_secret',\r\n    'auth_token',\r\n    'cdn_subdomain',\r\n    'cloud_name',\r\n    'cname',\r\n    'format',\r\n    'placeholder',\r\n    'private_cdn',\r\n    'resource_type',\r\n    'secure',\r\n    'secure_cdn_subdomain',\r\n    'secure_distribution',\r\n    'shorten',\r\n    'sign_url',\r\n    'signature',\r\n    'ssl_detected',\r\n    'type',\r\n    'url_suffix',\r\n    'use_root_path',\r\n    'version'\r\n];\r\n/**\r\n * Assign key, value to target, when value is not null.<br>\r\n *   This function mutates the target!\r\n * @param {object} target the object to assign the values to\r\n * @param {object} sources one or more objects to get values from\r\n * @returns {object} the target after the assignment\r\n */\r\nfunction assignNotNull(target, ...sources) {\r\n    sources.forEach(source => {\r\n        Object.keys(source).forEach(key => {\r\n            // @ts-ignore\r\n            if (source[key] != null) {\r\n                // @ts-ignore\r\n                target[key] = source[key];\r\n            }\r\n        });\r\n    });\r\n    return target;\r\n}\r\n/**\r\n * Return true if all items in list are strings\r\n * @function Util.allString\r\n * @param {Array} list - an array of items\r\n */\r\nconst allStrings = function (list) {\r\n    return list.length && list.every(isString);\r\n};\r\n/**\r\n * Transformation parameters\r\n * Depends on 'util', 'transformation'\r\n */\r\nclass Param {\r\n    /**\r\n     * Represents a single parameter.\r\n     * @class Param\r\n     * @param {string} name - The name of the parameter in snake_case\r\n     * @param {string} shortName - The name of the serialized form of the parameter.\r\n     *                         If a value is not provided, the parameter will not be serialized.\r\n     * @param {function} [process=Util.identity ] - Manipulate origValue when value is called\r\n     * @ignore\r\n     */\r\n    constructor(name, shortName, process = identity) {\r\n        /**\r\n         * The name of the parameter in snake_case\r\n         * @member {string} Param#name\r\n         */\r\n        this.name = name;\r\n        /**\r\n         * The name of the serialized form of the parameter\r\n         * @member {string} Param#shortName\r\n         */\r\n        this.shortName = shortName;\r\n        /**\r\n         * Manipulate origValue when value is called\r\n         * @member {function} Param#process\r\n         */\r\n        this.process = process;\r\n    }\r\n    /**\r\n     * Set a (unprocessed) value for this parameter\r\n     * @function Param#set\r\n     * @param {*} origValue - the value of the parameter\r\n     * @return {Param} self for chaining\r\n     */\r\n    set(origValue) {\r\n        this.origValue = origValue;\r\n        return this;\r\n    }\r\n    /**\r\n     * Generate the serialized form of the parameter\r\n     * @function Param#serialize\r\n     * @return {string} the serialized form of the parameter\r\n     */\r\n    serialize() {\r\n        var val, valid;\r\n        val = this.value();\r\n        valid = Array.isArray(val) || isObject(val) || isString(val) ? !isEmpty(val) : val != null;\r\n        if ((this.shortName != null) && valid) {\r\n            return `${this.shortName}_${val}`;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    /**\r\n     * Return the processed value of the parameter\r\n     * @function Param#value\r\n     */\r\n    value() {\r\n        return this.process(this.origValue);\r\n    }\r\n    static norm_color(value) {\r\n        return value != null ? value.replace(/^#/, 'rgb:') : void 0;\r\n    }\r\n    static build_array(arg) {\r\n        if (arg == null) {\r\n            return [];\r\n        }\r\n        else if (Array.isArray(arg)) {\r\n            return arg;\r\n        }\r\n        else {\r\n            return [arg];\r\n        }\r\n    }\r\n    /**\r\n     * Covert value to video codec string.\r\n     *\r\n     * If the parameter is an object,\r\n     * @param {(string|Object)} param - the video codec as either a String or a Hash\r\n     * @return {string} the video codec string in the format codec:profile:level\r\n     * @example\r\n     * vc_[ :profile : [level]]\r\n     * or\r\n     { codec: 'h264', profile: 'basic', level: '3.1' }\r\n     * @ignore\r\n     */\r\n    static process_video_params(param) {\r\n        var video;\r\n        switch (param.constructor) {\r\n            case Object:\r\n                video = \"\";\r\n                if ('codec' in param) {\r\n                    video = param.codec;\r\n                    if ('profile' in param) {\r\n                        video += \":\" + param.profile;\r\n                        if ('level' in param) {\r\n                            video += \":\" + param.level;\r\n                        }\r\n                    }\r\n                }\r\n                return video;\r\n            case String:\r\n                return param;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\nclass ArrayParam extends Param {\r\n    /**\r\n     * A parameter that represents an array.\r\n     * @param {string} name - The name of the parameter in snake_case.\r\n     * @param {string} shortName - The name of the serialized form of the parameter\r\n     *                         If a value is not provided, the parameter will not be serialized.\r\n     * @param {string} [sep='.'] - The separator to use when joining the array elements together\r\n     * @param {function} [process=Util.identity ] - Manipulate origValue when value is called\r\n     * @class ArrayParam\r\n     * @extends Param\r\n     * @ignore\r\n     */\r\n    constructor(name, shortName, sep = '.', process = undefined) {\r\n        super(name, shortName, process);\r\n        this.sep = sep;\r\n    }\r\n    serialize() {\r\n        if (this.shortName != null) {\r\n            let arrayValue = this.value();\r\n            if (isEmpty(arrayValue)) {\r\n                return '';\r\n            }\r\n            else if (isString(arrayValue)) {\r\n                return `${this.shortName}_${arrayValue}`;\r\n            }\r\n            else {\r\n                let flat = arrayValue.map((t) => isFunction(t.serialize) ? t.serialize() : t).join(this.sep);\r\n                return `${this.shortName}_${flat}`;\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    value() {\r\n        if (Array.isArray(this.origValue)) {\r\n            return this.origValue.map(v => this.process(v));\r\n        }\r\n        else {\r\n            return this.process(this.origValue);\r\n        }\r\n    }\r\n    set(origValue) {\r\n        if ((origValue == null) || Array.isArray(origValue)) {\r\n            return super.set(origValue);\r\n        }\r\n        else {\r\n            return super.set([origValue]);\r\n        }\r\n    }\r\n}\r\nclass TransformationParam extends Param {\r\n    /**\r\n     * A parameter that represents a transformation\r\n     * @param {string} name - The name of the parameter in snake_case\r\n     * @param {string} [shortName='t'] - The name of the serialized form of the parameter\r\n     * @param {string} [sep='.'] - The separator to use when joining the array elements together\r\n     * @param {function} [process=Util.identity ] - Manipulate origValue when value is called\r\n     * @class TransformationParam\r\n     * @extends Param\r\n     * @ignore\r\n     */\r\n    constructor(name, shortName = \"t\", sep = '.', process = undefined) {\r\n        super(name, shortName, process);\r\n        this.sep = sep;\r\n    }\r\n    /**\r\n     * Generate string representations of the transformation.\r\n     * @returns {*} Returns either the transformation as a string, or an array of string representations.\r\n     */\r\n    serialize() {\r\n        let result = '';\r\n        const val = this.value();\r\n        if (isEmpty(val)) {\r\n            return result;\r\n        }\r\n        // val is an array of strings so join them\r\n        if (allStrings(val)) {\r\n            const joined = val.join(this.sep); // creates t1.t2.t3 in case multiple named transformations were configured\r\n            if (!isEmpty(joined)) {\r\n                // in case options.transformation was not set with an empty string (val != ['']);\r\n                result = `${this.shortName}_${joined}`;\r\n            }\r\n        }\r\n        else { // Convert val to an array of strings\r\n            result = val.map((t) => {\r\n                if (isString(t) && !isEmpty(t)) {\r\n                    return `${this.shortName}_${t}`;\r\n                }\r\n                if (isFunction(t.serialize)) {\r\n                    return t.serialize();\r\n                }\r\n                if (isObject(t) && !isEmpty(t)) {\r\n                    return new Transformation(t).serialize();\r\n                }\r\n                return undefined;\r\n            }).filter((t) => t);\r\n        }\r\n        return result;\r\n    }\r\n    set(origValue1) {\r\n        this.origValue = origValue1;\r\n        if (Array.isArray(this.origValue)) {\r\n            return super.set(this.origValue);\r\n        }\r\n        else {\r\n            return super.set([this.origValue]);\r\n        }\r\n    }\r\n}\r\nconst number_pattern = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\r\nconst offset_any_pattern = \"(\" + number_pattern + \")([%pP])?\";\r\nclass RangeParam extends Param {\r\n    /**\r\n     * A parameter that represents a range\r\n     * @param {string} name - The name of the parameter in snake_case\r\n     * @param {string} shortName - The name of the serialized form of the parameter\r\n     *                         If a value is not provided, the parameter will not be serialized.\r\n     * @param {function} [process=norm_range_value ] - Manipulate origValue when value is called\r\n     * @class RangeParam\r\n     * @extends Param\r\n     * @ignore\r\n     */\r\n    constructor(name, shortName, process = RangeParam.norm_range_value) {\r\n        super(name, shortName, process);\r\n    }\r\n    static norm_range_value(value) {\r\n        let offset = String(value).match(new RegExp('^' + offset_any_pattern + '$'));\r\n        if (offset) {\r\n            let modifier = offset[5] != null ? 'p' : '';\r\n            value = (offset[1] || offset[4]) + modifier;\r\n        }\r\n        return value;\r\n    }\r\n}\r\nclass RawParam extends Param {\r\n    constructor(name, shortName, process = identity) {\r\n        super(name, shortName, process);\r\n    }\r\n    serialize() {\r\n        return this.value();\r\n    }\r\n}\r\nclass LayerParam extends Param {\r\n    // Parse layer options\r\n    // @return [string] layer transformation string\r\n    // @private\r\n    value() {\r\n        if (this.origValue == null) {\r\n            return '';\r\n        }\r\n        let result;\r\n        if (this.origValue instanceof Layer) {\r\n            result = this.origValue;\r\n        }\r\n        else if (isObject(this.origValue)) {\r\n            let layerOptions = withCamelCaseKeys(this.origValue);\r\n            // @ts-ignore\r\n            if (layerOptions.resourceType === \"text\" || (layerOptions.text != null)) {\r\n                result = new TextLayer(layerOptions);\r\n            }\r\n            else { // @ts-ignore\r\n                if (layerOptions.resourceType === \"subtitles\") {\r\n                    result = new SubtitlesLayer(layerOptions);\r\n                }\r\n                else { // @ts-ignore\r\n                    if (layerOptions.resourceType === \"fetch\" || (layerOptions.url != null)) {\r\n                        result = new FetchLayer(layerOptions);\r\n                    }\r\n                    else {\r\n                        result = new Layer(layerOptions);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (isString(this.origValue)) {\r\n            if (/^fetch:.+/.test(this.origValue)) {\r\n                result = new FetchLayer(this.origValue.substr(6));\r\n            }\r\n            else {\r\n                result = this.origValue;\r\n            }\r\n        }\r\n        else {\r\n            result = '';\r\n        }\r\n        return result.toString();\r\n    }\r\n    static textStyle(layer) {\r\n        return (new TextLayer(layer)).textStyleIdentifier();\r\n    }\r\n}\r\n/**\r\n * TransformationBase\r\n * Depends on 'configuration', 'parameters','util'\r\n * @internal\r\n */\r\nclass TransformationBase {\r\n    /**\r\n     * The base class for transformations.\r\n     * Members of this class are documented as belonging to the {@link Transformation} class for convenience.\r\n     * @class TransformationBase\r\n     */\r\n    constructor(options) {\r\n        /** @private */\r\n        /** @private */\r\n        let parent;\r\n        let trans;\r\n        parent = void 0;\r\n        trans = {};\r\n        /**\r\n         * Return an options object that can be used to create an identical Transformation\r\n         * @function Transformation#toOptions\r\n         * @return {Object} Returns a plain object representing this transformation\r\n         */\r\n        this.toOptions = (withChain) => {\r\n            let opt = {};\r\n            if (withChain == null) {\r\n                withChain = true;\r\n            }\r\n            // @ts-ignore\r\n            Object.keys(trans).forEach(key => opt[key] = trans[key].origValue);\r\n            assignNotNull(opt, this.otherOptions);\r\n            if (withChain && !isEmpty(this.chained)) {\r\n                let list = this.chained.map((tr) => tr.toOptions());\r\n                list.push(opt);\r\n                opt = {};\r\n                assignNotNull(opt, this.otherOptions);\r\n                // @ts-ignore\r\n                opt.transformation = list;\r\n            }\r\n            return opt;\r\n        };\r\n        /**\r\n         * Set a parent for this object for chaining purposes.\r\n         *\r\n         * @function Transformation#setParent\r\n         * @param {Object} object - the parent to be assigned to\r\n         * @returns {Transformation} Returns this instance for chaining purposes.\r\n         */\r\n        this.setParent = (object) => {\r\n            parent = object;\r\n            if (object != null) {\r\n                // @ts-ignore\r\n                this.fromOptions(typeof object.toOptions === \"function\" ? object.toOptions() : void 0);\r\n            }\r\n            return this;\r\n        };\r\n        /**\r\n         * Returns the parent of this object in the chain\r\n         * @function Transformation#getParent\r\n         * @protected\r\n         * @return {Object} Returns the parent of this object if there is any\r\n         */\r\n        this.getParent = () => {\r\n            return parent;\r\n        };\r\n        // Helper methods to create parameter methods\r\n        // These methods are defined here because they access `trans` which is\r\n        // a private member of `TransformationBase`\r\n        /** @protected */\r\n        this.param = (value, name, abbr, defaultValue, process) => {\r\n            if (process == null) {\r\n                if (isFunction(defaultValue)) {\r\n                    process = defaultValue;\r\n                }\r\n                else {\r\n                    process = identity;\r\n                }\r\n            }\r\n            // @ts-ignore\r\n            trans[name] = new Param(name, abbr, process).set(value);\r\n            return this;\r\n        };\r\n        /** @protected */\r\n        this.rawParam = function (value, name, abbr, defaultValue, process) {\r\n            process = lastArgCallback(arguments);\r\n            // @ts-ignore\r\n            trans[name] = new RawParam(name, abbr, process).set(value);\r\n            return this;\r\n        };\r\n        /** @protected */\r\n        this.rangeParam = function (value, name, abbr, defaultValue, process) {\r\n            process = lastArgCallback(arguments);\r\n            // @ts-ignore\r\n            trans[name] = new RangeParam(name, abbr, process).set(value);\r\n            return this;\r\n        };\r\n        /** @protected */\r\n        this.arrayParam = function (value, name, abbr, sep = \":\", defaultValue = [], process = undefined) {\r\n            process = lastArgCallback(arguments);\r\n            // @ts-ignore\r\n            trans[name] = new ArrayParam(name, abbr, sep, process).set(value);\r\n            return this;\r\n        };\r\n        /** @protected */\r\n        this.transformationParam = function (value, name, abbr, sep = \".\", defaultValue = undefined, process = undefined) {\r\n            process = lastArgCallback(arguments);\r\n            // @ts-ignore\r\n            trans[name] = new TransformationParam(name, abbr, sep, process).set(value);\r\n            return this;\r\n        };\r\n        this.layerParam = function (value, name, abbr) {\r\n            // @ts-ignore\r\n            trans[name] = new LayerParam(name, abbr).set(value);\r\n            return this;\r\n        };\r\n        // End Helper methods\r\n        /**\r\n         * Get the value associated with the given name.\r\n         * Get the value associated with the given name.\r\n         * @function Transformation#getValue\r\n         * @param {string} name - the name of the parameter\r\n         * @return {*} the processed value associated with the given name\r\n         * @description Use {@link get}.origValue for the value originally provided for the parameter\r\n         */\r\n        this.getValue = function (name) {\r\n            // @ts-ignore\r\n            let value = trans[name] && trans[name].value();\r\n            return value != null ? value : this.otherOptions[name];\r\n        };\r\n        /**\r\n         * Get the parameter object for the given parameter name\r\n         * @function Transformation#get\r\n         * @param {string} name the name of the transformation parameter\r\n         * @returns {Param} the param object for the given name, or undefined\r\n         */\r\n        this.get = function (name) {\r\n            // @ts-ignore\r\n            return trans[name];\r\n        };\r\n        /**\r\n         * Remove a transformation option from the transformation.\r\n         * @function Transformation#remove\r\n         * @param {string} name - the name of the option to remove\r\n         * @return {*} Returns the option that was removed or null if no option by that name was found. The type of the\r\n         *              returned value depends on the value.\r\n         */\r\n        this.remove = function (name) {\r\n            var temp;\r\n            switch (false) {\r\n                // @ts-ignore\r\n                case trans[name] == null:\r\n                    // @ts-ignore\r\n                    temp = trans[name];\r\n                    // @ts-ignore\r\n                    delete trans[name];\r\n                    return temp.origValue;\r\n                case this.otherOptions[name] == null:\r\n                    temp = this.otherOptions[name];\r\n                    delete this.otherOptions[name];\r\n                    return temp;\r\n                default:\r\n                    return null;\r\n            }\r\n        };\r\n        /**\r\n         * Return an array of all the keys (option names) in the transformation.\r\n         * @return {Array<string>} the keys in snakeCase format\r\n         */\r\n        this.keys = function () {\r\n            var key;\r\n            return ((function () {\r\n                var results;\r\n                results = [];\r\n                for (key in trans) {\r\n                    if (key != null) {\r\n                        results.push(key.match(VAR_NAME_RE) ? key : snakeCase(key));\r\n                    }\r\n                }\r\n                return results;\r\n            })()).sort();\r\n        };\r\n        /**\r\n         * Returns a plain object representation of the transformation. Values are processed.\r\n         * @function Transformation#toPlainObject\r\n         * @return {Object} the transformation options as plain object\r\n         */\r\n        this.toPlainObject = function () {\r\n            var hash, key, list;\r\n            hash = {};\r\n            for (key in trans) {\r\n                // @ts-ignore\r\n                hash[key] = trans[key].value();\r\n                // @ts-ignore\r\n                if (isObject(hash[key])) {\r\n                    // @ts-ignore\r\n                    hash[key] = cloneDeep(hash[key]);\r\n                }\r\n            }\r\n            if (!isEmpty(this.chained)) {\r\n                list = this.chained.map((tr) => tr.toPlainObject());\r\n                list.push(hash);\r\n                hash = {\r\n                    transformation: list\r\n                };\r\n            }\r\n            return hash;\r\n        };\r\n        /**\r\n         * Complete the current transformation and chain to a new one.\r\n         * In the URL, transformations are chained together by slashes.\r\n         * @function Transformation#chain\r\n         * @return {Transformation} Returns this transformation for chaining\r\n         * @example\r\n         * var tr = cloudinary.Transformation.new();\r\n         * tr.width(10).crop('fit').chain().angle(15).serialize()\r\n         * // produces \"c_fit,w_10/a_15\"\r\n         */\r\n        this.chain = function () {\r\n            var names, tr;\r\n            names = Object.getOwnPropertyNames(trans);\r\n            if (names.length !== 0) {\r\n                tr = new this.constructor(this.toOptions(false));\r\n                this.resetTransformations();\r\n                this.chained.push(tr);\r\n            }\r\n            return this;\r\n        };\r\n        this.resetTransformations = function () {\r\n            trans = {};\r\n            return this;\r\n        };\r\n        this.otherOptions = {};\r\n        this.chained = [];\r\n        this.fromOptions(options);\r\n    }\r\n    /**\r\n     * Merge the provided options with own's options\r\n     * @param {Object} [options={}] key-value list of options\r\n     * @returns {Transformation} Returns this instance for chaining\r\n     */\r\n    fromOptions(options = {}) {\r\n        if (options instanceof TransformationBase) {\r\n            this.fromTransformation(options);\r\n        }\r\n        else {\r\n            if (isString(options) || Array.isArray(options)) {\r\n                options = {\r\n                    transformation: options\r\n                };\r\n            }\r\n            options = cloneDeep(options);\r\n            // Handling of \"if\" statements precedes other options as it creates a chained transformation\r\n            // @ts-ignore\r\n            if (options[\"if\"]) {\r\n                // @ts-ignore\r\n                this.set(\"if\", options[\"if\"]);\r\n                // @ts-ignore\r\n                delete options[\"if\"];\r\n            }\r\n            for (let key in options) {\r\n                // @ts-ignore\r\n                let opt = options[key];\r\n                if (opt != null) {\r\n                    if (key.match(VAR_NAME_RE)) {\r\n                        if (key !== '$attr') {\r\n                            this.set('variable', key, opt);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.set(key, opt);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    fromTransformation(other) {\r\n        if (other instanceof TransformationBase) {\r\n            other.keys().forEach(key => this.set(key, other.get(key).origValue));\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Set a parameter.\r\n     * The parameter name `key` is converted to\r\n     * @param {string} key - the name of the parameter\r\n     * @param {*} values - the value of the parameter\r\n     * @returns {Transformation} Returns this instance for chaining\r\n     */\r\n    set(key, ...values) {\r\n        let camelKey;\r\n        camelKey = camelCase(key);\r\n        if (contains(methods, camelKey)) {\r\n            // @ts-ignore\r\n            this[camelKey].apply(this, values);\r\n        }\r\n        else {\r\n            this.otherOptions[key] = values[0];\r\n        }\r\n        return this;\r\n    }\r\n    hasLayer() {\r\n        return this.getValue(\"overlay\") || this.getValue(\"underlay\");\r\n    }\r\n    /**\r\n     * Generate a string representation of the transformation.\r\n     * @function Transformation#serialize\r\n     * @return {string} Returns the transformation as a string\r\n     */\r\n    serialize() {\r\n        var ifParam, j, len, paramList, ref, ref1, ref2, ref3, ref4, resultArray, t, transformationList, transformationString, transformations, value, variables, vars;\r\n        resultArray = this.chained.map((tr) => tr.serialize());\r\n        paramList = this.keys();\r\n        transformations = (ref = this.get(\"transformation\")) != null ? ref.serialize() : void 0;\r\n        ifParam = (ref1 = this.get(\"if\")) != null ? ref1.serialize() : void 0;\r\n        variables = processVar((ref2 = this.get(\"variables\")) != null ? ref2.value() : void 0);\r\n        paramList = difference(paramList, [\"transformation\", \"if\", \"variables\"]);\r\n        vars = [];\r\n        transformationList = [];\r\n        for (j = 0, len = paramList.length; j < len; j++) {\r\n            t = paramList[j];\r\n            if (t.match(VAR_NAME_RE)) {\r\n                vars.push(t + \"_\" + Expression.normalize((ref3 = this.get(t)) != null ? ref3.value() : void 0));\r\n            }\r\n            else {\r\n                transformationList.push((ref4 = this.get(t)) != null ? ref4.serialize() : void 0);\r\n            }\r\n        }\r\n        switch (false) {\r\n            case !isString(transformations):\r\n                transformationList.push(transformations);\r\n                break;\r\n            case !Array.isArray(transformations):\r\n                resultArray = resultArray.concat(transformations);\r\n        }\r\n        transformationList = (function () {\r\n            var k, len1, results;\r\n            results = [];\r\n            for (k = 0, len1 = transformationList.length; k < len1; k++) {\r\n                value = transformationList[k];\r\n                if (Array.isArray(value) && !isEmpty(value) || !Array.isArray(value) && value) {\r\n                    results.push(value);\r\n                }\r\n            }\r\n            return results;\r\n        })();\r\n        transformationList = vars.sort().concat(variables).concat(transformationList.sort());\r\n        if (ifParam === \"if_end\") {\r\n            transformationList.push(ifParam);\r\n        }\r\n        else if (!isEmpty(ifParam)) {\r\n            transformationList.unshift(ifParam);\r\n        }\r\n        transformationString = (transformationList).filter(x => !!x).join(param_separator);\r\n        if (!isEmpty(transformationString)) {\r\n            resultArray.push(transformationString);\r\n        }\r\n        return (resultArray).filter((x) => !!x).join(trans_separator);\r\n    }\r\n    /**\r\n     * Provide a list of all the valid transformation option names\r\n     * @function Transformation#listNames\r\n     * @private\r\n     * @return {Array<string>} a array of all the valid option names\r\n     */\r\n    static listNames() {\r\n        return methods;\r\n    }\r\n    /**\r\n     * Returns the attributes for an HTML tag.\r\n     * @function Cloudinary.toHtmlAttributes\r\n     * @return PlainObject\r\n     */\r\n    toHtmlAttributes() {\r\n        let attrName, height, options, ref2, ref3, value, width;\r\n        options = {};\r\n        let snakeCaseKey;\r\n        Object.keys(this.otherOptions).forEach(key => {\r\n            value = this.otherOptions[key];\r\n            snakeCaseKey = snakeCase(key);\r\n            if (!contains(PARAM_NAMES, snakeCaseKey) && !contains(URL_KEYS, snakeCaseKey)) {\r\n                attrName = /^html_/.test(key) ? key.slice(5) : key;\r\n                options[attrName] = value;\r\n            }\r\n        });\r\n        // convert all \"html_key\" to \"key\" with the same value\r\n        this.keys().forEach(key => {\r\n            if (/^html_/.test(key)) {\r\n                options[camelCase(key.slice(5))] = this.getValue(key);\r\n            }\r\n        });\r\n        if (!(this.hasLayer() || this.getValue(\"angle\") || contains([\"fit\", \"limit\", \"lfill\"], this.getValue(\"crop\")))) {\r\n            width = (ref2 = this.get(\"width\")) != null ? ref2.origValue : void 0;\r\n            height = (ref3 = this.get(\"height\")) != null ? ref3.origValue : void 0;\r\n            if (parseFloat(width) >= 1.0) {\r\n                if (options.width == null) {\r\n                    options.width = width;\r\n                }\r\n            }\r\n            if (parseFloat(height) >= 1.0) {\r\n                if (options.height == null) {\r\n                    options.height = height;\r\n                }\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    static isValidParamName(name) {\r\n        return methods.indexOf(camelCase(name)) >= 0;\r\n    }\r\n    /**\r\n     * Delegate to the parent (up the call chain) to produce HTML\r\n     * @function Transformation#toHtml\r\n     * @return {string} HTML representation of the parent if possible.\r\n     * @example\r\n     * tag = cloudinary.ImageTag.new(\"sample\", {cloud_name: \"demo\"})\r\n     * // ImageTag {name: \"img\", publicId: \"sample\"}\r\n     * tag.toHtml()\r\n     * // <img src=\"http://res.cloudinary.com/demo/image/upload/sample\">\r\n     * tag.transformation().crop(\"fit\").width(300).toHtml()\r\n     * // <img src=\"http://res.cloudinary.com/demo/image/upload/c_fit,w_300/sample\">\r\n     */\r\n    toHtml() {\r\n        var ref;\r\n        return (ref = this.getParent()) != null ? typeof ref.toHtml === \"function\" ? ref.toHtml() : void 0 : void 0;\r\n    }\r\n    toString() {\r\n        return this.serialize();\r\n    }\r\n    clone() {\r\n        return new TransformationBase(this.toOptions(true));\r\n    }\r\n}\r\nconst VAR_NAME_RE = /^\\$[a-zA-Z0-9]+$/;\r\nconst trans_separator = '/';\r\nconst param_separator = ',';\r\nfunction lastArgCallback(args) {\r\n    var callback;\r\n    callback = args != null ? args[args.length - 1] : void 0;\r\n    if (isFunction(callback)) {\r\n        return callback;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\nfunction processVar(varArray) {\r\n    var j, len, name, results, v;\r\n    if (Array.isArray(varArray)) {\r\n        results = [];\r\n        for (j = 0, len = varArray.length; j < len; j++) {\r\n            [name, v] = varArray[j];\r\n            results.push(`${name}_${Expression.normalize(v)}`);\r\n        }\r\n        return results;\r\n    }\r\n    else {\r\n        return varArray;\r\n    }\r\n}\r\n// @ts-ignore\r\nfunction processCustomFunction({ function_type, source }) {\r\n    if (function_type === 'remote') {\r\n        return [function_type, btoa(source)].join(\":\");\r\n    }\r\n    else if (function_type === 'wasm') {\r\n        return [function_type, source].join(\":\");\r\n    }\r\n}\r\n/**\r\n * Transformation Class methods.\r\n * This is a list of the parameters defined in Transformation.\r\n * Values are camelCased.\r\n * @const Transformation.methods\r\n * @private\r\n * @ignore\r\n * @type {Array<string>}\r\n */\r\n/**\r\n * Parameters that are filtered out before passing the options to an HTML tag.\r\n *\r\n * The list of parameters is a combination of `Transformation::methods` and `Configuration::CONFIG_PARAMS`\r\n * @const {Array<string>} Transformation.PARAM_NAMES\r\n * @private\r\n * @ignore\r\n * @see toHtmlAttributes\r\n */\r\nclass Transformation extends TransformationBase {\r\n    /**\r\n     * Represents a single transformation.\r\n     * @class Transformation\r\n     * @example\r\n     * t = new cloudinary.Transformation();\r\n     * t.angle(20).crop(\"scale\").width(\"auto\");\r\n     *\r\n     * // or\r\n     *\r\n     * t = new cloudinary.Transformation( {angle: 20, crop: \"scale\", width: \"auto\"});\r\n     * @see <a href=\"https://cloudinary.com/documentation/image_transformation_reference\"\r\n     *  target=\"_blank\">Available image transformations</a>\r\n     * @see <a href=\"https://cloudinary.com/documentation/video_transformation_reference\"\r\n     *  target=\"_blank\">Available video transformations</a>\r\n     */\r\n    constructor(options) {\r\n        super(options);\r\n    }\r\n    /**\r\n     * Convenience constructor\r\n     * @param {Object} options\r\n     * @return {Transformation}\r\n     * @example cl = cloudinary.Transformation.new( {angle: 20, crop: \"scale\", width: \"auto\"})\r\n     */\r\n    static new(options) {\r\n        return new Transformation(options);\r\n    }\r\n    /*\r\n      Transformation Parameters\r\n    */\r\n    angle(value) {\r\n        this.arrayParam(value, \"angle\", \"a\", \".\", Expression.normalize);\r\n        return this;\r\n    }\r\n    audioCodec(value) {\r\n        this.param(value, \"audio_codec\", \"ac\");\r\n        return this;\r\n    }\r\n    audioFrequency(value) {\r\n        this.param(value, \"audio_frequency\", \"af\");\r\n        return this;\r\n    }\r\n    aspectRatio(value) {\r\n        this.param(value, \"aspect_ratio\", \"ar\", Expression.normalize);\r\n        return this;\r\n    }\r\n    background(value) {\r\n        this.param(value, \"background\", \"b\", Param.norm_color);\r\n        return this;\r\n    }\r\n    bitRate(value) {\r\n        this.param(value, \"bit_rate\", \"br\");\r\n        return this;\r\n    }\r\n    border(value) {\r\n        return this.param(value, \"border\", \"bo\", (border) => {\r\n            if (isObject(border)) {\r\n                border = Object.assign({}, {\r\n                    color: \"black\",\r\n                    width: 2\r\n                }, border);\r\n                return `${border.width}px_solid_${Param.norm_color(border.color)}`;\r\n            }\r\n            else {\r\n                return border;\r\n            }\r\n        });\r\n    }\r\n    color(value) {\r\n        this.param(value, \"color\", \"co\", Param.norm_color);\r\n        return this;\r\n    }\r\n    colorSpace(value) {\r\n        this.param(value, \"color_space\", \"cs\");\r\n        return this;\r\n    }\r\n    crop(value) {\r\n        this.param(value, \"crop\", \"c\");\r\n        return this;\r\n    }\r\n    customFunction(value) {\r\n        return this.param(value, \"custom_function\", \"fn\", () => {\r\n            return processCustomFunction(value);\r\n        });\r\n    }\r\n    customPreFunction(value) {\r\n        if (this.get('custom_function')) {\r\n            return;\r\n        }\r\n        return this.rawParam(value, \"custom_function\", \"\", () => {\r\n            value = processCustomFunction(value);\r\n            return value ? `fn_pre:${value}` : value;\r\n        });\r\n    }\r\n    defaultImage(value) {\r\n        this.param(value, \"default_image\", \"d\");\r\n        return this;\r\n    }\r\n    delay(value) {\r\n        this.param(value, \"delay\", \"dl\");\r\n        return this;\r\n    }\r\n    density(value) {\r\n        this.param(value, \"density\", \"dn\");\r\n        return this;\r\n    }\r\n    duration(value) {\r\n        this.rangeParam(value, \"duration\", \"du\");\r\n        return this;\r\n    }\r\n    dpr(value) {\r\n        return this.param(value, \"dpr\", \"dpr\", (dpr) => {\r\n            dpr = dpr.toString();\r\n            if (dpr != null ? dpr.match(/^\\d+$/) : void 0) {\r\n                return dpr + \".0\";\r\n            }\r\n            else {\r\n                return Expression.normalize(dpr);\r\n            }\r\n        });\r\n    }\r\n    effect(value) {\r\n        this.arrayParam(value, \"effect\", \"e\", \":\", Expression.normalize);\r\n        return this;\r\n    }\r\n    else() {\r\n        return this.if('else');\r\n    }\r\n    endIf() {\r\n        return this.if('end');\r\n    }\r\n    endOffset(value) {\r\n        this.rangeParam(value, \"end_offset\", \"eo\");\r\n        return this;\r\n    }\r\n    fallbackContent(value) {\r\n        this.param(value, \"fallback_content\");\r\n        return this;\r\n    }\r\n    fetchFormat(value) {\r\n        this.param(value, \"fetch_format\", \"f\");\r\n        return this;\r\n    }\r\n    format(value) {\r\n        this.param(value, \"format\");\r\n        return this;\r\n    }\r\n    flags(value) {\r\n        this.arrayParam(value, \"flags\", \"fl\", \".\");\r\n        return this;\r\n    }\r\n    gravity(value) {\r\n        this.param(value, \"gravity\", \"g\");\r\n        return this;\r\n    }\r\n    fps(value) {\r\n        return this.param(value, \"fps\", \"fps\", (fps) => {\r\n            if (isString(fps)) {\r\n                return fps;\r\n            }\r\n            else if (Array.isArray(fps)) {\r\n                return fps.join(\"-\");\r\n            }\r\n            else {\r\n                return fps;\r\n            }\r\n        });\r\n    }\r\n    height(value) {\r\n        return this.param(value, \"height\", \"h\", () => {\r\n            if (this.getValue(\"crop\") || this.getValue(\"overlay\") || this.getValue(\"underlay\")) {\r\n                return Expression.normalize(value);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n    htmlHeight(value) {\r\n        this.param(value, \"html_height\");\r\n        return this;\r\n    }\r\n    htmlWidth(value) {\r\n        this.param(value, \"html_width\");\r\n        return this;\r\n    }\r\n    if(value = \"\") {\r\n        var i, ifVal, j, ref, trIf, trRest;\r\n        switch (value) {\r\n            case \"else\":\r\n                this.chain();\r\n                return this.param(value, \"if\", \"if\");\r\n            case \"end\":\r\n                this.chain();\r\n                for (i = j = ref = this.chained.length - 1; j >= 0; i = j += -1) {\r\n                    ifVal = this.chained[i].getValue(\"if\");\r\n                    if (ifVal === \"end\") {\r\n                        break;\r\n                    }\r\n                    else if (ifVal != null) {\r\n                        trIf = Transformation.new().if(ifVal);\r\n                        this.chained[i].remove(\"if\");\r\n                        trRest = this.chained[i];\r\n                        this.chained[i] = Transformation.new().transformation([trIf, trRest]);\r\n                        if (ifVal !== \"else\") {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return this.param(value, \"if\", \"if\");\r\n            case \"\":\r\n                return Condition.new().setParent(this);\r\n            default:\r\n                return this.param(value, \"if\", \"if\", (value) => {\r\n                    return Condition.new(value).toString();\r\n                });\r\n        }\r\n    }\r\n    keyframeInterval(value) {\r\n        this.param(value, \"keyframe_interval\", \"ki\");\r\n        return this;\r\n    }\r\n    ocr(value) {\r\n        this.param(value, \"ocr\", \"ocr\");\r\n        return this;\r\n    }\r\n    offset(value) {\r\n        var end_o, start_o;\r\n        [start_o, end_o] = (isFunction(value != null ? value.split : void 0)) ? value.split('..') : Array.isArray(value) ? value : [null, null];\r\n        if (start_o != null) {\r\n            this.startOffset(start_o);\r\n        }\r\n        if (end_o != null) {\r\n            return this.endOffset(end_o);\r\n        }\r\n    }\r\n    opacity(value) {\r\n        this.param(value, \"opacity\", \"o\", Expression.normalize);\r\n        return this;\r\n    }\r\n    overlay(value) {\r\n        this.layerParam(value, \"overlay\", \"l\");\r\n        return this;\r\n    }\r\n    page(value) {\r\n        this.param(value, \"page\", \"pg\");\r\n        return this;\r\n    }\r\n    poster(value) {\r\n        this.param(value, \"poster\");\r\n        return this;\r\n    }\r\n    prefix(value) {\r\n        this.param(value, \"prefix\", \"p\");\r\n        return this;\r\n    }\r\n    quality(value) {\r\n        this.param(value, \"quality\", \"q\", Expression.normalize);\r\n        return this;\r\n    }\r\n    radius(value) {\r\n        this.arrayParam(value, \"radius\", \"r\", \":\", Expression.normalize);\r\n        return this;\r\n    }\r\n    rawTransformation(value) {\r\n        this.rawParam(value, \"raw_transformation\");\r\n        return this;\r\n    }\r\n    size(value) {\r\n        let height, width;\r\n        if (isFunction(value != null ? value.split : void 0)) {\r\n            [width, height] = value.split('x');\r\n            this.width(width);\r\n            return this.height(height);\r\n        }\r\n    }\r\n    sourceTypes(value) {\r\n        this.param(value, \"source_types\");\r\n        return this;\r\n    }\r\n    sourceTransformation(value) {\r\n        return this.param(value, \"source_transformation\");\r\n    }\r\n    startOffset(value) {\r\n        this.rangeParam(value, \"start_offset\", \"so\");\r\n        return this;\r\n    }\r\n    streamingProfile(value) {\r\n        this.param(value, \"streaming_profile\", \"sp\");\r\n        return this;\r\n    }\r\n    transformation(value) {\r\n        this.transformationParam(value, \"transformation\", \"t\");\r\n        return this;\r\n    }\r\n    underlay(value) {\r\n        this.layerParam(value, \"underlay\", \"u\");\r\n        return this;\r\n    }\r\n    variable(name, value) {\r\n        this.param(value, name, name);\r\n        return this;\r\n    }\r\n    variables(values) {\r\n        this.arrayParam(values, \"variables\");\r\n        return this;\r\n    }\r\n    videoCodec(value) {\r\n        this.param(value, \"video_codec\", \"vc\", Param.process_video_params);\r\n        return this;\r\n    }\r\n    videoSampling(value) {\r\n        this.param(value, \"video_sampling\", \"vs\");\r\n        return this;\r\n    }\r\n    width(value) {\r\n        this.param(value, \"width\", \"w\", () => {\r\n            if (this.getValue(\"crop\") || this.getValue(\"overlay\") || this.getValue(\"underlay\")) {\r\n                return Expression.normalize(value);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    x(value) {\r\n        this.param(value, \"x\", \"x\", Expression.normalize);\r\n        return this;\r\n    }\r\n    y(value) {\r\n        this.param(value, \"y\", \"y\", Expression.normalize);\r\n        return this;\r\n    }\r\n    zoom(value) {\r\n        this.param(value, \"zoom\", \"z\", Expression.normalize);\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * Transformation Class methods.\r\n * This is a list of the parameters defined in Transformation.\r\n * Values are camelCased.\r\n */\r\nconst methods = [\r\n    \"angle\",\r\n    \"audioCodec\",\r\n    \"audioFrequency\",\r\n    \"aspectRatio\",\r\n    \"background\",\r\n    \"bitRate\",\r\n    \"border\",\r\n    \"color\",\r\n    \"colorSpace\",\r\n    \"crop\",\r\n    \"customFunction\",\r\n    \"customPreFunction\",\r\n    \"defaultImage\",\r\n    \"delay\",\r\n    \"density\",\r\n    \"duration\",\r\n    \"dpr\",\r\n    \"effect\",\r\n    \"else\",\r\n    \"endIf\",\r\n    \"endOffset\",\r\n    \"fallbackContent\",\r\n    \"fetchFormat\",\r\n    \"format\",\r\n    \"flags\",\r\n    \"gravity\",\r\n    \"fps\",\r\n    \"height\",\r\n    \"htmlHeight\",\r\n    \"htmlWidth\",\r\n    \"if\",\r\n    \"keyframeInterval\",\r\n    \"ocr\",\r\n    \"offset\",\r\n    \"opacity\",\r\n    \"overlay\",\r\n    \"page\",\r\n    \"poster\",\r\n    \"prefix\",\r\n    \"quality\",\r\n    \"radius\",\r\n    \"rawTransformation\",\r\n    \"size\",\r\n    \"sourceTypes\",\r\n    \"sourceTransformation\",\r\n    \"startOffset\",\r\n    \"streamingProfile\",\r\n    \"transformation\",\r\n    \"underlay\",\r\n    \"variable\",\r\n    \"variables\",\r\n    \"videoCodec\",\r\n    \"videoSampling\",\r\n    \"width\",\r\n    \"x\",\r\n    \"y\",\r\n    \"zoom\"\r\n];\r\n/**\r\n * Parameters that are filtered out before passing the options to an HTML tag.\r\n *\r\n * The list of parameters is a combination of `Transformation::methods` and `Configuration::CONFIG_PARAMS`\r\n */\r\nconst PARAM_NAMES = methods.map(snakeCase).concat(CONFIG_PARAMS);\r\nexport default Transformation;\r\n", "import Expression from \"../expression.js\";\r\n/**\r\n * Process DPR value. If input is 1 returns 1.0\r\n * @param value\r\n */\r\nexport function processDpr(value) {\r\n    let dpr = value.toString();\r\n    if (dpr != null ? dpr.match(/^\\d+$/) : void 0) {\r\n        return dpr + \".0\";\r\n    }\r\n    else {\r\n        return Expression.normalize(dpr);\r\n    }\r\n}\r\n", "import { processLayer } from \"./transformationProcessing/processLayer.js\";\r\nimport { process_if } from \"./transformationProcessing/processIf.js\";\r\nimport { toArray } from \"./utils/toArray.js\";\r\nimport { processRadius } from \"./transformationProcessing/processRadius.js\";\r\nimport { isObject } from \"./utils/isObject.js\";\r\nimport { processCustomFunction } from \"./transformationProcessing/processCustomFunction.js\";\r\nimport { processCustomPreFunction } from \"./transformationProcessing/processCustomPreFunction.js\";\r\nimport { splitRange } from \"./utils/splitRange.js\";\r\nimport { legacyNormalizeExpression } from \"./utils/legacyNormalizeExpression.js\";\r\nimport { normRangeValues } from \"./utils/norm_range_values.js\";\r\nimport { processVideoParams } from \"./transformationProcessing/processVideoParams.js\";\r\nimport Transformation from \"./transformation.js\";\r\nimport { processDpr } from \"./transformationProcessing/processDpr.js\";\r\nimport { isNumberLike } from \"./utils/isNumberLike.js\";\r\n/**\r\n * Things dropped\r\n * - responsive_width\r\n * - config().dpr\r\n * - SSL Detected\r\n * - Provisioning API\r\n * - Magical configuration auto-mapping (everything has to be explicit)\r\n * - Signatures\r\n * - Secure is default true\r\n * @param transformationOptions\r\n */\r\nexport function generateTransformationString(transformationOptions) {\r\n    if (typeof transformationOptions === 'string') {\r\n        return transformationOptions;\r\n    }\r\n    if (transformationOptions instanceof Transformation) {\r\n        return transformationOptions.toString();\r\n    }\r\n    if (Array.isArray(transformationOptions)) {\r\n        return transformationOptions\r\n            .map((singleTransformation) => {\r\n            return generateTransformationString(singleTransformation);\r\n        }).filter((a) => { return a; }).join('/');\r\n    }\r\n    // let responsive_width = consumeOption(transformationOptions, \"responsive_width\", config().responsive_width);\r\n    let width;\r\n    let height;\r\n    const size = transformationOptions.size;\r\n    const hasLayer = transformationOptions.overlay || transformationOptions.underlay;\r\n    const crop = transformationOptions.crop;\r\n    const angle = toArray(transformationOptions.angle).join(\".\");\r\n    const background = (transformationOptions.background || '').replace(/^#/, \"rgb:\");\r\n    const color = (transformationOptions.color || '').replace(/^#/, \"rgb:\");\r\n    const flags = (toArray(transformationOptions.flags || [])).join('.');\r\n    const dpr = transformationOptions.dpr === undefined ? transformationOptions.dpr : processDpr(transformationOptions.dpr);\r\n    const overlay = processLayer(transformationOptions.overlay);\r\n    const radius = processRadius(transformationOptions.radius);\r\n    const underlay = processLayer(transformationOptions.underlay);\r\n    const ifValue = process_if(transformationOptions.if);\r\n    const custom_function = processCustomFunction(transformationOptions.custom_function);\r\n    const custom_pre_function = processCustomPreFunction(transformationOptions.custom_pre_function);\r\n    // These will change down the line, heads up!\r\n    let fps = transformationOptions.fps;\r\n    let namedTransformations = [];\r\n    let childTransformations = toArray(transformationOptions.transformation || []);\r\n    let effect = transformationOptions.effect;\r\n    // TODO, Do we need this?\r\n    const no_html_sizes = hasLayer || angle || crop === \"fit\" || crop === \"limit\";\r\n    if (size) {\r\n        const [sizeWidth, sizeHeight] = size.split(\"x\");\r\n        width = sizeWidth;\r\n        height = sizeHeight;\r\n    }\r\n    else {\r\n        width = transformationOptions.width;\r\n        height = transformationOptions.height;\r\n    }\r\n    if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width.toString()) < 1)) {\r\n        delete transformationOptions.width;\r\n    }\r\n    if (height && (no_html_sizes || parseFloat(height.toString()) < 1)) {\r\n        delete transformationOptions.height;\r\n    }\r\n    // Is any child transformation an object?\r\n    const isAnyChildAnObject = childTransformations.some((transformation) => typeof transformation === 'object');\r\n    // If array of objects, or array of strings?\r\n    if (isAnyChildAnObject) {\r\n        childTransformations = childTransformations.map((transformation) => {\r\n            if (isObject(transformation)) {\r\n                return generateTransformationString(transformation);\r\n            }\r\n            else {\r\n                return generateTransformationString({ transformation });\r\n            }\r\n        }).filter((a) => a);\r\n    }\r\n    else {\r\n        namedTransformations = childTransformations.join(\".\");\r\n        childTransformations = []; // Reset child transfomrations\r\n    }\r\n    if (Array.isArray(effect)) {\r\n        effect = effect.join(\":\");\r\n    }\r\n    else if (isObject(effect)) {\r\n        effect = Object.entries(effect).map(([key, value]) => `${key}:${value}`);\r\n    }\r\n    let border = transformationOptions.border;\r\n    if (isObject(border)) {\r\n        border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        if (/^\\d+$/.exec(border)) { // fallback to html border attributes\r\n            transformationOptions.border = border;\r\n            border = void 0;\r\n        }\r\n    }\r\n    if (Array.isArray(fps)) {\r\n        fps = fps.join('-');\r\n    }\r\n    // ocr(value) {\r\n    //   return this.param(value, \"ocr\", \"ocr\");\r\n    // }\r\n    const urlParams = {\r\n        a: legacyNormalizeExpression(angle),\r\n        ar: legacyNormalizeExpression(transformationOptions.aspect_ratio),\r\n        b: background,\r\n        bo: border,\r\n        c: crop,\r\n        co: color,\r\n        dpr: legacyNormalizeExpression(dpr),\r\n        e: legacyNormalizeExpression(effect),\r\n        fl: flags,\r\n        fn: custom_function || custom_pre_function,\r\n        fps: fps,\r\n        h: legacyNormalizeExpression(height),\r\n        ki: legacyNormalizeExpression(transformationOptions.keyframe_interval),\r\n        l: overlay,\r\n        o: legacyNormalizeExpression(transformationOptions.opacity),\r\n        q: legacyNormalizeExpression(transformationOptions.quality),\r\n        r: radius,\r\n        t: namedTransformations,\r\n        u: underlay,\r\n        w: legacyNormalizeExpression(width),\r\n        x: legacyNormalizeExpression(transformationOptions.x),\r\n        y: legacyNormalizeExpression(transformationOptions.y),\r\n        z: legacyNormalizeExpression(transformationOptions.zoom),\r\n        ac: transformationOptions.audio_codec,\r\n        af: transformationOptions.audio_frequency,\r\n        br: transformationOptions.bit_rate,\r\n        cs: transformationOptions.color_space,\r\n        d: transformationOptions.default_image,\r\n        dl: transformationOptions.delay,\r\n        dn: transformationOptions.density,\r\n        du: normRangeValues(transformationOptions.duration),\r\n        eo: normRangeValues(transformationOptions.end_offset || isNumberLike(transformationOptions.end_offset) ? transformationOptions.end_offset : splitRange(transformationOptions.offset)[1]),\r\n        f: transformationOptions.fetch_format,\r\n        g: transformationOptions.gravity,\r\n        pg: transformationOptions.page,\r\n        p: transformationOptions.prefix,\r\n        so: normRangeValues(transformationOptions.start_offset || isNumberLike(transformationOptions.start_offset) ? transformationOptions.start_offset : splitRange(transformationOptions.offset)[0]),\r\n        sp: transformationOptions.streaming_profile,\r\n        vc: processVideoParams(transformationOptions.video_codec),\r\n        vs: transformationOptions.video_sampling\r\n    };\r\n    // We can accept variables in here transformationOptions, or in here transformationOptions.variables\r\n    const variables = Object.entries(transformationOptions)\r\n        .filter(([key, value]) => key.startsWith('$'))\r\n        .map(([key, value]) => {\r\n        // delete transformationOptions[key]; // Delete the variables, so we don't add them twice\r\n        return `${key}_${legacyNormalizeExpression(value)}`;\r\n    }).sort().concat(\r\n    // @ts-ignore\r\n    (transformationOptions.variables || []).map(([name, value]) => `${name}_${legacyNormalizeExpression(value)}`)).join(',');\r\n    // Clean up!\r\n    const urlImageTransfomrations = Object.entries(urlParams)\r\n        .filter(([key, value]) => {\r\n        if (typeof value === 'undefined' || value === null) {\r\n            return false;\r\n        }\r\n        if (typeof value === 'string' && value.length === 0) {\r\n            return false;\r\n        }\r\n        if (Array.isArray(value) && value.length === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    })\r\n        .map(([key, value]) => `${key}_${value}`)\r\n        .sort()\r\n        .join(',');\r\n    const finalTransformationString = [\r\n        ifValue,\r\n        variables,\r\n        urlImageTransfomrations,\r\n        transformationOptions.raw_transformation\r\n    ].filter((a) => a).join(\",\");\r\n    if (finalTransformationString) {\r\n        childTransformations.push(finalTransformationString);\r\n    }\r\n    // console.log(childTransformations);\r\n    return childTransformations.join(\"/\");\r\n}\r\nexport const transformationStringFromObject = generateTransformationString;\r\n", "export function finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten) {\r\n    if (type == null) {\r\n        type = 'upload';\r\n    }\r\n    if (url_suffix != null) {\r\n        if (resource_type === 'image' && type === 'upload') {\r\n            resource_type = \"images\";\r\n            type = null;\r\n        }\r\n        else if (resource_type === 'image' && type === 'private') {\r\n            resource_type = 'private_images';\r\n            type = null;\r\n        }\r\n        else if (resource_type === 'image' && type === 'authenticated') {\r\n            resource_type = 'authenticated_images';\r\n            type = null;\r\n        }\r\n        else if (resource_type === 'raw' && type === 'upload') {\r\n            resource_type = 'files';\r\n            type = null;\r\n        }\r\n        else if (resource_type === 'video' && type === 'upload') {\r\n            resource_type = 'videos';\r\n            type = null;\r\n        }\r\n        else {\r\n            throw new Error(\"URL Suffix only supported for image/upload, image/private, image/authenticated, video/upload and raw/upload\");\r\n        }\r\n    }\r\n    if (use_root_path) {\r\n        if ((resource_type === 'image' && type === 'upload') || (resource_type === 'images' && (type == null))) {\r\n            resource_type = null;\r\n            type = null;\r\n        }\r\n        else {\r\n            throw new Error(\"Root path only supported for image/upload\");\r\n        }\r\n    }\r\n    if (shorten && resource_type === 'image' && type === 'upload') {\r\n        resource_type = 'iu';\r\n        type = null;\r\n    }\r\n    return [resource_type, type];\r\n}\r\n", "import { smartEscape } from \"./smartEscape.js\";\r\nexport function finalize_source(source, format, url_suffix) {\r\n    let source_to_sign;\r\n    source = source.replace(/([^:])\\/\\//g, '$1/');\r\n    if (source.match(/^https?:\\//i)) {\r\n        source = smartEscape(source);\r\n        source_to_sign = source;\r\n    }\r\n    else {\r\n        source = encodeURIComponent(decodeURIComponent(source)).replace(/%3A/g, \":\").replace(/%2F/g, \"/\");\r\n        source_to_sign = source;\r\n        if (url_suffix) {\r\n            if (url_suffix.match(/[\\.\\/]/)) {\r\n                throw new Error('url_suffix should not include . or /');\r\n            }\r\n            source = source + '/' + url_suffix;\r\n        }\r\n        if (format != null) {\r\n            source = source + '.' + format;\r\n            source_to_sign = source_to_sign + '.' + format;\r\n        }\r\n    }\r\n    return [source, source_to_sign];\r\n}\r\n", "import { OLD_AKAMAI_SHARED_CDN, SHARED_CDN } from \"../consts.js\";\r\nexport function unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution) {\r\n    let prefix;\r\n    if (cloud_name.indexOf(\"/\") === 0) {\r\n        return '/res' + cloud_name;\r\n    }\r\n    let shared_domain = !private_cdn;\r\n    if (secure) {\r\n        if ((secure_distribution == null) || secure_distribution === OLD_AKAMAI_SHARED_CDN) {\r\n            secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : SHARED_CDN;\r\n        }\r\n        if (shared_domain == null) {\r\n            shared_domain = secure_distribution === SHARED_CDN;\r\n        }\r\n        prefix = 'https://' + secure_distribution;\r\n    }\r\n    else if (cname) {\r\n        // let subdomain = cdn_subdomain ? 'a' + ((crc32(source) % 5) + 1) + '.' : '';\r\n        prefix = 'http://' + cname;\r\n    }\r\n    else {\r\n        let cdn_part = private_cdn ? cloud_name + '-' : '';\r\n        let host = [cdn_part, 'res', '.cloudinary.com'].join('');\r\n        prefix = 'http://' + host;\r\n    }\r\n    if (shared_domain) {\r\n        prefix += '/' + cloud_name;\r\n    }\r\n    return prefix;\r\n}\r\n", "import { generateTransformationString } from \"./generateTransformationString.js\";\r\nimport { finalize_resource_type } from \"./utils/finalizeResourceType.js\";\r\nimport { finalize_source } from \"./utils/finalize_source.js\";\r\nimport { unsigned_url_prefix } from \"./utils/unsigned_url_prefix.js\";\r\nimport { cloneDeep } from '../internal/utils/cloneDeep.js';\r\nexport function createCloudinaryLegacyURL(public_id, transformationOptions) {\r\n    // Path format\r\n    if (transformationOptions.type === \"fetch\") {\r\n        if (transformationOptions.fetch_format == null) {\r\n            transformationOptions.fetch_format = transformationOptions.format;\r\n        }\r\n    }\r\n    let source_to_sign;\r\n    let type = transformationOptions.type;\r\n    let resource_type = transformationOptions.resource_type || 'image';\r\n    let version = transformationOptions.version;\r\n    const force_version = typeof transformationOptions.force_version === 'boolean' ? transformationOptions.force_version : true;\r\n    const long_url_signature = !!transformationOptions.long_url_signature;\r\n    const format = transformationOptions.format;\r\n    const cloud_name = transformationOptions.cloud_name;\r\n    if (!cloud_name) {\r\n        throw \"cloud_name must be provided in the configuration\";\r\n    }\r\n    const private_cdn = transformationOptions.private_cdn;\r\n    const secure_distribution = transformationOptions.secure_distribution;\r\n    const secure = transformationOptions.secure;\r\n    const cdn_subdomain = transformationOptions.cdn_subdomain;\r\n    const secure_cdn_subdomain = transformationOptions.secure_cdn_subdomain;\r\n    const cname = transformationOptions.cname;\r\n    const shorten = transformationOptions.shorten;\r\n    const sign_url = transformationOptions.sign_url;\r\n    const api_secret = transformationOptions.api_secret;\r\n    const url_suffix = transformationOptions.url_suffix;\r\n    const use_root_path = transformationOptions.use_root_path;\r\n    const auth_token = transformationOptions.auth_token;\r\n    const preloaded = /^(image|raw)\\/([a-z0-9_]+)\\/v(\\d+)\\/([^#]+)$/.exec(public_id);\r\n    if (preloaded) {\r\n        resource_type = preloaded[1];\r\n        type = preloaded[2];\r\n        version = preloaded[3];\r\n        public_id = preloaded[4];\r\n    }\r\n    const original_source = public_id;\r\n    if (public_id == null) {\r\n        return original_source;\r\n    }\r\n    public_id = public_id.toString();\r\n    if (type === null && public_id.match(/^https?:\\//i)) {\r\n        return original_source;\r\n    }\r\n    [resource_type, type] = finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten);\r\n    [public_id, source_to_sign] = finalize_source(public_id, format, url_suffix);\r\n    if (version == null && force_version && source_to_sign.indexOf(\"/\") >= 0 && !source_to_sign.match(/^v[0-9]+/) && !source_to_sign.match(/^https?:\\//)) {\r\n        version = 1;\r\n    }\r\n    if (version != null) {\r\n        version = `v${version}`;\r\n    }\r\n    else {\r\n        version = null;\r\n    }\r\n    const transformation = generateTransformationString(cloneDeep(transformationOptions)).replace(/([^:])\\/\\//g, '$1/');\r\n    ;\r\n    if (sign_url && !auth_token) {\r\n        let to_sign = [transformation, source_to_sign].filter(function (part) {\r\n            return (part != null) && part !== '';\r\n        }).join('/');\r\n        try {\r\n            for (let i = 0; to_sign !== decodeURIComponent(to_sign) && i < 10; i++) {\r\n                to_sign = decodeURIComponent(to_sign);\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n        catch (error) {\r\n        }\r\n        // No support for Auth Token\r\n        // const shasum = crypto.createHash(long_url_signature ? 'sha256' : 'sha1');\r\n        // shasum.update(utf8_encode(to_sign + api_secret), 'binary');\r\n        // signature = shasum.digest('base64').replace(/\\//g, '_').replace(/\\+/g, '-').substring(0, long_url_signature ? 32 : 8);\r\n        // signature = `s--${signature}--`;\r\n    }\r\n    const prefix = unsigned_url_prefix(public_id, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution);\r\n    const resultUrl = [prefix, resource_type, type, transformation, version, public_id].filter(function (part) {\r\n        return (part != null) && part !== '';\r\n    }).join('/').replace(' ', '%20');\r\n    return resultUrl;\r\n}\r\n", "export { Resize } from \"./actions/resize.js\";\r\nexport { Border } from \"./actions/border.js\";\r\nexport { RoundCorners } from \"./actions/roundCorners.js\";\r\nexport { Effect } from \"./actions/effect.js\";\r\nexport { Rotate } from \"./actions/rotate.js\";\r\nexport { Adjust } from \"./actions/adjust.js\";\r\nexport { Overlay } from \"./actions/overlay.js\";\r\nexport { Underlay } from \"./actions/underlay.js\";\r\nexport { NamedTransformation } from \"./actions/namedTransformation.js\";\r\nexport { Delivery } from \"./actions/delivery.js\";\r\nexport { CustomFunction } from \"./actions/customFunction.js\";\r\nexport { VideoEdit } from \"./actions/videoEdit.js\";\r\nexport { Transcode } from \"./actions/transcode.js\";\r\nexport { PSDTools } from \"./actions/psdTools.js\";\r\nexport { Animated } from \"./actions/animated.js\";\r\n", "export { TextDecoration } from \"./qualifiers/textDecoration.js\";\r\nexport { TextAlignment } from \"./qualifiers/textAlignment.js\";\r\nexport { Stroke } from \"./qualifiers/textStroke.js\";\r\nexport { StreamingProfile } from \"./qualifiers/streamingProfile.js\";\r\nexport { SimulateColorBlind } from \"./qualifiers/simulateColorBlind.js\";\r\nexport { RotationMode } from \"./qualifiers/rotationMode.js\";\r\nexport { Region } from \"./qualifiers/region.js\";\r\nexport { Quality } from \"./qualifiers/quality.js\";\r\nexport { Position } from \"./qualifiers/position.js\";\r\nexport { OutlineMode } from \"./qualifiers/outlineMode.js\";\r\nexport { ImproveMode } from \"./qualifiers/improveMode.js\";\r\nexport { GradientDirection } from \"./qualifiers/gradientDirection.js\";\r\nexport { Format } from \"./qualifiers/format.js\";\r\nexport { FontWeight } from \"./qualifiers/fontWeight.js\";\r\nexport { FontStyle } from \"./qualifiers/fontStyle.js\";\r\nexport { FontHinting } from \"./qualifiers/fontHinting.js\";\r\nexport { Expression } from \"./qualifiers/expression.js\";\r\nexport { Dither } from \"./qualifiers/dither.js\";\r\nexport { ColorSpace } from \"./qualifiers/colorSpace.js\";\r\nexport { Color } from \"./qualifiers/color.js\";\r\nexport { Background } from \"./qualifiers/background.js\";\r\nexport { AudioFrequency } from \"./qualifiers/audioFrequency.js\";\r\nexport { AudioCodec } from \"./qualifiers/audioCodec.js\";\r\nexport { AspectRatio } from \"./qualifiers/aspectRatio.js\";\r\nexport { ArtisticFilter } from \"./qualifiers/artisticFilter.js\";\r\nexport { AnimatedFormat } from \"./qualifiers/animatedFormat.js\";\r\nexport { Gravity } from \"./qualifiers/gravity.js\";\r\nexport { ChromaSubSampling } from \"./qualifiers/chromaSubSampling.js\";\r\nexport { Dpr } from \"./qualifiers/dpr.js\";\r\nexport { Source } from \"./qualifiers/source.js\";\r\nexport { GradientFade } from \"./qualifiers/GradientFade.js\";\r\n"],
  "mappings": "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",
  "names": ["Promise", "isObject", "Promise", "isObject", "isObject", "num", "border", "quality", "format", "color", "LARGE_ARRAY_SIZE", "HASH_UNDEFINED", "argsTag", "arrayTag", "boolTag", "dateTag", "errorTag", "funcTag", "genTag", "mapTag", "numberTag", "objectTag", "promiseTag", "regexpTag", "setTag", "stringTag", "symbolTag", "weakMapTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "reRegExpChar", "reIsHostCtor", "cloneableTags", "freeGlobal", "freeSelf", "root", "freeExports", "freeModule", "moduleExports", "getValue", "isHostObject", "overArg", "arrayProto", "funcProto", "objectProto", "coreJsData", "maskSrcKey", "funcToString", "hasOwnProperty", "objectToString", "reIsNative", "Buffer", "Symbol", "Uint8Array", "getPrototype", "propertyIsEnumerable", "splice", "nativeGetSymbols", "nativeIsBuffer", "nativeKeys", "DataView", "getNative", "Map", "Promise", "Set", "WeakMap", "nativeCreate", "dataViewCtorString", "toSource", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "symbolProto", "symbolValueOf", "Hash", "hashClear", "hashDelete", "hashGet", "hashHas", "hashSet", "ListCache", "listCacheClear", "listCacheDelete", "assocIndexOf", "listCacheGet", "listCacheHas", "listCacheSet", "MapCache", "mapCacheClear", "mapCacheDelete", "getMapData", "mapCacheGet", "mapCacheHas", "mapCacheSet", "Stack", "stackClear", "stackDelete", "stackGet", "stackHas", "stackSet", "isArray", "eq", "source", "isObject", "getTag", "key", "baseGetTag", "baseIsNative", "isMasked", "isFunction", "getSymbols", "isKeyable", "stubArray", "cloneDeep", "cloneDeep", "isObject", "base64Encode", "LEGACY_CONDITIONAL_OPERATORS", "OLD_AKAMAI_SHARED_CDN", "SHARED_CDN", "LEGACY_PREDEFINED_VARS", "NUMBER_PATTERN", "OFFSET_ANY_PATTERN", "RANGE_VALUE_RE", "OFFSET_ANY_PATTERN_RE", "LAYER_KEYWORD_PARAMS", "smartEscape", "snakeCase", "snakeCase", "layer_default", "isEmpty", "isNumberLike", "layer_default", "keys", "snakeCase", "format", "text", "start", "isEmpty", "smartEscape", "isNumberLike", "textlayer_default", "LAYER_KEYWORD_PARAMS", "processLayer", "textlayer_default", "layer_default", "isObject", "base64Encode", "format", "text", "start", "smartEscape", "legacyNormalizeExpression", "expression", "LEGACY_CONDITIONAL_OPERATORS", "LEGACY_PREDEFINED_VARS", "process_if", "legacyNormalizeExpression", "toArray", "processRadius", "legacyNormalizeExpression", "processCustomFunction", "isObject", "base64Encode", "processCustomPreFunction", "processCustomFunction", "splitRange", "OFFSET_ANY_PATTERN_RE", "normRangeValues", "RANGE_VALUE_RE", "processVideoParams", "video", "Expression", "expression", "name", "expression_default", "Expression", "expression_default", "condition_default", "DEFAULT_CONFIGURATION_PARAMS", "CONFIG_PARAMS", "withCamelCaseKeys", "source", "camelCase", "reWords", "isEmpty", "identity", "contains", "difference", "textlayer_default", "subtitleslayer_default", "isString", "layer_default", "isString", "base64Encode", "fetchlayer_default", "isFunction", "source", "isString", "name", "process", "identity", "isObject", "isEmpty", "video", "isFunction", "Transformation", "number_pattern", "offset_any_pattern", "layer_default", "withCamelCaseKeys", "textlayer_default", "subtitleslayer_default", "fetchlayer_default", "snakeCase", "cloneDeep", "camelCase", "contains", "methods", "difference", "expression_default", "PARAM_NAMES", "processCustomFunction", "border", "dpr", "fps", "condition_default", "value", "CONFIG_PARAMS", "transformation_default", "processDpr", "dpr", "expression_default", "generateTransformationString", "transformation_default", "toArray", "color", "dpr", "processDpr", "processLayer", "processRadius", "process_if", "processCustomFunction", "processCustomPreFunction", "fps", "isObject", "border", "legacyNormalizeExpression", "normRangeValues", "isNumberLike", "splitRange", "processVideoParams", "name", "finalize_resource_type", "finalize_source", "source", "format", "smartEscape", "unsigned_url_prefix", "source", "OLD_AKAMAI_SHARED_CDN", "SHARED_CDN", "createCloudinaryLegacyURL", "format", "finalize_resource_type", "finalize_source", "generateTransformationString", "cloneDeep", "unsigned_url_prefix", "actions_exports", "qualifiers_exports"]
}
